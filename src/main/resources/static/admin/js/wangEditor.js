<!DOCTYPE html><html lang="en"><head><script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-140352188-1"></script><script>window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-140352188-1');</script><meta charSet="utf-8"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="description" content="The CDN for wangeditor"/><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="timestamp" content="2021-01-14T06:03:22.325Z"/><link rel="shortcut icon" href="/favicon.ico"/><title>UNPKG - wangeditor</title><script>window.Promise || document.write('\x3Cscript src="/es6-promise@4.2.5/dist/es6-promise.min.js">\x3C/script>\x3Cscript>ES6Promise.polyfill()\x3C/script>')</script><script>window.fetch || document.write('\x3Cscript src="/whatwg-fetch@3.0.0/dist/fetch.umd.js">\x3C/script>')</script><script>window.__DATA__ = {"packageName":"wangeditor","packageVersion":"4.6.2","availableVersions":["2.0.1-5.1","2.0.1-6.1","2.0.1-6.2","2.0.1-8.1","2.0.14","2.0.15","2.0.16","2.0.17","2.0.18","2.0.19","2.0.20","2.0.21","2.1.0","2.1.1","2.1.2","2.1.3","2.1.4","2.1.5","2.1.6","2.1.7","2.1.8","2.1.9","2.1.10","2.1.11","2.1.12","2.1.13","2.1.14","2.1.15","2.1.16","2.1.18","2.1.19","2.1.20","2.1.21","2.1.22","2.1.23","3.0.0","3.0.1","3.0.2","3.0.3","3.0.4","3.0.5","3.0.6","3.0.7","3.0.8","3.0.9","3.0.10","3.0.11","3.0.12","3.0.13","3.0.14","3.0.15","3.0.16","3.0.17","3.1.0","3.1.1","4.0.0","4.0.1","4.0.2","4.0.3","4.0.4","4.0.5","4.0.6","4.0.7","4.0.8","4.1.0","4.2.0","4.2.1","4.2.2","4.3.0","4.4.0","4.4.1","4.4.2","4.5.0","4.5.1","4.5.2","4.5.3","4.5.4","4.6.0","4.6.1","4.6.2"],"filename":"/dist/wangEditor.js","target":{"path":"/dist/wangEditor.js","type":"file","details":{"contentType":"application/javascript","integrity":"sha384-AI7h68hBA8Dk4g3lclipI8TImXCaa4kbxuOtII8VrbDmt/jyB5V3mw/TLZJZ+T6+","language":"JavaScript","size":624933,"uri":null,"highlights":["(<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">webpackUniversalModuleDefinition</span>(<span class=\"code-params\">root, factory</span>) </span>{\n","\t<span class=\"code-keyword\">if</span>(<span class=\"code-keyword\">typeof</span> exports === <span class=\"code-string\">'object'</span> &amp;&amp; <span class=\"code-keyword\">typeof</span> <span class=\"code-built_in\">module</span> === <span class=\"code-string\">'object'</span>)\n","\t\t<span class=\"code-built_in\">module</span>.exports = factory();\n","\t<span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span>(<span class=\"code-keyword\">typeof</span> define === <span class=\"code-string\">'function'</span> &amp;&amp; define.amd)\n","\t\tdefine([], factory);\n","\t<span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span>(<span class=\"code-keyword\">typeof</span> exports === <span class=\"code-string\">'object'</span>)\n","\t\texports[<span class=\"code-string\">\"wangEditor\"</span>] = factory();\n","\t<span class=\"code-keyword\">else</span>\n","\t\troot[<span class=\"code-string\">\"wangEditor\"</span>] = factory();\n","})(<span class=\"code-built_in\">window</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\"></span>) </span>{\n","<span class=\"code-keyword\">return</span> <span class=\"code-comment\">/******/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">modules</span>) </span>{ <span class=\"code-comment\">// webpackBootstrap</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// The module cache</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-keyword\">var</span> installedModules = {};\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// The require function</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">__webpack_require__</span>(<span class=\"code-params\">moduleId</span>) </span>{\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-comment\">// Check if module is in cache</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">if</span>(installedModules[moduleId]) {\n","<span class=\"code-comment\">/******/</span> \t\t\t<span class=\"code-keyword\">return</span> installedModules[moduleId].exports;\n","<span class=\"code-comment\">/******/</span> \t\t}\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-comment\">// Create a new module (and put it into the cache)</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">module</span> = installedModules[moduleId] = {\n","<span class=\"code-comment\">/******/</span> \t\t\ti: moduleId,\n","<span class=\"code-comment\">/******/</span> \t\t\tl: <span class=\"code-literal\">false</span>,\n","<span class=\"code-comment\">/******/</span> \t\t\texports: {}\n","<span class=\"code-comment\">/******/</span> \t\t};\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-comment\">// Execute the module function</span>\n","<span class=\"code-comment\">/******/</span> \t\tmodules[moduleId].call(<span class=\"code-built_in\">module</span>.exports, <span class=\"code-built_in\">module</span>, <span class=\"code-built_in\">module</span>.exports, __webpack_require__);\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-comment\">// Flag the module as loaded</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-built_in\">module</span>.l = <span class=\"code-literal\">true</span>;\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-comment\">// Return the exports of the module</span>\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">return</span> <span class=\"code-built_in\">module</span>.exports;\n","<span class=\"code-comment\">/******/</span> \t}\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// expose the modules object (__webpack_modules__)</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.m = modules;\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// expose the module cache</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.c = installedModules;\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// define getter function for harmony exports</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.d = <span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">exports, name, getter</span>) </span>{\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">if</span>(!__webpack_require__.o(exports, name)) {\n","<span class=\"code-comment\">/******/</span> \t\t\t<span class=\"code-built_in\">Object</span>.defineProperty(exports, name, { <span class=\"code-attr\">enumerable</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">get</span>: getter });\n","<span class=\"code-comment\">/******/</span> \t\t}\n","<span class=\"code-comment\">/******/</span> \t};\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// define __esModule on exports</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.r = <span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">exports</span>) </span>{\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">if</span>(<span class=\"code-keyword\">typeof</span> <span class=\"code-built_in\">Symbol</span> !== <span class=\"code-string\">'undefined'</span> &amp;&amp; <span class=\"code-built_in\">Symbol</span>.toStringTag) {\n","<span class=\"code-comment\">/******/</span> \t\t\t<span class=\"code-built_in\">Object</span>.defineProperty(exports, <span class=\"code-built_in\">Symbol</span>.toStringTag, { <span class=\"code-attr\">value</span>: <span class=\"code-string\">'Module'</span> });\n","<span class=\"code-comment\">/******/</span> \t\t}\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-built_in\">Object</span>.defineProperty(exports, <span class=\"code-string\">'__esModule'</span>, { <span class=\"code-attr\">value</span>: <span class=\"code-literal\">true</span> });\n","<span class=\"code-comment\">/******/</span> \t};\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// create a fake namespace object</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// mode &amp; 1: value is a module id, require it</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// mode &amp; 2: merge all properties of value into the ns</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// mode &amp; 4: return value when already ns object</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// mode &amp; 8|1: behave like require</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.t = <span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">value, mode</span>) </span>{\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">if</span>(mode &amp; <span class=\"code-number\">1</span>) value = __webpack_require__(value);\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">if</span>(mode &amp; <span class=\"code-number\">8</span>) <span class=\"code-keyword\">return</span> value;\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">if</span>((mode &amp; <span class=\"code-number\">4</span>) &amp;&amp; <span class=\"code-keyword\">typeof</span> value === <span class=\"code-string\">'object'</span> &amp;&amp; value &amp;&amp; value.__esModule) <span class=\"code-keyword\">return</span> value;\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">var</span> ns = <span class=\"code-built_in\">Object</span>.create(<span class=\"code-literal\">null</span>);\n","<span class=\"code-comment\">/******/</span> \t\t__webpack_require__.r(ns);\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-built_in\">Object</span>.defineProperty(ns, <span class=\"code-string\">'default'</span>, { <span class=\"code-attr\">enumerable</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">value</span>: value });\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">if</span>(mode &amp; <span class=\"code-number\">2</span> &amp;&amp; <span class=\"code-keyword\">typeof</span> value != <span class=\"code-string\">'string'</span>) <span class=\"code-keyword\">for</span>(<span class=\"code-keyword\">var</span> key <span class=\"code-keyword\">in</span> value) __webpack_require__.d(ns, key, <span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">key</span>) </span>{ <span class=\"code-keyword\">return</span> value[key]; }.bind(<span class=\"code-literal\">null</span>, key));\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">return</span> ns;\n","<span class=\"code-comment\">/******/</span> \t};\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// getDefaultExport function for compatibility with non-harmony modules</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.n = <span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module</span>) </span>{\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">var</span> getter = <span class=\"code-built_in\">module</span> &amp;&amp; <span class=\"code-built_in\">module</span>.__esModule ?\n","<span class=\"code-comment\">/******/</span> \t\t\t<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getDefault</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">module</span>[<span class=\"code-string\">'default'</span>]; } :\n","<span class=\"code-comment\">/******/</span> \t\t\t<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getModuleExports</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">module</span>; };\n","<span class=\"code-comment\">/******/</span> \t\t__webpack_require__.d(getter, <span class=\"code-string\">'a'</span>, getter);\n","<span class=\"code-comment\">/******/</span> \t\t<span class=\"code-keyword\">return</span> getter;\n","<span class=\"code-comment\">/******/</span> \t};\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// Object.prototype.hasOwnProperty.call</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.o = <span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">object, property</span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(object, property); };\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// __webpack_public_path__</span>\n","<span class=\"code-comment\">/******/</span> \t__webpack_require__.p = <span class=\"code-string\">\"\"</span>;\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-comment\">// Load entry module and return exports</span>\n","<span class=\"code-comment\">/******/</span> \t<span class=\"code-keyword\">return</span> __webpack_require__(__webpack_require__.s = <span class=\"code-number\">129</span>);\n","<span class=\"code-comment\">/******/</span> })\n","<span class=\"code-comment\">/************************************************************************/</span>\n","<span class=\"code-comment\">/******/</span> ([\n","<span class=\"code-comment\">/* 0 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_interopRequireDefault</span>(<span class=\"code-params\">obj</span>) </span>{\n","  <span class=\"code-keyword\">return</span> obj &amp;&amp; obj.__esModule ? obj : {\n","    <span class=\"code-string\">\"default\"</span>: obj\n","  };\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = _interopRequireDefault;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 1 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">130</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 2 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u5C01\u88C5 DOM \u64CD\u4F5C\n</span>","<span class=\"code-comment\"> * @wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _bind = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">88</span>));\n","\n","<span class=\"code-keyword\">var</span> _includes = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">89</span>));\n","\n","<span class=\"code-keyword\">var</span> _filter = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">66</span>));\n","\n","<span class=\"code-keyword\">var</span> _splice = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">90</span>));\n","\n","<span class=\"code-keyword\">var</span> _indexOf = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">54</span>));\n","\n","<span class=\"code-keyword\">var</span> _map = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">114</span>));\n","\n","<span class=\"code-keyword\">var</span> _trim = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">19</span>));\n","\n","<span class=\"code-keyword\">var</span> _map2 = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">29</span>));\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _isArray = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">93</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __spreadArrays = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__spreadArrays || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> s = <span class=\"code-number\">0</span>, i = <span class=\"code-number\">0</span>, il = <span class=\"code-built_in\">arguments</span>.length; i &lt; il; i++) {\n","    s += <span class=\"code-built_in\">arguments</span>[i].length;\n","  }\n","\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> r = <span class=\"code-built_in\">Array</span>(s), k = <span class=\"code-number\">0</span>, i = <span class=\"code-number\">0</span>; i &lt; il; i++) {\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> a = <span class=\"code-built_in\">arguments</span>[i], j = <span class=\"code-number\">0</span>, jl = a.length; j &lt; jl; j++, k++) {\n","      r[k] = a[j];\n","    }\n","  }\n","\n","  <span class=\"code-keyword\">return</span> r;\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports.DomElement = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>;\n","\n","<span class=\"code-keyword\">var</span> util_1 = __webpack_require__(<span class=\"code-number\">7</span>);\n","\n","<span class=\"code-keyword\">var</span> AGENT_EVENTS = [];\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u6839\u636E html \u5B57\u7B26\u4E32\u521B\u5EFA elem\n</span>","<span class=\"code-comment\"> * @param {String} html html\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_createElemByHTML</span>(<span class=\"code-params\">html</span>) </span>{\n","  <span class=\"code-keyword\">var</span> div = <span class=\"code-built_in\">document</span>.createElement(<span class=\"code-string\">'div'</span>);\n","  div.innerHTML = html;\n","  <span class=\"code-keyword\">var</span> elems = div.children;\n","  <span class=\"code-keyword\">return</span> util_1.toArray(elems);\n","}\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5224\u65AD\u662F\u5426\u662F DOM List\n</span>","<span class=\"code-comment\"> * @param selector DOM \u5143\u7D20\u6216\u5217\u8868\n</span>","<span class=\"code-comment\"> */</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_isDOMList</span>(<span class=\"code-params\">selector</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!selector) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  }\n","\n","  <span class=\"code-keyword\">if</span> (selector <span class=\"code-keyword\">instanceof</span> HTMLCollection || selector <span class=\"code-keyword\">instanceof</span> NodeList) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  }\n","\n","  <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","}\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5C01\u88C5 querySelectorAll\n</span>","<span class=\"code-comment\"> * @param selector css \u9009\u62E9\u5668\n</span>","<span class=\"code-comment\"> */</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_querySelectorAll</span>(<span class=\"code-params\">selector</span>) </span>{\n","  <span class=\"code-keyword\">var</span> elems = <span class=\"code-built_in\">document</span>.querySelectorAll(selector);\n","  <span class=\"code-keyword\">return</span> util_1.toArray(elems);\n","}\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5C01\u88C5 _styleArrTrim\n</span>","<span class=\"code-comment\"> * @param styleArr css\n</span>","<span class=\"code-comment\"> */</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_styleArrTrim</span>(<span class=\"code-params\">style</span>) </span>{\n","  <span class=\"code-keyword\">var</span> styleArr = [];\n","  <span class=\"code-keyword\">var</span> resultArr = [];\n","\n","  <span class=\"code-keyword\">if</span> (!(<span class=\"code-number\">0</span>, _isArray[<span class=\"code-string\">\"default\"</span>])(style)) {\n","    <span class=\"code-comment\">// \u6709 style\uFF0C\u5C06 style \u6309\u7167 `;` \u62C6\u5206\u4E3A\u6570\u7EC4</span>\n","    styleArr = style.split(<span class=\"code-string\">';'</span>);\n","  } <span class=\"code-keyword\">else</span> {\n","    styleArr = style;\n","  }\n","\n","  (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(styleArr).call(styleArr, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context;\n","\n","    <span class=\"code-comment\">// \u5BF9\u6BCF\u9879\u6837\u5F0F\uFF0C\u6309\u7167 : \u62C6\u5206\u4E3A key \u548C value</span>\n","    <span class=\"code-keyword\">var</span> arr = (<span class=\"code-number\">0</span>, _map2[<span class=\"code-string\">\"default\"</span>])(_context = item.split(<span class=\"code-string\">':'</span>)).call(_context, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">i</span>) </span>{\n","      <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _trim[<span class=\"code-string\">\"default\"</span>])(i).call(i);\n","    });\n","\n","    <span class=\"code-keyword\">if</span> (arr.length === <span class=\"code-number\">2</span>) {\n","      resultArr.push(arr[<span class=\"code-number\">0</span>] + <span class=\"code-string\">':'</span> + arr[<span class=\"code-number\">1</span>]);\n","    }\n","  });\n","  <span class=\"code-keyword\">return</span> resultArr;\n","} <span class=\"code-comment\">// \u6784\u9020\u51FD\u6570</span>\n","\n","\n","<span class=\"code-keyword\">var</span> DomElement =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6784\u9020\u51FD\u6570\n</span>","<span class=\"code-comment\">   * @param selector \u4EFB\u4E00\u7C7B\u578B\u7684\u9009\u62E9\u5668\n</span>","<span class=\"code-comment\">   */</span>\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">DomElement</span>(<span class=\"code-params\">selector</span>) </span>{\n","    <span class=\"code-comment\">// \u521D\u59CB\u5316\u5C5E\u6027</span>\n","    <span class=\"code-keyword\">this</span>.elems = [];\n","    <span class=\"code-keyword\">this</span>.length = <span class=\"code-keyword\">this</span>.elems.length;\n","    <span class=\"code-keyword\">this</span>.dataSource = <span class=\"code-keyword\">new</span> _map[<span class=\"code-string\">\"default\"</span>]();\n","\n","    <span class=\"code-keyword\">if</span> (!selector) {\n","      <span class=\"code-keyword\">return</span>;\n","    } <span class=\"code-comment\">// \u539F\u672C\u5C31\u662F DomElement \u5B9E\u4F8B\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE</span>\n","\n","\n","    <span class=\"code-keyword\">if</span> (selector <span class=\"code-keyword\">instanceof</span> DomElement) {\n","      <span class=\"code-keyword\">return</span> selector;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> selectorResult = []; <span class=\"code-comment\">// \u5B58\u50A8\u67E5\u8BE2\u7ED3\u679C</span>\n","\n","    <span class=\"code-keyword\">var</span> nodeType = selector <span class=\"code-keyword\">instanceof</span> Node ? selector.nodeType : <span class=\"code-number\">-1</span>;\n","    <span class=\"code-keyword\">this</span>.selector = selector;\n","\n","    <span class=\"code-keyword\">if</span> (nodeType === <span class=\"code-number\">1</span> || nodeType === <span class=\"code-number\">9</span>) {\n","      selectorResult = [selector];\n","    } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (_isDOMList(selector)) {\n","      <span class=\"code-comment\">// DOM List</span>\n","      selectorResult = util_1.toArray(selector);\n","    } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (selector <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span>) {\n","      <span class=\"code-comment\">// Element \u6570\u7EC4\uFF08\u5176\u4ED6\u6570\u636E\u7C7B\u578B\uFF0C\u6682\u65F6\u5FFD\u7565\uFF09</span>\n","      selectorResult = selector;\n","    } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> selector === <span class=\"code-string\">'string'</span>) {\n","      <span class=\"code-keyword\">var</span> _context2;\n","\n","      <span class=\"code-comment\">// \u5B57\u7B26\u4E32</span>\n","      <span class=\"code-keyword\">var</span> tmpSelector = (<span class=\"code-number\">0</span>, _trim[<span class=\"code-string\">\"default\"</span>])(_context2 = selector.replace(<span class=\"code-string\">'/\\n/mg'</span>, <span class=\"code-string\">''</span>)).call(_context2);\n","\n","      <span class=\"code-keyword\">if</span> ((<span class=\"code-number\">0</span>, _indexOf[<span class=\"code-string\">\"default\"</span>])(tmpSelector).call(tmpSelector, <span class=\"code-string\">'&lt;'</span>) === <span class=\"code-number\">0</span>) {\n","        <span class=\"code-comment\">// \u5982 &lt;div&gt;</span>\n","        selectorResult = _createElemByHTML(tmpSelector);\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-comment\">// \u5982 #id .class</span>\n","        selectorResult = _querySelectorAll(tmpSelector);\n","      }\n","    }\n","\n","    <span class=\"code-keyword\">var</span> length = selectorResult.length;\n","\n","    <span class=\"code-keyword\">if</span> (!length) {\n","      <span class=\"code-comment\">// \u7A7A\u6570\u7EC4</span>\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    } <span class=\"code-comment\">// \u52A0\u5165 DOM \u8282\u70B9</span>\n","\n","\n","    <span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>;\n","\n","    <span class=\"code-keyword\">for</span> (; i &lt; length; i++) {\n","      <span class=\"code-keyword\">this</span>.elems.push(selectorResult[i]);\n","    }\n","\n","    <span class=\"code-keyword\">this</span>.length = length;\n","  }\n","\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(DomElement.prototype, <span class=\"code-string\">\"id\"</span>, {\n","    <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">     * \u83B7\u53D6\u5143\u7D20 id\n</span>","<span class=\"code-comment\">     */</span>\n","    <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>() {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>].id;\n","    },\n","    enumerable: <span class=\"code-literal\">false</span>,\n","    configurable: <span class=\"code-literal\">true</span>\n","  });\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u904D\u5386\u6240\u6709\u5143\u7D20\uFF0C\u6267\u884C\u56DE\u8C03\u51FD\u6570\n</span>","<span class=\"code-comment\">   * @param fn \u56DE\u8C03\u51FD\u6570\n</span>","<span class=\"code-comment\">   */</span>\n","\n","  DomElement.prototype.forEach = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>; i &lt; <span class=\"code-keyword\">this</span>.length; i++) {\n","      <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[i];\n","      <span class=\"code-keyword\">var</span> result = fn.call(elem, elem, i);\n","\n","      <span class=\"code-keyword\">if</span> (result === <span class=\"code-literal\">false</span>) {\n","        <span class=\"code-keyword\">break</span>;\n","      }\n","    }\n","\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u514B\u9686\u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param deep \u662F\u5426\u6DF1\u5EA6\u514B\u9686\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.clone = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">deep</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context3;\n","\n","    <span class=\"code-keyword\">if</span> (deep === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","      deep = <span class=\"code-literal\">false</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> cloneList = [];\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context3 = <span class=\"code-keyword\">this</span>.elems).call(_context3, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      cloneList.push(elem.cloneNode(!!deep));\n","    });\n","    <span class=\"code-keyword\">return</span> $(cloneList);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u7B2C\u51E0\u4E2A\u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param index index\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.get = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">index</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (index === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","      index = <span class=\"code-number\">0</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> length = <span class=\"code-keyword\">this</span>.length;\n","\n","    <span class=\"code-keyword\">if</span> (index &gt;= length) {\n","      index = index % length;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> $(<span class=\"code-keyword\">this</span>.elems[index]);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u7B2C\u4E00\u4E2A\u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.first = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.get(<span class=\"code-number\">0</span>);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u6700\u540E\u4E00\u4E2A\u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.last = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> length = <span class=\"code-keyword\">this</span>.length;\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.get(length - <span class=\"code-number\">1</span>);\n","  };\n","\n","  DomElement.prototype.on = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">type, selector, fn</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context4;\n","\n","    <span class=\"code-keyword\">if</span> (!type) <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>; <span class=\"code-comment\">// \u6CA1\u6709 selector \uFF0C\u53EA\u6709 type \u548C fn</span>\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> selector === <span class=\"code-string\">'function'</span>) {\n","      fn = selector;\n","      selector = <span class=\"code-string\">''</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context4 = <span class=\"code-keyword\">this</span>).call(_context4, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-comment\">// \u6CA1\u6709\u4E8B\u4EF6\u4EE3\u7406</span>\n","      <span class=\"code-keyword\">if</span> (!selector) {\n","        <span class=\"code-comment\">// \u65E0\u4EE3\u7406</span>\n","        elem.addEventListener(type, fn);\n","        <span class=\"code-keyword\">return</span>;\n","      } <span class=\"code-comment\">// \u6709\u4E8B\u4EF6\u4EE3\u7406</span>\n","\n","\n","      <span class=\"code-keyword\">var</span> agentFn = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">agentFn</span>(<span class=\"code-params\">e</span>) </span>{\n","        <span class=\"code-keyword\">var</span> target = e.target;\n","\n","        <span class=\"code-keyword\">if</span> (target.matches(selector)) {\n","          ;\n","          fn.call(target, e);\n","        }\n","      };\n","\n","      elem.addEventListener(type, agentFn); <span class=\"code-comment\">// \u7F13\u5B58\u4EE3\u7406\u4E8B\u4EF6</span>\n","\n","      AGENT_EVENTS.push({\n","        elem: elem,\n","        selector: selector,\n","        fn: fn,\n","        agentFn: agentFn\n","      });\n","    });\n","  };\n","\n","  DomElement.prototype.off = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">type, selector, fn</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context5;\n","\n","    <span class=\"code-keyword\">if</span> (!type) <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>; <span class=\"code-comment\">// \u6CA1\u6709 selector \uFF0C\u53EA\u6709 type \u548C fn</span>\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> selector === <span class=\"code-string\">'function'</span>) {\n","      fn = selector;\n","      selector = <span class=\"code-string\">''</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context5 = <span class=\"code-keyword\">this</span>).call(_context5, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-comment\">// \u89E3\u7ED1\u4E8B\u4EF6\u4EE3\u7406</span>\n","      <span class=\"code-keyword\">if</span> (selector) {\n","        <span class=\"code-keyword\">var</span> idx = <span class=\"code-number\">-1</span>;\n","\n","        <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>; i &lt; AGENT_EVENTS.length; i++) {\n","          <span class=\"code-keyword\">var</span> item = AGENT_EVENTS[i];\n","\n","          <span class=\"code-keyword\">if</span> (item.selector === selector &amp;&amp; item.fn === fn &amp;&amp; item.elem === elem) {\n","            idx = i;\n","            <span class=\"code-keyword\">break</span>;\n","          }\n","        }\n","\n","        <span class=\"code-keyword\">if</span> (idx !== <span class=\"code-number\">-1</span>) {\n","          <span class=\"code-keyword\">var</span> agentFn = (<span class=\"code-number\">0</span>, _splice[<span class=\"code-string\">\"default\"</span>])(AGENT_EVENTS).call(AGENT_EVENTS, idx, <span class=\"code-number\">1</span>)[<span class=\"code-number\">0</span>].agentFn;\n","          elem.removeEventListener(type, agentFn);\n","        }\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-comment\">// @ts-ignore</span>\n","        elem.removeEventListener(type, fn);\n","      }\n","    });\n","  };\n","\n","  DomElement.prototype.attr = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, val</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context6;\n","\n","    <span class=\"code-keyword\">if</span> (val == <span class=\"code-literal\">null</span>) {\n","      <span class=\"code-comment\">// \u83B7\u53D6\u6570\u636E</span>\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>].getAttribute(key) || <span class=\"code-string\">''</span>;\n","    } <span class=\"code-comment\">// \u5426\u5219\uFF0C\u8BBE\u7F6E\u5C5E\u6027</span>\n","\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context6 = <span class=\"code-keyword\">this</span>).call(_context6, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      elem.setAttribute(key, val);\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5220\u9664 \u5C5E\u6027\n</span>","<span class=\"code-comment\">   * @param key key\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.removeAttr = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context7;\n","\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context7 = <span class=\"code-keyword\">this</span>).call(_context7, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      elem.removeAttribute(key);\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6DFB\u52A0 css class\n</span>","<span class=\"code-comment\">   * @param className css class\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.addClass = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">className</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context8;\n","\n","    <span class=\"code-keyword\">if</span> (!className) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context8 = <span class=\"code-keyword\">this</span>).call(_context8, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-keyword\">if</span> (elem.className) {\n","        <span class=\"code-comment\">// \u5F53\u524D\u6709 class</span>\n","        <span class=\"code-keyword\">var</span> arr = elem.className.split(<span class=\"code-regexp\">/\\s/</span>);\n","        arr = (<span class=\"code-number\">0</span>, _filter[<span class=\"code-string\">\"default\"</span>])(arr).call(arr, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item</span>) </span>{\n","          <span class=\"code-keyword\">return</span> !!(<span class=\"code-number\">0</span>, _trim[<span class=\"code-string\">\"default\"</span>])(item).call(item);\n","        }); <span class=\"code-comment\">// \u6DFB\u52A0 class</span>\n","\n","        <span class=\"code-keyword\">if</span> ((<span class=\"code-number\">0</span>, _indexOf[<span class=\"code-string\">\"default\"</span>])(arr).call(arr, className) &lt; <span class=\"code-number\">0</span>) {\n","          arr.push(className);\n","        } <span class=\"code-comment\">// \u4FEE\u6539 elem.class</span>\n","\n","\n","        elem.className = arr.join(<span class=\"code-string\">' '</span>);\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-comment\">// \u5F53\u524D\u6CA1\u6709 class</span>\n","        elem.className = className;\n","      }\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6DFB\u52A0 css class\n</span>","<span class=\"code-comment\">   * @param className css class\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.removeClass = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">className</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context9;\n","\n","    <span class=\"code-keyword\">if</span> (!className) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context9 = <span class=\"code-keyword\">this</span>).call(_context9, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-keyword\">if</span> (!elem.className) {\n","        <span class=\"code-comment\">// \u5F53\u524D\u65E0 class</span>\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      <span class=\"code-keyword\">var</span> arr = elem.className.split(<span class=\"code-regexp\">/\\s/</span>);\n","      arr = (<span class=\"code-number\">0</span>, _filter[<span class=\"code-string\">\"default\"</span>])(arr).call(arr, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item</span>) </span>{\n","        item = (<span class=\"code-number\">0</span>, _trim[<span class=\"code-string\">\"default\"</span>])(item).call(item); <span class=\"code-comment\">// \u5220\u9664 class</span>\n","\n","        <span class=\"code-keyword\">if</span> (!item || item === className) {\n","          <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","        }\n","\n","        <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","      }); <span class=\"code-comment\">// \u4FEE\u6539 elem.class</span>\n","\n","      elem.className = arr.join(<span class=\"code-string\">' '</span>);\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u662F\u5426\u6709\u4F20\u5165\u7684 css class\n</span>","<span class=\"code-comment\">   * @param className css class\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.hasClass = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">className</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (!className) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">if</span> (!elem.className) {\n","      <span class=\"code-comment\">// \u5F53\u524D\u65E0 class</span>\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> arr = elem.className.split(<span class=\"code-regexp\">/\\s/</span>);\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _includes[<span class=\"code-string\">\"default\"</span>])(arr).call(arr, className); <span class=\"code-comment\">// \u662F\u5426\u5305\u542B</span>\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u4FEE\u6539 css\n</span>","<span class=\"code-comment\">   * @param key css key\n</span>","<span class=\"code-comment\">   * @param val css value\n</span>","<span class=\"code-comment\">   */</span>\n","  <span class=\"code-comment\">// css(key: string): string</span>\n","\n","\n","  DomElement.prototype.css = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, val</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context10;\n","\n","    <span class=\"code-keyword\">var</span> currentStyle;\n","\n","    <span class=\"code-keyword\">if</span> (val == <span class=\"code-string\">''</span>) {\n","      currentStyle = <span class=\"code-string\">''</span>;\n","    } <span class=\"code-keyword\">else</span> {\n","      currentStyle = key + <span class=\"code-string\">\":\"</span> + val + <span class=\"code-string\">\";\"</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context10 = <span class=\"code-keyword\">this</span>).call(_context10, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-keyword\">var</span> _context11;\n","\n","      <span class=\"code-keyword\">var</span> style = (<span class=\"code-number\">0</span>, _trim[<span class=\"code-string\">\"default\"</span>])(_context11 = elem.getAttribute(<span class=\"code-string\">'style'</span>) || <span class=\"code-string\">''</span>).call(_context11);\n","\n","      <span class=\"code-keyword\">if</span> (style) {\n","        <span class=\"code-comment\">// \u6709 style\uFF0C\u5C06 style \u6309\u7167 `;` \u62C6\u5206\u4E3A\u6570\u7EC4</span>\n","        <span class=\"code-keyword\">var</span> resultArr = _styleArrTrim(style); <span class=\"code-comment\">// \u66FF\u6362\u73B0\u6709\u7684 style</span>\n","\n","\n","        resultArr = (<span class=\"code-number\">0</span>, _map2[<span class=\"code-string\">\"default\"</span>])(resultArr).call(resultArr, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item</span>) </span>{\n","          <span class=\"code-keyword\">if</span> ((<span class=\"code-number\">0</span>, _indexOf[<span class=\"code-string\">\"default\"</span>])(item).call(item, key) === <span class=\"code-number\">0</span>) {\n","            <span class=\"code-keyword\">return</span> currentStyle;\n","          } <span class=\"code-keyword\">else</span> {\n","            <span class=\"code-keyword\">return</span> item;\n","          }\n","        }); <span class=\"code-comment\">// \u65B0\u589E style</span>\n","\n","        <span class=\"code-keyword\">if</span> (currentStyle != <span class=\"code-string\">''</span> &amp;&amp; (<span class=\"code-number\">0</span>, _indexOf[<span class=\"code-string\">\"default\"</span>])(resultArr).call(resultArr, currentStyle) &lt; <span class=\"code-number\">0</span>) {\n","          resultArr.push(currentStyle);\n","        } <span class=\"code-comment\">// \u53BB\u6389 \u7A7A\u767D</span>\n","\n","\n","        <span class=\"code-keyword\">if</span> (currentStyle == <span class=\"code-string\">''</span>) {\n","          resultArr = _styleArrTrim(resultArr);\n","        } <span class=\"code-comment\">// \u91CD\u65B0\u8BBE\u7F6E style</span>\n","\n","\n","        elem.setAttribute(<span class=\"code-string\">'style'</span>, resultArr.join(<span class=\"code-string\">'; '</span>));\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-comment\">// \u5F53\u524D\u6CA1\u6709 style</span>\n","        elem.setAttribute(<span class=\"code-string\">'style'</span>, currentStyle);\n","      }\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5C01\u88C5 getBoundingClientRect\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.getBoundingClientRect = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> elem.getBoundingClientRect();\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u663E\u793A\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.show = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.css(<span class=\"code-string\">'display'</span>, <span class=\"code-string\">'block'</span>);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u9690\u85CF\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.hide = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.css(<span class=\"code-string\">'display'</span>, <span class=\"code-string\">'none'</span>);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5B50\u8282\u70B9\uFF08\u53EA\u6709 DOM \u5143\u7D20\uFF09\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.children = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">if</span> (!elem) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">null</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> $(elem.children);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5B50\u8282\u70B9\uFF08\u5305\u62EC\u6587\u672C\u8282\u70B9\uFF09\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.childNodes = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">if</span> (!elem) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">null</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> $(elem.childNodes);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5C06\u5B50\u5143\u7D20\u5168\u90E8\u66FF\u6362\n</span>","<span class=\"code-comment\">   * @param $children \u65B0\u7684child\u8282\u70B9\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.replaceChildAll = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$children</span>) </span>{\n","    <span class=\"code-keyword\">var</span> parent = <span class=\"code-keyword\">this</span>.getNode();\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">while</span> (elem.hasChildNodes()) {\n","      parent.firstChild &amp;&amp; elem.removeChild(parent.firstChild);\n","    }\n","\n","    <span class=\"code-keyword\">this</span>.append($children);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u589E\u52A0\u5B50\u8282\u70B9\n</span>","<span class=\"code-comment\">   * @param $children \u5B50\u8282\u70B9\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.append = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$children</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context12;\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context12 = <span class=\"code-keyword\">this</span>).call(_context12, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])($children).call($children, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">child</span>) </span>{\n","        elem.appendChild(child);\n","      });\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u79FB\u9664\u5F53\u524D\u8282\u70B9\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.remove = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context13;\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context13 = <span class=\"code-keyword\">this</span>).call(_context13, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-keyword\">if</span> (elem.remove) {\n","        elem.remove();\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-keyword\">var</span> parent_1 = elem.parentElement;\n","        parent_1 &amp;&amp; parent_1.removeChild(elem);\n","      }\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5F53\u524D\u5143\u7D20\uFF0C\u662F\u5426\u5305\u542B\u67D0\u4E2A\u5B50\u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param $child \u5B50\u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.isContain = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$child</span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">var</span> child = $child.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> elem.contains(child);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5F53\u524D\u5143\u7D20\u7684\u5C3A\u5BF8\u548C\u4F4D\u7F6E\u4FE1\u606F\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.getSizeData = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>]; <span class=\"code-comment\">// \u53EF\u5F97\u5230 bottom height left right top width \u7684\u6570\u636E</span>\n","\n","    <span class=\"code-keyword\">return</span> elem.getBoundingClientRect();\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5F53\u524D\u5143\u7D20 nodeName\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.getNodeName = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> elem.nodeName;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6839\u636E\u5143\u7D20\u4F4D\u7F6E\u83B7\u53D6\u5143\u7D20\u8282\u70B9\uFF08\u9ED8\u8BA4\u83B7\u53D60\u4F4D\u7F6E\u7684\u8282\u70B9\uFF09\n</span>","<span class=\"code-comment\">   * @param n \u5143\u7D20\u8282\u70B9\u4F4D\u7F6E\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.getNode = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">n</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (n === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","      n = <span class=\"code-number\">0</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> elem;\n","    elem = <span class=\"code-keyword\">this</span>.elems[n];\n","    <span class=\"code-keyword\">return</span> elem;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5F53\u524D\u5143\u7D20\u53EF\u89C6\u9AD8\u5EA6\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.getClientHeight = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> elem.clientHeight;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5F53\u524D\u5143\u7D20\u53EF\u89C6\u5BBD\u5EA6\n</span>","<span class=\"code-comment\">   */</span>\n","  <span class=\"code-comment\">// getClientWidth(): number {</span>\n","  <span class=\"code-comment\">//     const elem = this.elems[0]</span>\n","  <span class=\"code-comment\">//     return elem.clientWidth</span>\n","  <span class=\"code-comment\">// }</span>\n","\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u67E5\u8BE2\n</span>","<span class=\"code-comment\">   * @param selector css \u9009\u62E9\u5668\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.find = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">selector</span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> $(elem.querySelectorAll(selector));\n","  };\n","\n","  DomElement.prototype.text = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">val</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (!val) {\n","      <span class=\"code-comment\">// \u83B7\u53D6 text</span>\n","      <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","      <span class=\"code-keyword\">return</span> elem.innerHTML.replace(<span class=\"code-regexp\">/&lt;[^&gt;]+&gt;/g</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        <span class=\"code-keyword\">return</span> <span class=\"code-string\">''</span>;\n","      });\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-keyword\">var</span> _context14;\n","\n","      <span class=\"code-comment\">// \u8BBE\u7F6E text</span>\n","      <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context14 = <span class=\"code-keyword\">this</span>).call(_context14, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","        elem.innerHTML = val;\n","      });\n","    }\n","  };\n","\n","  DomElement.prototype.html = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">val</span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">if</span> (!val) {\n","      <span class=\"code-comment\">// \u83B7\u53D6 html</span>\n","      <span class=\"code-keyword\">return</span> elem.innerHTML;\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-comment\">// \u8BBE\u7F6E html</span>\n","      elem.innerHTML = val;\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5143\u7D20 value\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.val = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context15;\n","\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _trim[<span class=\"code-string\">\"default\"</span>])(_context15 = elem.value).call(_context15); <span class=\"code-comment\">// \u6682\u7528 any</span>\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * focus \u5230\u5F53\u524D\u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.focus = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context16;\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context16 = <span class=\"code-keyword\">this</span>).call(_context16, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      elem.focus();\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5F53\u524D\u5143\u7D20\u524D\u4E00\u4E2A\u5144\u5F1F\u8282\u70B9\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.prev = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> $(elem.previousElementSibling);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5F53\u524D\u5143\u7D20\u540E\u4E00\u4E2A\u5144\u5F1F\u8282\u70B9\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.next = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> $(elem.nextElementSibling);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u7236\u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.parent = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> $(elem.parentElement);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u67E5\u627E\u7236\u5143\u7D20\uFF0C\u76F4\u5230\u6EE1\u8DB3 selector \u6761\u4EF6\n</span>","<span class=\"code-comment\">   * @param selector css \u9009\u62E9\u5668\n</span>","<span class=\"code-comment\">   * @param curElem \u4ECE\u54EA\u4E2A\u5143\u7D20\u5F00\u59CB\u67E5\u627E\uFF0C\u9ED8\u8BA4\u4E3A\u5F53\u524D\u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.parentUntil = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">selector, curElem</span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = curElem || <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">if</span> (elem.nodeName === <span class=\"code-string\">'BODY'</span>) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">null</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> parent = elem.parentElement;\n","\n","    <span class=\"code-keyword\">if</span> (parent === <span class=\"code-literal\">null</span>) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">null</span>;\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (parent.matches(selector)) {\n","      <span class=\"code-comment\">// \u627E\u5230\uFF0C\u5E76\u8FD4\u56DE</span>\n","      <span class=\"code-keyword\">return</span> $(parent);\n","    } <span class=\"code-comment\">// \u7EE7\u7EED\u67E5\u627E\uFF0C\u9012\u5F52</span>\n","\n","\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.parentUntil(selector, parent);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u67E5\u627E\u7236\u5143\u7D20\uFF0C\u76F4\u5230\u6EE1\u8DB3 selector \u6761\u4EF6,\u6216\u8005 \u5230\u8FBE \u7F16\u8F91\u533A\u57DF\u5BB9\u5668\u4EE5\u53CA\u83DC\u5355\u680F\u5BB9\u5668\n</span>","<span class=\"code-comment\">   * @param selector css \u9009\u62E9\u5668\n</span>","<span class=\"code-comment\">   * @param curElem \u4ECE\u54EA\u4E2A\u5143\u7D20\u5F00\u59CB\u67E5\u627E\uFF0C\u9ED8\u8BA4\u4E3A\u5F53\u524D\u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.parentUntilEditor = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">selector, editor, curElem</span>) </span>{\n","    <span class=\"code-keyword\">var</span> elem = curElem || <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">if</span> ($(elem).equal(editor.$textContainerElem) || $(elem).equal(editor.$toolbarElem)) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">null</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> parent = elem.parentElement;\n","\n","    <span class=\"code-keyword\">if</span> (parent === <span class=\"code-literal\">null</span>) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">null</span>;\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (parent.matches(selector)) {\n","      <span class=\"code-comment\">// \u627E\u5230\uFF0C\u5E76\u8FD4\u56DE</span>\n","      <span class=\"code-keyword\">return</span> $(parent);\n","    } <span class=\"code-comment\">// \u7EE7\u7EED\u67E5\u627E\uFF0C\u9012\u5F52</span>\n","\n","\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.parentUntilEditor(selector, editor, parent);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5224\u8BFB\u662F\u5426\u76F8\u7B49\n</span>","<span class=\"code-comment\">   * @param $elem \u5143\u7D20\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.equal = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$elem</span>) </span>{\n","    <span class=\"code-keyword\">if</span> ($elem <span class=\"code-keyword\">instanceof</span> DomElement) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>] === $elem.elems[<span class=\"code-number\">0</span>];\n","    } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> ($elem <span class=\"code-keyword\">instanceof</span> HTMLElement) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>] === $elem;\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5C06\u8BE5\u5143\u7D20\u63D2\u5165\u5230\u67D0\u4E2A\u5143\u7D20\u524D\u9762\n</span>","<span class=\"code-comment\">   * @param selector css \u9009\u62E9\u5668\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.insertBefore = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">selector</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context17;\n","\n","    <span class=\"code-keyword\">var</span> $referenceNode = $(selector);\n","    <span class=\"code-keyword\">var</span> referenceNode = $referenceNode.elems[<span class=\"code-number\">0</span>];\n","\n","    <span class=\"code-keyword\">if</span> (!referenceNode) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context17 = <span class=\"code-keyword\">this</span>).call(_context17, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-keyword\">var</span> parent = referenceNode.parentNode;\n","      parent.insertBefore(elem, referenceNode);\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5C06\u8BE5\u5143\u7D20\u63D2\u5165\u5230selector\u5143\u7D20\u540E\u9762\n</span>","<span class=\"code-comment\">   * @param selector css \u9009\u62E9\u5668\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.insertAfter = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">selector</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context18;\n","\n","    <span class=\"code-keyword\">var</span> $referenceNode = $(selector);\n","    <span class=\"code-keyword\">var</span> referenceNode = $referenceNode.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">var</span> anchorNode = referenceNode &amp;&amp; referenceNode.nextSibling;\n","\n","    <span class=\"code-keyword\">if</span> (!referenceNode) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context18 = <span class=\"code-keyword\">this</span>).call(_context18, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">elem</span>) </span>{\n","      <span class=\"code-keyword\">var</span> parent = referenceNode.parentNode;\n","\n","      <span class=\"code-keyword\">if</span> (anchorNode) {\n","        parent.insertBefore(elem, anchorNode);\n","      } <span class=\"code-keyword\">else</span> {\n","        parent.appendChild(elem);\n","      }\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u8BBE\u7F6E/\u83B7\u53D6 \u6570\u636E\n</span>","<span class=\"code-comment\">   * @param key key\n</span>","<span class=\"code-comment\">   * @param value value\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.data = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, value</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (value != <span class=\"code-literal\">null</span>) {\n","      <span class=\"code-comment\">// \u8BBE\u7F6E\u6570\u636E</span>\n","      <span class=\"code-keyword\">this</span>.dataSource.set(key, value);\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-comment\">// \u83B7\u53D6\u6570\u636E</span>\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.dataSource.get(key);\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5F53\u524D\u8282\u70B9\u7684\u9876\u7EA7(\u6BB5\u843D)\n</span>","<span class=\"code-comment\">   * @param editor \u5BCC\u6587\u672C\u5B9E\u4F8B\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.getNodeTop = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">editor</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>.length &lt; <span class=\"code-number\">1</span>) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> $parent = <span class=\"code-keyword\">this</span>.parent();\n","\n","    <span class=\"code-keyword\">if</span> (editor.$textElem.equal($parent)) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> $parent.getNodeTop(editor);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5F53\u524D \u8282\u70B9 \u57FA\u4E0E\u4E0A\u4E00\u4E2A\u62E5\u6709\u76F8\u5BF9\u6216\u8005\u89E3\u51B3\u5B9A\u4F4D\u7684\u7236\u5BB9\u5668\u7684\u4F4D\u7F6E\n</span>","<span class=\"code-comment\">   * @param editor \u5BCC\u6587\u672C\u5B9E\u4F8B\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.getOffsetData = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> $node = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">return</span> {\n","      top: $node.offsetTop,\n","      left: $node.offsetLeft,\n","      width: $node.offsetWidth,\n","      height: $node.offsetHeight,\n","      parent: $node.offsetParent\n","    };\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u4ECE\u4E0A\u81F3\u4E0B\u8FDB\u884C\u6EDA\u52A8\n</span>","<span class=\"code-comment\">   * @param top \u6EDA\u52A8\u7684\u503C\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DomElement.prototype.scrollTop = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">top</span>) </span>{\n","    <span class=\"code-keyword\">var</span> $node = <span class=\"code-keyword\">this</span>.elems[<span class=\"code-number\">0</span>];\n","    $node.scrollTo({\n","      top: top\n","    });\n","  };\n","\n","  <span class=\"code-keyword\">return</span> DomElement;\n","}();\n","\n","exports.DomElement = DomElement; <span class=\"code-comment\">// new \u4E00\u4E2A\u5BF9\u8C61</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">$</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> arg = [];\n","\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> _i = <span class=\"code-number\">0</span>; _i &lt; <span class=\"code-built_in\">arguments</span>.length; _i++) {\n","    arg[_i] = <span class=\"code-built_in\">arguments</span>[_i];\n","  }\n","\n","  <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> ((<span class=\"code-number\">0</span>, _bind[<span class=\"code-string\">\"default\"</span>])(DomElement).apply(DomElement, __spreadArrays([<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>], arg)))();\n","}\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = $;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 3 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">134</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 4 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> getOwnPropertyDescriptor = __webpack_require__(<span class=\"code-number\">68</span>).f;\n","<span class=\"code-keyword\">var</span> isForced = __webpack_require__(<span class=\"code-number\">101</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","<span class=\"code-keyword\">var</span> bind = __webpack_require__(<span class=\"code-number\">47</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","\n","<span class=\"code-keyword\">var</span> wrapConstructor = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">NativeConstructor</span>) </span>{\n","  <span class=\"code-keyword\">var</span> Wrapper = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">a, b, c</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span> <span class=\"code-keyword\">instanceof</span> NativeConstructor) {\n","      <span class=\"code-keyword\">switch</span> (<span class=\"code-built_in\">arguments</span>.length) {\n","        <span class=\"code-keyword\">case</span> <span class=\"code-number\">0</span>: <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> NativeConstructor();\n","        <span class=\"code-keyword\">case</span> <span class=\"code-number\">1</span>: <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> NativeConstructor(a);\n","        <span class=\"code-keyword\">case</span> <span class=\"code-number\">2</span>: <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> NativeConstructor(a, b);\n","      } <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> NativeConstructor(a, b, c);\n","    } <span class=\"code-keyword\">return</span> NativeConstructor.apply(<span class=\"code-keyword\">this</span>, <span class=\"code-built_in\">arguments</span>);\n","  };\n","  Wrapper.prototype = NativeConstructor.prototype;\n","  <span class=\"code-keyword\">return</span> Wrapper;\n","};\n","\n","<span class=\"code-comment\">/*\n</span>","<span class=\"code-comment\">  options.target      - name of the target object\n</span>","<span class=\"code-comment\">  options.global      - target is the global object\n</span>","<span class=\"code-comment\">  options.stat        - export as static methods of target\n</span>","<span class=\"code-comment\">  options.proto       - export as prototype methods of target\n</span>","<span class=\"code-comment\">  options.real        - real prototype method for the `pure` version\n</span>","<span class=\"code-comment\">  options.forced      - export even if the native feature is available\n</span>","<span class=\"code-comment\">  options.bind        - bind methods to the target, required for the `pure` version\n</span>","<span class=\"code-comment\">  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n</span>","<span class=\"code-comment\">  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n</span>","<span class=\"code-comment\">  options.sham        - add a flag to not completely full polyfills\n</span>","<span class=\"code-comment\">  options.enumerable  - export as enumerable property\n</span>","<span class=\"code-comment\">  options.noTargetGet - prevent calling a getter on target\n</span>","<span class=\"code-comment\">*/</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">options, source</span>) </span>{\n","  <span class=\"code-keyword\">var</span> TARGET = options.target;\n","  <span class=\"code-keyword\">var</span> GLOBAL = options.global;\n","  <span class=\"code-keyword\">var</span> STATIC = options.stat;\n","  <span class=\"code-keyword\">var</span> PROTO = options.proto;\n","\n","  <span class=\"code-keyword\">var</span> nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n","\n","  <span class=\"code-keyword\">var</span> target = GLOBAL ? path : path[TARGET] || (path[TARGET] = {});\n","  <span class=\"code-keyword\">var</span> targetPrototype = target.prototype;\n","\n","  <span class=\"code-keyword\">var</span> FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n","  <span class=\"code-keyword\">var</span> key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n","\n","  <span class=\"code-keyword\">for</span> (key <span class=\"code-keyword\">in</span> source) {\n","    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? <span class=\"code-string\">'.'</span> : <span class=\"code-string\">'#'</span>) + key, options.forced);\n","    <span class=\"code-comment\">// contains in native</span>\n","    USE_NATIVE = !FORCED &amp;&amp; nativeSource &amp;&amp; has(nativeSource, key);\n","\n","    targetProperty = target[key];\n","\n","    <span class=\"code-keyword\">if</span> (USE_NATIVE) <span class=\"code-keyword\">if</span> (options.noTargetGet) {\n","      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n","      nativeProperty = descriptor &amp;&amp; descriptor.value;\n","    } <span class=\"code-keyword\">else</span> nativeProperty = nativeSource[key];\n","\n","    <span class=\"code-comment\">// export native or implementation</span>\n","    sourceProperty = (USE_NATIVE &amp;&amp; nativeProperty) ? nativeProperty : source[key];\n","\n","    <span class=\"code-keyword\">if</span> (USE_NATIVE &amp;&amp; <span class=\"code-keyword\">typeof</span> targetProperty === <span class=\"code-keyword\">typeof</span> sourceProperty) <span class=\"code-keyword\">continue</span>;\n","\n","    <span class=\"code-comment\">// bind timers to global for call from export context</span>\n","    <span class=\"code-keyword\">if</span> (options.bind &amp;&amp; USE_NATIVE) resultProperty = bind(sourceProperty, global);\n","    <span class=\"code-comment\">// wrap global constructors for prevent changs in this version</span>\n","    <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (options.wrap &amp;&amp; USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n","    <span class=\"code-comment\">// make static versions for prototype methods</span>\n","    <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (PROTO &amp;&amp; <span class=\"code-keyword\">typeof</span> sourceProperty == <span class=\"code-string\">'function'</span>) resultProperty = bind(<span class=\"code-built_in\">Function</span>.call, sourceProperty);\n","    <span class=\"code-comment\">// default case</span>\n","    <span class=\"code-keyword\">else</span> resultProperty = sourceProperty;\n","\n","    <span class=\"code-comment\">// add a flag to not completely full polyfills</span>\n","    <span class=\"code-keyword\">if</span> (options.sham || (sourceProperty &amp;&amp; sourceProperty.sham) || (targetProperty &amp;&amp; targetProperty.sham)) {\n","      createNonEnumerableProperty(resultProperty, <span class=\"code-string\">'sham'</span>, <span class=\"code-literal\">true</span>);\n","    }\n","\n","    target[key] = resultProperty;\n","\n","    <span class=\"code-keyword\">if</span> (PROTO) {\n","      VIRTUAL_PROTOTYPE = TARGET + <span class=\"code-string\">'Prototype'</span>;\n","      <span class=\"code-keyword\">if</span> (!has(path, VIRTUAL_PROTOTYPE)) {\n","        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n","      }\n","      <span class=\"code-comment\">// export virtual prototype methods</span>\n","      path[VIRTUAL_PROTOTYPE][key] = sourceProperty;\n","      <span class=\"code-comment\">// export real prototype methods</span>\n","      <span class=\"code-keyword\">if</span> (options.real &amp;&amp; targetPrototype &amp;&amp; !targetPrototype[key]) {\n","        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n","      }\n","    }\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 5 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">178</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 6 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">306</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 7 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u5DE5\u5177\u51FD\u6570\u96C6\u5408\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _map = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">29</span>));\n","\n","<span class=\"code-keyword\">var</span> _isArray = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">93</span>));\n","\n","<span class=\"code-keyword\">var</span> _typeof2 = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">94</span>));\n","\n","<span class=\"code-keyword\">var</span> _setTimeout2 = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">121</span>));\n","\n","<span class=\"code-keyword\">var</span> _slice = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">43</span>));\n","\n","<span class=\"code-keyword\">var</span> _parseInt2 = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">261</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __spreadArrays = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__spreadArrays || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> s = <span class=\"code-number\">0</span>, i = <span class=\"code-number\">0</span>, il = <span class=\"code-built_in\">arguments</span>.length; i &lt; il; i++) {\n","    s += <span class=\"code-built_in\">arguments</span>[i].length;\n","  }\n","\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> r = <span class=\"code-built_in\">Array</span>(s), k = <span class=\"code-number\">0</span>, i = <span class=\"code-number\">0</span>; i &lt; il; i++) {\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> a = <span class=\"code-built_in\">arguments</span>[i], j = <span class=\"code-number\">0</span>, jl = a.length; j &lt; jl; j++, k++) {\n","      r[k] = a[j];\n","    }\n","  }\n","\n","  <span class=\"code-keyword\">return</span> r;\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports.hexToRgb = exports.getRandomCode = exports.toArray = exports.deepClone = exports.isFunction = exports.debounce = exports.throttle = exports.arrForEach = exports.forEach = exports.replaceSpecialSymbol = exports.replaceHtmlSymbol = exports.getRandom = exports.UA = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>;\n","\n","<span class=\"code-keyword\">var</span> NavUA =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">NavUA</span>(<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">this</span>._ua = navigator.userAgent;\n","\n","    <span class=\"code-keyword\">var</span> math = <span class=\"code-keyword\">this</span>._ua.match(<span class=\"code-regexp\">/(Edge?)\\/(\\d+)/</span>);\n","\n","    <span class=\"code-keyword\">this</span>.isOldEdge = math &amp;&amp; math[<span class=\"code-number\">1</span>] == <span class=\"code-string\">'Edge'</span> &amp;&amp; (<span class=\"code-number\">0</span>, _parseInt2[<span class=\"code-string\">\"default\"</span>])(math[<span class=\"code-number\">2</span>]) &lt; <span class=\"code-number\">19</span> ? <span class=\"code-literal\">true</span> : <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>.isFirefox = <span class=\"code-regexp\">/Firefox\\/\\d+/</span>.test(<span class=\"code-keyword\">this</span>._ua) &amp;&amp; !<span class=\"code-regexp\">/Seamonkey\\/\\d+/</span>.test(<span class=\"code-keyword\">this</span>._ua) ? <span class=\"code-literal\">true</span> : <span class=\"code-literal\">false</span>;\n","  } <span class=\"code-comment\">// \u662F\u5426\u4E3A IE</span>\n","\n","\n","  NavUA.prototype.isIE = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-string\">'ActiveXObject'</span> <span class=\"code-keyword\">in</span> <span class=\"code-built_in\">window</span>;\n","  }; <span class=\"code-comment\">// \u662F\u5426\u4E3A webkit</span>\n","\n","\n","  NavUA.prototype.isWebkit = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-regexp\">/webkit/i</span>.test(<span class=\"code-keyword\">this</span>._ua);\n","  };\n","\n","  <span class=\"code-keyword\">return</span> NavUA;\n","}(); <span class=\"code-comment\">// \u548C UA \u76F8\u5173\u7684\u5C5E\u6027</span>\n","\n","\n","exports.UA = <span class=\"code-keyword\">new</span> NavUA();\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u83B7\u53D6\u968F\u673A\u5B57\u7B26\n</span>","<span class=\"code-comment\"> * @param prefix \u524D\u7F00\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getRandom</span>(<span class=\"code-params\">prefix</span>) </span>{\n","  <span class=\"code-keyword\">var</span> _context;\n","\n","  <span class=\"code-keyword\">if</span> (prefix === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","    prefix = <span class=\"code-string\">''</span>;\n","  }\n","\n","  <span class=\"code-keyword\">return</span> prefix + (<span class=\"code-number\">0</span>, _slice[<span class=\"code-string\">\"default\"</span>])(_context = <span class=\"code-built_in\">Math</span>.random().toString()).call(_context, <span class=\"code-number\">2</span>);\n","}\n","\n","exports.getRandom = getRandom;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u66FF\u6362 html \u7279\u6B8A\u5B57\u7B26\n</span>","<span class=\"code-comment\"> * @param html html \u5B57\u7B26\u4E32\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">replaceHtmlSymbol</span>(<span class=\"code-params\">html</span>) </span>{\n","  <span class=\"code-keyword\">return</span> html.replace(<span class=\"code-regexp\">/&lt;/gm</span>, <span class=\"code-string\">'&amp;lt;'</span>).replace(<span class=\"code-regexp\">/&gt;/gm</span>, <span class=\"code-string\">'&amp;gt;'</span>).replace(<span class=\"code-regexp\">/\"/gm</span>, <span class=\"code-string\">'&amp;quot;'</span>).replace(<span class=\"code-regexp\">/(\\r\\n|\\r|\\n)/g</span>, <span class=\"code-string\">'&lt;br/&gt;'</span>);\n","}\n","\n","exports.replaceHtmlSymbol = replaceHtmlSymbol;\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">replaceSpecialSymbol</span>(<span class=\"code-params\">value</span>) </span>{\n","  <span class=\"code-keyword\">return</span> value.replace(<span class=\"code-regexp\">/&amp;lt;/gm</span>, <span class=\"code-string\">'&lt;'</span>).replace(<span class=\"code-regexp\">/&amp;gt;/gm</span>, <span class=\"code-string\">'&gt;'</span>).replace(<span class=\"code-regexp\">/&amp;quot;/gm</span>, <span class=\"code-string\">'\"'</span>);\n","}\n","\n","exports.replaceSpecialSymbol = replaceSpecialSymbol;\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">forEach</span>(<span class=\"code-params\">obj, fn</span>) </span>{\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> key <span class=\"code-keyword\">in</span> obj) {\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(obj, key)) {\n","      <span class=\"code-keyword\">var</span> result = fn(key, obj[key]);\n","\n","      <span class=\"code-keyword\">if</span> (result === <span class=\"code-literal\">false</span>) {\n","        <span class=\"code-comment\">// \u63D0\u524D\u7EC8\u6B62\u5FAA\u73AF</span>\n","        <span class=\"code-keyword\">break</span>;\n","      }\n","    }\n","  }\n","}\n","\n","exports.forEach = forEach;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u904D\u5386\u7C7B\u6570\u7EC4\n</span>","<span class=\"code-comment\"> * @param fakeArr \u7C7B\u6570\u7EC4\n</span>","<span class=\"code-comment\"> * @param fn \u56DE\u8C03\u51FD\u6570\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">arrForEach</span>(<span class=\"code-params\">fakeArr, fn</span>) </span>{\n","  <span class=\"code-keyword\">var</span> i, item, result;\n","  <span class=\"code-keyword\">var</span> length = fakeArr.length || <span class=\"code-number\">0</span>;\n","\n","  <span class=\"code-keyword\">for</span> (i = <span class=\"code-number\">0</span>; i &lt; length; i++) {\n","    item = fakeArr[i];\n","    result = fn.call(fakeArr, item, i);\n","\n","    <span class=\"code-keyword\">if</span> (result === <span class=\"code-literal\">false</span>) {\n","      <span class=\"code-keyword\">break</span>;\n","    }\n","  }\n","}\n","\n","exports.arrForEach = arrForEach;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u8282\u6D41\n</span>","<span class=\"code-comment\"> * @param fn \u51FD\u6570\n</span>","<span class=\"code-comment\"> * @param interval \u95F4\u9694\u65F6\u95F4\uFF0C\u6BEB\u79D2\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">throttle</span>(<span class=\"code-params\">fn, interval</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (interval === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","    interval = <span class=\"code-number\">200</span>;\n","  }\n","\n","  <span class=\"code-keyword\">var</span> flag = <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">var</span> args = [];\n","\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> _i = <span class=\"code-number\">0</span>; _i &lt; <span class=\"code-built_in\">arguments</span>.length; _i++) {\n","      args[_i] = <span class=\"code-built_in\">arguments</span>[_i];\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (!flag) {\n","      flag = <span class=\"code-literal\">true</span>;\n","      (<span class=\"code-number\">0</span>, _setTimeout2[<span class=\"code-string\">\"default\"</span>])(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        flag = <span class=\"code-literal\">false</span>;\n","        fn.call.apply(fn, __spreadArrays([_this], args)); <span class=\"code-comment\">// this \u62A5\u8BED\u6CD5\u9519\u8BEF\uFF0C\u5148\u7528 null</span>\n","      }, interval);\n","    }\n","  };\n","}\n","\n","exports.throttle = throttle;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u9632\u6296\n</span>","<span class=\"code-comment\"> * @param fn \u51FD\u6570\n</span>","<span class=\"code-comment\"> * @param delay \u95F4\u9694\u65F6\u95F4\uFF0C\u6BEB\u79D2\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">debounce</span>(<span class=\"code-params\">fn, delay</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (delay === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","    delay = <span class=\"code-number\">200</span>;\n","  }\n","\n","  <span class=\"code-keyword\">var</span> lastFn = <span class=\"code-number\">0</span>;\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">var</span> args = [];\n","\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> _i = <span class=\"code-number\">0</span>; _i &lt; <span class=\"code-built_in\">arguments</span>.length; _i++) {\n","      args[_i] = <span class=\"code-built_in\">arguments</span>[_i];\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (lastFn) {\n","      <span class=\"code-built_in\">window</span>.clearTimeout(lastFn);\n","    }\n","\n","    lastFn = <span class=\"code-built_in\">window</span>.setTimeout(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      lastFn = <span class=\"code-number\">0</span>;\n","      fn.call.apply(fn, __spreadArrays([_this], args)); <span class=\"code-comment\">// this \u62A5\u8BED\u6CD5\u9519\u8BEF\uFF0C\u5148\u7528 null</span>\n","    }, delay);\n","  };\n","}\n","\n","exports.debounce = debounce;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * isFunction \u662F\u5426\u662F\u51FD\u6570\n</span>","<span class=\"code-comment\"> * @param fn \u51FD\u6570\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isFunction</span>(<span class=\"code-params\">fn</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">typeof</span> fn === <span class=\"code-string\">'function'</span>;\n","}\n","\n","exports.isFunction = isFunction;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5F15\u7528\u4E0E\u975E\u5F15\u7528\u503C \u6DF1\u62F7\u8D1D\u65B9\u6CD5\n</span>","<span class=\"code-comment\"> * @param data\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">deepClone</span>(<span class=\"code-params\">data</span>) </span>{\n","  <span class=\"code-keyword\">if</span> ((<span class=\"code-number\">0</span>, _typeof2[<span class=\"code-string\">\"default\"</span>])(data) !== <span class=\"code-string\">'object'</span> || <span class=\"code-keyword\">typeof</span> data == <span class=\"code-string\">'function'</span> || data === <span class=\"code-literal\">null</span>) {\n","    <span class=\"code-keyword\">return</span> data;\n","  }\n","\n","  <span class=\"code-keyword\">var</span> item;\n","\n","  <span class=\"code-keyword\">if</span> ((<span class=\"code-number\">0</span>, _isArray[<span class=\"code-string\">\"default\"</span>])(data)) {\n","    item = [];\n","  }\n","\n","  <span class=\"code-keyword\">if</span> (!(<span class=\"code-number\">0</span>, _isArray[<span class=\"code-string\">\"default\"</span>])(data)) {\n","    item = {};\n","  }\n","\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> i <span class=\"code-keyword\">in</span> data) {\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(data, i)) {\n","      item[i] = deepClone(data[i]);\n","    }\n","  }\n","\n","  <span class=\"code-keyword\">return</span> item;\n","}\n","\n","exports.deepClone = deepClone;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5C06\u53EF\u904D\u5386\u7684\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u7EC4\n</span>","<span class=\"code-comment\"> * @param data \u53EF\u904D\u5386\u7684\u5BF9\u8C61\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">toArray</span>(<span class=\"code-params\">data</span>) </span>{\n","  <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _slice[<span class=\"code-string\">\"default\"</span>])(<span class=\"code-built_in\">Array</span>.prototype).call(data);\n","}\n","\n","exports.toArray = toArray;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u552F\u4E00id\u751F\u6210\n</span>","<span class=\"code-comment\"> * @param length \u968F\u673A\u6570\u957F\u5EA6\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getRandomCode</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> _context2;\n","\n","  <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _slice[<span class=\"code-string\">\"default\"</span>])(_context2 = <span class=\"code-built_in\">Math</span>.random().toString(<span class=\"code-number\">36</span>)).call(_context2, <span class=\"code-number\">-5</span>);\n","}\n","\n","exports.getRandomCode = getRandomCode;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * hex color \u8F6C\u6362\u6210 rgb\n</span>","<span class=\"code-comment\"> * @param hex string\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">hexToRgb</span>(<span class=\"code-params\">hex</span>) </span>{\n","  <span class=\"code-keyword\">var</span> result = <span class=\"code-regexp\">/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i</span>.exec(hex);\n","  <span class=\"code-keyword\">if</span> (result == <span class=\"code-literal\">null</span>) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">null</span>;\n","  <span class=\"code-keyword\">var</span> colors = (<span class=\"code-number\">0</span>, _map[<span class=\"code-string\">\"default\"</span>])(result).call(result, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">i</span>) </span>{\n","    <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _parseInt2[<span class=\"code-string\">\"default\"</span>])(i, <span class=\"code-number\">16</span>);\n","  });\n","  <span class=\"code-keyword\">var</span> r = colors[<span class=\"code-number\">1</span>];\n","  <span class=\"code-keyword\">var</span> g = colors[<span class=\"code-number\">2</span>];\n","  <span class=\"code-keyword\">var</span> b = colors[<span class=\"code-number\">3</span>];\n","  <span class=\"code-keyword\">return</span> <span class=\"code-string\">\"rgb(\"</span> + r + <span class=\"code-string\">\", \"</span> + g + <span class=\"code-string\">\", \"</span> + b + <span class=\"code-string\">\")\"</span>;\n","}\n","\n","exports.hexToRgb = hexToRgb;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 8 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">/* WEBPACK VAR INJECTION */</span>(<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">global</span>) </span>{<span class=\"code-keyword\">var</span> check = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> it &amp;&amp; it.Math == <span class=\"code-built_in\">Math</span> &amp;&amp; it;\n","};\n","\n","<span class=\"code-comment\">// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028</span>\n","<span class=\"code-built_in\">module</span>.exports =\n","  <span class=\"code-comment\">// eslint-disable-next-line no-undef</span>\n","  check(<span class=\"code-keyword\">typeof</span> globalThis == <span class=\"code-string\">'object'</span> &amp;&amp; globalThis) ||\n","  check(<span class=\"code-keyword\">typeof</span> <span class=\"code-built_in\">window</span> == <span class=\"code-string\">'object'</span> &amp;&amp; <span class=\"code-built_in\">window</span>) ||\n","  check(<span class=\"code-keyword\">typeof</span> self == <span class=\"code-string\">'object'</span> &amp;&amp; self) ||\n","  check(<span class=\"code-keyword\">typeof</span> global == <span class=\"code-string\">'object'</span> &amp;&amp; global) ||\n","  <span class=\"code-comment\">// eslint-disable-next-line no-new-func</span>\n","  (<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>; })() || <span class=\"code-built_in\">Function</span>(<span class=\"code-string\">'return this'</span>)();\n","\n","<span class=\"code-comment\">/* WEBPACK VAR INJECTION */</span>}.call(<span class=\"code-keyword\">this</span>, __webpack_require__(<span class=\"code-number\">133</span>)))\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 9 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> shared = __webpack_require__(<span class=\"code-number\">74</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> uid = __webpack_require__(<span class=\"code-number\">60</span>);\n","<span class=\"code-keyword\">var</span> NATIVE_SYMBOL = __webpack_require__(<span class=\"code-number\">78</span>);\n","<span class=\"code-keyword\">var</span> USE_SYMBOL_AS_UID = __webpack_require__(<span class=\"code-number\">104</span>);\n","\n","<span class=\"code-keyword\">var</span> WellKnownSymbolsStore = shared(<span class=\"code-string\">'wks'</span>);\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">Symbol</span> = global.Symbol;\n","<span class=\"code-keyword\">var</span> createWellKnownSymbol = USE_SYMBOL_AS_UID ? <span class=\"code-built_in\">Symbol</span> : <span class=\"code-built_in\">Symbol</span> &amp;&amp; <span class=\"code-built_in\">Symbol</span>.withoutSetter || uid;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">name</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!has(WellKnownSymbolsStore, name)) {\n","    <span class=\"code-keyword\">if</span> (NATIVE_SYMBOL &amp;&amp; has(<span class=\"code-built_in\">Symbol</span>, name)) WellKnownSymbolsStore[name] = <span class=\"code-built_in\">Symbol</span>[name];\n","    <span class=\"code-keyword\">else</span> WellKnownSymbolsStore[name] = createWellKnownSymbol(<span class=\"code-string\">'Symbol.'</span> + name);\n","  } <span class=\"code-keyword\">return</span> WellKnownSymbolsStore[name];\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 10 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = {};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 11 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> wrappedWellKnownSymbolModule = __webpack_require__(<span class=\"code-number\">95</span>);\n","<span class=\"code-keyword\">var</span> defineProperty = __webpack_require__(<span class=\"code-number\">18</span>).f;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">NAME</span>) </span>{\n","  <span class=\"code-keyword\">var</span> <span class=\"code-built_in\">Symbol</span> = path.Symbol || (path.Symbol = {});\n","  <span class=\"code-keyword\">if</span> (!has(<span class=\"code-built_in\">Symbol</span>, NAME)) defineProperty(<span class=\"code-built_in\">Symbol</span>, NAME, {\n","    value: wrappedWellKnownSymbolModule.f(NAME)\n","  });\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 12 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">exec</span>) </span>{\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">return</span> !!exec();\n","  } <span class=\"code-keyword\">catch</span> (error) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 13 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">typeof</span> it === <span class=\"code-string\">'object'</span> ? it !== <span class=\"code-literal\">null</span> : <span class=\"code-keyword\">typeof</span> it === <span class=\"code-string\">'function'</span>;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 14 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","\n","<span class=\"code-comment\">// Detect IE8's incomplete defineProperty implementation</span>\n","<span class=\"code-built_in\">module</span>.exports = !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>.defineProperty({}, <span class=\"code-number\">1</span>, { <span class=\"code-attr\">get</span>: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-number\">7</span>; } })[<span class=\"code-number\">1</span>] != <span class=\"code-number\">7</span>;\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 15 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> hasOwnProperty = {}.hasOwnProperty;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it, key</span>) </span>{\n","  <span class=\"code-keyword\">return</span> hasOwnProperty.call(it, key);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 16 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">CONSTRUCTOR</span>) </span>{\n","  <span class=\"code-keyword\">return</span> path[CONSTRUCTOR + <span class=\"code-string\">'Prototype'</span>];\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 17 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> definePropertyModule = __webpack_require__(<span class=\"code-number\">18</span>);\n","<span class=\"code-keyword\">var</span> createPropertyDescriptor = __webpack_require__(<span class=\"code-number\">35</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = DESCRIPTORS ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">object, key, value</span>) </span>{\n","  <span class=\"code-keyword\">return</span> definePropertyModule.f(object, key, createPropertyDescriptor(<span class=\"code-number\">1</span>, value));\n","} : <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">object, key, value</span>) </span>{\n","  object[key] = value;\n","  <span class=\"code-keyword\">return</span> object;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 18 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> IE8_DOM_DEFINE = __webpack_require__(<span class=\"code-number\">100</span>);\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> toPrimitive = __webpack_require__(<span class=\"code-number\">56</span>);\n","\n","<span class=\"code-keyword\">var</span> nativeDefineProperty = <span class=\"code-built_in\">Object</span>.defineProperty;\n","\n","<span class=\"code-comment\">// `Object.defineProperty` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.defineproperty</span>\n","exports.f = DESCRIPTORS ? nativeDefineProperty : <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">defineProperty</span>(<span class=\"code-params\">O, P, Attributes</span>) </span>{\n","  anObject(O);\n","  P = toPrimitive(P, <span class=\"code-literal\">true</span>);\n","  anObject(Attributes);\n","  <span class=\"code-keyword\">if</span> (IE8_DOM_DEFINE) <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">return</span> nativeDefineProperty(O, P, Attributes);\n","  } <span class=\"code-keyword\">catch</span> (error) { <span class=\"code-comment\">/* empty */</span> }\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-string\">'get'</span> <span class=\"code-keyword\">in</span> Attributes || <span class=\"code-string\">'set'</span> <span class=\"code-keyword\">in</span> Attributes) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">'Accessors not supported'</span>);\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-string\">'value'</span> <span class=\"code-keyword\">in</span> Attributes) O[P] = Attributes.value;\n","  <span class=\"code-keyword\">return</span> O;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 19 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">213</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 20 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","\n","<span class=\"code-keyword\">var</span> isOldIE = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isOldIE</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> memo;\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">memorize</span>(<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> memo === <span class=\"code-string\">'undefined'</span>) {\n","      <span class=\"code-comment\">// Test for IE &lt;= 9 as proposed by Browserhacks</span>\n","      <span class=\"code-comment\">// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805</span>\n","      <span class=\"code-comment\">// Tests for existence of standard globals is to allow style-loader</span>\n","      <span class=\"code-comment\">// to operate correctly into non-standard environments</span>\n","      <span class=\"code-comment\">// @see https://github.com/webpack-contrib/style-loader/issues/177</span>\n","      memo = <span class=\"code-built_in\">Boolean</span>(<span class=\"code-built_in\">window</span> &amp;&amp; <span class=\"code-built_in\">document</span> &amp;&amp; <span class=\"code-built_in\">document</span>.all &amp;&amp; !<span class=\"code-built_in\">window</span>.atob);\n","    }\n","\n","    <span class=\"code-keyword\">return</span> memo;\n","  };\n","}();\n","\n","<span class=\"code-keyword\">var</span> getTarget = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getTarget</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> memo = {};\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">memorize</span>(<span class=\"code-params\">target</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> memo[target] === <span class=\"code-string\">'undefined'</span>) {\n","      <span class=\"code-keyword\">var</span> styleTarget = <span class=\"code-built_in\">document</span>.querySelector(target); <span class=\"code-comment\">// Special case to return head of iframe instead of iframe itself</span>\n","\n","      <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">window</span>.HTMLIFrameElement &amp;&amp; styleTarget <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">window</span>.HTMLIFrameElement) {\n","        <span class=\"code-keyword\">try</span> {\n","          <span class=\"code-comment\">// This will throw an exception if access to iframe is blocked</span>\n","          <span class=\"code-comment\">// due to cross-origin restrictions</span>\n","          styleTarget = styleTarget.contentDocument.head;\n","        } <span class=\"code-keyword\">catch</span> (e) {\n","          <span class=\"code-comment\">// istanbul ignore next</span>\n","          styleTarget = <span class=\"code-literal\">null</span>;\n","        }\n","      }\n","\n","      memo[target] = styleTarget;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> memo[target];\n","  };\n","}();\n","\n","<span class=\"code-keyword\">var</span> stylesInDom = [];\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getIndexByIdentifier</span>(<span class=\"code-params\">identifier</span>) </span>{\n","  <span class=\"code-keyword\">var</span> result = <span class=\"code-number\">-1</span>;\n","\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>; i &lt; stylesInDom.length; i++) {\n","    <span class=\"code-keyword\">if</span> (stylesInDom[i].identifier === identifier) {\n","      result = i;\n","      <span class=\"code-keyword\">break</span>;\n","    }\n","  }\n","\n","  <span class=\"code-keyword\">return</span> result;\n","}\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">modulesToDom</span>(<span class=\"code-params\">list, options</span>) </span>{\n","  <span class=\"code-keyword\">var</span> idCountMap = {};\n","  <span class=\"code-keyword\">var</span> identifiers = [];\n","\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>; i &lt; list.length; i++) {\n","    <span class=\"code-keyword\">var</span> item = list[i];\n","    <span class=\"code-keyword\">var</span> id = options.base ? item[<span class=\"code-number\">0</span>] + options.base : item[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">var</span> count = idCountMap[id] || <span class=\"code-number\">0</span>;\n","    <span class=\"code-keyword\">var</span> identifier = <span class=\"code-string\">\"\"</span>.concat(id, <span class=\"code-string\">\" \"</span>).concat(count);\n","    idCountMap[id] = count + <span class=\"code-number\">1</span>;\n","    <span class=\"code-keyword\">var</span> index = getIndexByIdentifier(identifier);\n","    <span class=\"code-keyword\">var</span> obj = {\n","      css: item[<span class=\"code-number\">1</span>],\n","      media: item[<span class=\"code-number\">2</span>],\n","      sourceMap: item[<span class=\"code-number\">3</span>]\n","    };\n","\n","    <span class=\"code-keyword\">if</span> (index !== <span class=\"code-number\">-1</span>) {\n","      stylesInDom[index].references++;\n","      stylesInDom[index].updater(obj);\n","    } <span class=\"code-keyword\">else</span> {\n","      stylesInDom.push({\n","        identifier: identifier,\n","        updater: addStyle(obj, options),\n","        references: <span class=\"code-number\">1</span>\n","      });\n","    }\n","\n","    identifiers.push(identifier);\n","  }\n","\n","  <span class=\"code-keyword\">return</span> identifiers;\n","}\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">insertStyleElement</span>(<span class=\"code-params\">options</span>) </span>{\n","  <span class=\"code-keyword\">var</span> style = <span class=\"code-built_in\">document</span>.createElement(<span class=\"code-string\">'style'</span>);\n","  <span class=\"code-keyword\">var</span> attributes = options.attributes || {};\n","\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> attributes.nonce === <span class=\"code-string\">'undefined'</span>) {\n","    <span class=\"code-keyword\">var</span> nonce =  <span class=\"code-literal\">true</span> ? __webpack_require__.nc : <span class=\"code-literal\">undefined</span>;\n","\n","    <span class=\"code-keyword\">if</span> (nonce) {\n","      attributes.nonce = nonce;\n","    }\n","  }\n","\n","  <span class=\"code-built_in\">Object</span>.keys(attributes).forEach(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","    style.setAttribute(key, attributes[key]);\n","  });\n","\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> options.insert === <span class=\"code-string\">'function'</span>) {\n","    options.insert(style);\n","  } <span class=\"code-keyword\">else</span> {\n","    <span class=\"code-keyword\">var</span> target = getTarget(options.insert || <span class=\"code-string\">'head'</span>);\n","\n","    <span class=\"code-keyword\">if</span> (!target) {\n","      <span class=\"code-keyword\">throw</span> <span class=\"code-keyword\">new</span> <span class=\"code-built_in\">Error</span>(<span class=\"code-string\">\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\"</span>);\n","    }\n","\n","    target.appendChild(style);\n","  }\n","\n","  <span class=\"code-keyword\">return</span> style;\n","}\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">removeStyleElement</span>(<span class=\"code-params\">style</span>) </span>{\n","  <span class=\"code-comment\">// istanbul ignore if</span>\n","  <span class=\"code-keyword\">if</span> (style.parentNode === <span class=\"code-literal\">null</span>) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  }\n","\n","  style.parentNode.removeChild(style);\n","}\n","<span class=\"code-comment\">/* istanbul ignore next  */</span>\n","\n","\n","<span class=\"code-keyword\">var</span> replaceText = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">replaceText</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> textStore = [];\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">replace</span>(<span class=\"code-params\">index, replacement</span>) </span>{\n","    textStore[index] = replacement;\n","    <span class=\"code-keyword\">return</span> textStore.filter(<span class=\"code-built_in\">Boolean</span>).join(<span class=\"code-string\">'\\n'</span>);\n","  };\n","}();\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">applyToSingletonTag</span>(<span class=\"code-params\">style, index, remove, obj</span>) </span>{\n","  <span class=\"code-keyword\">var</span> css = remove ? <span class=\"code-string\">''</span> : obj.media ? <span class=\"code-string\">\"@media \"</span>.concat(obj.media, <span class=\"code-string\">\" {\"</span>).concat(obj.css, <span class=\"code-string\">\"}\"</span>) : obj.css; <span class=\"code-comment\">// For old IE</span>\n","\n","  <span class=\"code-comment\">/* istanbul ignore if  */</span>\n","\n","  <span class=\"code-keyword\">if</span> (style.styleSheet) {\n","    style.styleSheet.cssText = replaceText(index, css);\n","  } <span class=\"code-keyword\">else</span> {\n","    <span class=\"code-keyword\">var</span> cssNode = <span class=\"code-built_in\">document</span>.createTextNode(css);\n","    <span class=\"code-keyword\">var</span> childNodes = style.childNodes;\n","\n","    <span class=\"code-keyword\">if</span> (childNodes[index]) {\n","      style.removeChild(childNodes[index]);\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (childNodes.length) {\n","      style.insertBefore(cssNode, childNodes[index]);\n","    } <span class=\"code-keyword\">else</span> {\n","      style.appendChild(cssNode);\n","    }\n","  }\n","}\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">applyToTag</span>(<span class=\"code-params\">style, options, obj</span>) </span>{\n","  <span class=\"code-keyword\">var</span> css = obj.css;\n","  <span class=\"code-keyword\">var</span> media = obj.media;\n","  <span class=\"code-keyword\">var</span> sourceMap = obj.sourceMap;\n","\n","  <span class=\"code-keyword\">if</span> (media) {\n","    style.setAttribute(<span class=\"code-string\">'media'</span>, media);\n","  } <span class=\"code-keyword\">else</span> {\n","    style.removeAttribute(<span class=\"code-string\">'media'</span>);\n","  }\n","\n","  <span class=\"code-keyword\">if</span> (sourceMap &amp;&amp; <span class=\"code-keyword\">typeof</span> btoa !== <span class=\"code-string\">'undefined'</span>) {\n","    css += <span class=\"code-string\">\"\\n/*# sourceMappingURL=data:application/json;base64,\"</span>.concat(btoa(<span class=\"code-built_in\">unescape</span>(<span class=\"code-built_in\">encodeURIComponent</span>(<span class=\"code-built_in\">JSON</span>.stringify(sourceMap)))), <span class=\"code-string\">\" */\"</span>);\n","  } <span class=\"code-comment\">// For old IE</span>\n","\n","  <span class=\"code-comment\">/* istanbul ignore if  */</span>\n","\n","\n","  <span class=\"code-keyword\">if</span> (style.styleSheet) {\n","    style.styleSheet.cssText = css;\n","  } <span class=\"code-keyword\">else</span> {\n","    <span class=\"code-keyword\">while</span> (style.firstChild) {\n","      style.removeChild(style.firstChild);\n","    }\n","\n","    style.appendChild(<span class=\"code-built_in\">document</span>.createTextNode(css));\n","  }\n","}\n","\n","<span class=\"code-keyword\">var</span> singleton = <span class=\"code-literal\">null</span>;\n","<span class=\"code-keyword\">var</span> singletonCounter = <span class=\"code-number\">0</span>;\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">addStyle</span>(<span class=\"code-params\">obj, options</span>) </span>{\n","  <span class=\"code-keyword\">var</span> style;\n","  <span class=\"code-keyword\">var</span> update;\n","  <span class=\"code-keyword\">var</span> remove;\n","\n","  <span class=\"code-keyword\">if</span> (options.singleton) {\n","    <span class=\"code-keyword\">var</span> styleIndex = singletonCounter++;\n","    style = singleton || (singleton = insertStyleElement(options));\n","    update = applyToSingletonTag.bind(<span class=\"code-literal\">null</span>, style, styleIndex, <span class=\"code-literal\">false</span>);\n","    remove = applyToSingletonTag.bind(<span class=\"code-literal\">null</span>, style, styleIndex, <span class=\"code-literal\">true</span>);\n","  } <span class=\"code-keyword\">else</span> {\n","    style = insertStyleElement(options);\n","    update = applyToTag.bind(<span class=\"code-literal\">null</span>, style, options);\n","\n","    remove = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">remove</span>(<span class=\"code-params\"></span>) </span>{\n","      removeStyleElement(style);\n","    };\n","  }\n","\n","  update(obj);\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">updateStyle</span>(<span class=\"code-params\">newObj</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (newObj) {\n","      <span class=\"code-keyword\">if</span> (newObj.css === obj.css &amp;&amp; newObj.media === obj.media &amp;&amp; newObj.sourceMap === obj.sourceMap) {\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      update(obj = newObj);\n","    } <span class=\"code-keyword\">else</span> {\n","      remove();\n","    }\n","  };\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">list, options</span>) </span>{\n","  options = options || {}; <span class=\"code-comment\">// Force single-tag solution on IE6-9, which has a hard limit on the # of &lt;style&gt;</span>\n","  <span class=\"code-comment\">// tags it will allow on a page</span>\n","\n","  <span class=\"code-keyword\">if</span> (!options.singleton &amp;&amp; <span class=\"code-keyword\">typeof</span> options.singleton !== <span class=\"code-string\">'boolean'</span>) {\n","    options.singleton = isOldIE();\n","  }\n","\n","  list = list || [];\n","  <span class=\"code-keyword\">var</span> lastIdentifiers = modulesToDom(list, options);\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">update</span>(<span class=\"code-params\">newList</span>) </span>{\n","    newList = newList || [];\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Object</span>.prototype.toString.call(newList) !== <span class=\"code-string\">'[object Array]'</span>) {\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>; i &lt; lastIdentifiers.length; i++) {\n","      <span class=\"code-keyword\">var</span> identifier = lastIdentifiers[i];\n","      <span class=\"code-keyword\">var</span> index = getIndexByIdentifier(identifier);\n","      stylesInDom[index].references--;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> newLastIdentifiers = modulesToDom(newList, options);\n","\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> _i = <span class=\"code-number\">0</span>; _i &lt; lastIdentifiers.length; _i++) {\n","      <span class=\"code-keyword\">var</span> _identifier = lastIdentifiers[_i];\n","\n","      <span class=\"code-keyword\">var</span> _index = getIndexByIdentifier(_identifier);\n","\n","      <span class=\"code-keyword\">if</span> (stylesInDom[_index].references === <span class=\"code-number\">0</span>) {\n","        stylesInDom[_index].updater();\n","\n","        stylesInDom.splice(_index, <span class=\"code-number\">1</span>);\n","      }\n","    }\n","\n","    lastIdentifiers = newLastIdentifiers;\n","  };\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 21 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","\n","<span class=\"code-comment\">/*\n</span>","<span class=\"code-comment\">  MIT License http://www.opensource.org/licenses/mit-license.php\n</span>","<span class=\"code-comment\">  Author Tobias Koppers @sokra\n</span>","<span class=\"code-comment\">*/</span>\n","<span class=\"code-comment\">// css base code, injected by the css-loader</span>\n","<span class=\"code-comment\">// eslint-disable-next-line func-names</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">useSourceMap</span>) </span>{\n","  <span class=\"code-keyword\">var</span> list = []; <span class=\"code-comment\">// return the list of modules as css string</span>\n","\n","  list.toString = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">toString</span>(<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.map(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item</span>) </span>{\n","      <span class=\"code-keyword\">var</span> content = cssWithMappingToString(item, useSourceMap);\n","\n","      <span class=\"code-keyword\">if</span> (item[<span class=\"code-number\">2</span>]) {\n","        <span class=\"code-keyword\">return</span> <span class=\"code-string\">\"@media \"</span>.concat(item[<span class=\"code-number\">2</span>], <span class=\"code-string\">\" {\"</span>).concat(content, <span class=\"code-string\">\"}\"</span>);\n","      }\n","\n","      <span class=\"code-keyword\">return</span> content;\n","    }).join(<span class=\"code-string\">''</span>);\n","  }; <span class=\"code-comment\">// import a list of modules into the list</span>\n","  <span class=\"code-comment\">// eslint-disable-next-line func-names</span>\n","\n","\n","  list.i = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">modules, mediaQuery, dedupe</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> modules === <span class=\"code-string\">'string'</span>) {\n","      <span class=\"code-comment\">// eslint-disable-next-line no-param-reassign</span>\n","      modules = [[<span class=\"code-literal\">null</span>, modules, <span class=\"code-string\">''</span>]];\n","    }\n","\n","    <span class=\"code-keyword\">var</span> alreadyImportedModules = {};\n","\n","    <span class=\"code-keyword\">if</span> (dedupe) {\n","      <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>; i &lt; <span class=\"code-keyword\">this</span>.length; i++) {\n","        <span class=\"code-comment\">// eslint-disable-next-line prefer-destructuring</span>\n","        <span class=\"code-keyword\">var</span> id = <span class=\"code-keyword\">this</span>[i][<span class=\"code-number\">0</span>];\n","\n","        <span class=\"code-keyword\">if</span> (id != <span class=\"code-literal\">null</span>) {\n","          alreadyImportedModules[id] = <span class=\"code-literal\">true</span>;\n","        }\n","      }\n","    }\n","\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> _i = <span class=\"code-number\">0</span>; _i &lt; modules.length; _i++) {\n","      <span class=\"code-keyword\">var</span> item = [].concat(modules[_i]);\n","\n","      <span class=\"code-keyword\">if</span> (dedupe &amp;&amp; alreadyImportedModules[item[<span class=\"code-number\">0</span>]]) {\n","        <span class=\"code-comment\">// eslint-disable-next-line no-continue</span>\n","        <span class=\"code-keyword\">continue</span>;\n","      }\n","\n","      <span class=\"code-keyword\">if</span> (mediaQuery) {\n","        <span class=\"code-keyword\">if</span> (!item[<span class=\"code-number\">2</span>]) {\n","          item[<span class=\"code-number\">2</span>] = mediaQuery;\n","        } <span class=\"code-keyword\">else</span> {\n","          item[<span class=\"code-number\">2</span>] = <span class=\"code-string\">\"\"</span>.concat(mediaQuery, <span class=\"code-string\">\" and \"</span>).concat(item[<span class=\"code-number\">2</span>]);\n","        }\n","      }\n","\n","      list.push(item);\n","    }\n","  };\n","\n","  <span class=\"code-keyword\">return</span> list;\n","};\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">cssWithMappingToString</span>(<span class=\"code-params\">item, useSourceMap</span>) </span>{\n","  <span class=\"code-keyword\">var</span> content = item[<span class=\"code-number\">1</span>] || <span class=\"code-string\">''</span>; <span class=\"code-comment\">// eslint-disable-next-line prefer-destructuring</span>\n","\n","  <span class=\"code-keyword\">var</span> cssMapping = item[<span class=\"code-number\">3</span>];\n","\n","  <span class=\"code-keyword\">if</span> (!cssMapping) {\n","    <span class=\"code-keyword\">return</span> content;\n","  }\n","\n","  <span class=\"code-keyword\">if</span> (useSourceMap &amp;&amp; <span class=\"code-keyword\">typeof</span> btoa === <span class=\"code-string\">'function'</span>) {\n","    <span class=\"code-keyword\">var</span> sourceMapping = toComment(cssMapping);\n","    <span class=\"code-keyword\">var</span> sourceURLs = cssMapping.sources.map(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">source</span>) </span>{\n","      <span class=\"code-keyword\">return</span> <span class=\"code-string\">\"/*# sourceURL=\"</span>.concat(cssMapping.sourceRoot || <span class=\"code-string\">''</span>).concat(source, <span class=\"code-string\">\" */\"</span>);\n","    });\n","    <span class=\"code-keyword\">return</span> [content].concat(sourceURLs).concat([sourceMapping]).join(<span class=\"code-string\">'\\n'</span>);\n","  }\n","\n","  <span class=\"code-keyword\">return</span> [content].join(<span class=\"code-string\">'\\n'</span>);\n","} <span class=\"code-comment\">// Adapted from convert-source-map (MIT)</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">toComment</span>(<span class=\"code-params\">sourceMap</span>) </span>{\n","  <span class=\"code-comment\">// eslint-disable-next-line no-undef</span>\n","  <span class=\"code-keyword\">var</span> base64 = btoa(<span class=\"code-built_in\">unescape</span>(<span class=\"code-built_in\">encodeURIComponent</span>(<span class=\"code-built_in\">JSON</span>.stringify(sourceMap))));\n","  <span class=\"code-keyword\">var</span> data = <span class=\"code-string\">\"sourceMappingURL=data:application/json;charset=utf-8;base64,\"</span>.concat(base64);\n","  <span class=\"code-keyword\">return</span> <span class=\"code-string\">\"/*# \"</span>.concat(data, <span class=\"code-string\">\" */\"</span>);\n","}\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 22 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u6309\u94AE\u83DC\u5355 Class\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> _create = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">3</span>));\n","\n","<span class=\"code-keyword\">var</span> _setPrototypeOf = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">6</span>));\n","\n","<span class=\"code-keyword\">var</span> __extends = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__extends || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> _extendStatics = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">extendStatics</span>(<span class=\"code-params\">d, b</span>) </span>{\n","    _extendStatics = _setPrototypeOf[<span class=\"code-string\">\"default\"</span>] || {\n","      __proto__: []\n","    } <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","      d.__proto__ = b;\n","    } || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","      <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> p <span class=\"code-keyword\">in</span> b) {\n","        <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n","      }\n","    };\n","\n","    <span class=\"code-keyword\">return</span> _extendStatics(d, b);\n","  };\n","\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","    _extendStatics(d, b);\n","\n","    <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">__</span>(<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">this</span>.constructor = d;\n","    }\n","\n","    d.prototype = b === <span class=\"code-literal\">null</span> ? (<span class=\"code-number\">0</span>, _create[<span class=\"code-string\">\"default\"</span>])(b) : (__.prototype = b.prototype, <span class=\"code-keyword\">new</span> __());\n","  };\n","}();\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> Menu_1 = __importDefault(__webpack_require__(<span class=\"code-number\">96</span>));\n","\n","<span class=\"code-keyword\">var</span> BtnMenu =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">_super</span>) </span>{\n","  __extends(BtnMenu, _super);\n","\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">BtnMenu</span>(<span class=\"code-params\">$elem, editor</span>) </span>{\n","    <span class=\"code-keyword\">return</span> _super.call(<span class=\"code-keyword\">this</span>, $elem, editor) || <span class=\"code-keyword\">this</span>;\n","  }\n","\n","  <span class=\"code-keyword\">return</span> BtnMenu;\n","}(Menu_1[<span class=\"code-string\">\"default\"</span>]);\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = BtnMenu;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 23 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u4E0B\u62C9\u83DC\u5355 Class\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> _create = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">3</span>));\n","\n","<span class=\"code-keyword\">var</span> _setPrototypeOf = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">6</span>));\n","\n","<span class=\"code-keyword\">var</span> __extends = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__extends || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> _extendStatics = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">extendStatics</span>(<span class=\"code-params\">d, b</span>) </span>{\n","    _extendStatics = _setPrototypeOf[<span class=\"code-string\">\"default\"</span>] || {\n","      __proto__: []\n","    } <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","      d.__proto__ = b;\n","    } || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","      <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> p <span class=\"code-keyword\">in</span> b) {\n","        <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n","      }\n","    };\n","\n","    <span class=\"code-keyword\">return</span> _extendStatics(d, b);\n","  };\n","\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","    _extendStatics(d, b);\n","\n","    <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">__</span>(<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">this</span>.constructor = d;\n","    }\n","\n","    d.prototype = b === <span class=\"code-literal\">null</span> ? (<span class=\"code-number\">0</span>, _create[<span class=\"code-string\">\"default\"</span>])(b) : (__.prototype = b.prototype, <span class=\"code-keyword\">new</span> __());\n","  };\n","}();\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> dom_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">2</span>));\n","\n","<span class=\"code-keyword\">var</span> Menu_1 = __importDefault(__webpack_require__(<span class=\"code-number\">96</span>));\n","\n","<span class=\"code-keyword\">var</span> DropList_1 = __importDefault(__webpack_require__(<span class=\"code-number\">125</span>));\n","\n","<span class=\"code-keyword\">var</span> DropListMenu =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">_super</span>) </span>{\n","  __extends(DropListMenu, _super);\n","\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">DropListMenu</span>(<span class=\"code-params\">$elem, editor, conf</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = _super.call(<span class=\"code-keyword\">this</span>, $elem, editor) || <span class=\"code-keyword\">this</span>; <span class=\"code-comment\">// \u56FD\u9645\u5316</span>\n","\n","\n","    conf.title = editor.i18next.t(<span class=\"code-string\">\"menus.dropListMenu.\"</span> + conf.title); <span class=\"code-comment\">// \u975E\u4E2D\u6587\u6A21\u5F0F\u4E0B \u5E26 icon \u7684\u4E0B\u62C9\u5217\u8868\u5C45\u5DE6</span>\n","\n","    <span class=\"code-keyword\">var</span> className = editor.config.lang === <span class=\"code-string\">'zh-CN'</span> ? <span class=\"code-string\">''</span> : <span class=\"code-string\">'w-e-drop-list-tl'</span>;\n","\n","    <span class=\"code-keyword\">if</span> (className !== <span class=\"code-string\">''</span> &amp;&amp; conf.type === <span class=\"code-string\">'list'</span>) {\n","      <span class=\"code-keyword\">var</span> _context;\n","\n","      (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context = conf.list).call(_context, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item</span>) </span>{\n","        <span class=\"code-keyword\">var</span> $elem = item.$elem;\n","        <span class=\"code-keyword\">var</span> $children = dom_core_1[<span class=\"code-string\">\"default\"</span>]($elem.children());\n","\n","        <span class=\"code-keyword\">if</span> ($children.length &gt; <span class=\"code-number\">0</span>) {\n","          <span class=\"code-keyword\">var</span> nodeName = $children === <span class=\"code-literal\">null</span> || $children === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : $children.getNodeName();\n","\n","          <span class=\"code-keyword\">if</span> (nodeName &amp;&amp; nodeName === <span class=\"code-string\">'I'</span>) {\n","            $elem.addClass(className);\n","          }\n","        }\n","      });\n","    } <span class=\"code-comment\">// \u521D\u59CB\u5316 dropList</span>\n","\n","\n","    <span class=\"code-keyword\">var</span> dropList = <span class=\"code-keyword\">new</span> DropList_1[<span class=\"code-string\">\"default\"</span>](_this, conf);\n","    _this.dropList = dropList; <span class=\"code-comment\">// \u7ED1\u5B9A\u4E8B\u4EF6</span>\n","\n","    $elem.on(<span class=\"code-string\">'mouseenter'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">var</span> _context2;\n","\n","      <span class=\"code-keyword\">if</span> (editor.selection.getRange() == <span class=\"code-literal\">null</span>) {\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      $elem.css(<span class=\"code-string\">'z-index'</span>, editor.zIndex.get(<span class=\"code-string\">'menu'</span>)); <span class=\"code-comment\">// \u89E6\u53D1 droplist \u60AC\u6D6E\u4E8B\u4EF6</span>\n","\n","      (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context2 = editor.txt.eventHooks.dropListMenuHoverEvents).call(_context2, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","        <span class=\"code-keyword\">return</span> fn();\n","      }); <span class=\"code-comment\">// \u663E\u793A</span>\n","\n","      dropList.showTimeoutId = <span class=\"code-built_in\">window</span>.setTimeout(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        dropList.show();\n","      }, <span class=\"code-number\">200</span>);\n","    }).on(<span class=\"code-string\">'mouseleave'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      $elem.css(<span class=\"code-string\">'z-index'</span>, <span class=\"code-string\">'auto'</span>); <span class=\"code-comment\">// \u9690\u85CF</span>\n","\n","      dropList.hideTimeoutId = <span class=\"code-built_in\">window</span>.setTimeout(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        dropList.hide();\n","      });\n","    });\n","    <span class=\"code-keyword\">return</span> _this;\n","  }\n","\n","  <span class=\"code-keyword\">return</span> DropListMenu;\n","}(Menu_1[<span class=\"code-string\">\"default\"</span>]);\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = DropListMenu;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 24 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!isObject(it)) {\n","    <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-built_in\">String</span>(it) + <span class=\"code-string\">' is not an object'</span>);\n","  } <span class=\"code-keyword\">return</span> it;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 25 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","\n","<span class=\"code-keyword\">var</span> defineProperty = <span class=\"code-built_in\">Object</span>.defineProperty;\n","<span class=\"code-keyword\">var</span> cache = {};\n","\n","<span class=\"code-keyword\">var</span> thrower = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{ <span class=\"code-keyword\">throw</span> it; };\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">METHOD_NAME, options</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (has(cache, METHOD_NAME)) <span class=\"code-keyword\">return</span> cache[METHOD_NAME];\n","  <span class=\"code-keyword\">if</span> (!options) options = {};\n","  <span class=\"code-keyword\">var</span> method = [][METHOD_NAME];\n","  <span class=\"code-keyword\">var</span> ACCESSORS = has(options, <span class=\"code-string\">'ACCESSORS'</span>) ? options.ACCESSORS : <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">var</span> argument0 = has(options, <span class=\"code-number\">0</span>) ? options[<span class=\"code-number\">0</span>] : thrower;\n","  <span class=\"code-keyword\">var</span> argument1 = has(options, <span class=\"code-number\">1</span>) ? options[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>;\n","\n","  <span class=\"code-keyword\">return</span> cache[METHOD_NAME] = !!method &amp;&amp; !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">if</span> (ACCESSORS &amp;&amp; !DESCRIPTORS) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","    <span class=\"code-keyword\">var</span> O = { <span class=\"code-attr\">length</span>: <span class=\"code-number\">-1</span> };\n","\n","    <span class=\"code-keyword\">if</span> (ACCESSORS) defineProperty(O, <span class=\"code-number\">1</span>, { <span class=\"code-attr\">enumerable</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">get</span>: thrower });\n","    <span class=\"code-keyword\">else</span> O[<span class=\"code-number\">1</span>] = <span class=\"code-number\">1</span>;\n","\n","    method.call(O, argument0, argument1);\n","  });\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 26 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u5E38\u91CF\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports.videoRegex = exports.urlRegex = exports.imgRegex = exports.EMPTY_FN = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>;\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">EMPTY_FN</span>(<span class=\"code-params\"></span>) </span>{}\n","\n","exports.EMPTY_FN = EMPTY_FN; <span class=\"code-comment\">//\u7528\u4E8E\u6821\u9A8C\u56FE\u7247\u94FE\u63A5\u662F\u5426\u7B26\u5408\u89C4\u8303</span>\n","\n","exports.imgRegex = <span class=\"code-regexp\">/\\.(gif|jpg|jpeg|png)$/i</span>; <span class=\"code-comment\">//\u7528\u4E8E\u6821\u9A8C\u662F\u5426\u4E3Aurl\u683C\u5F0F\u5B57\u7B26\u4E32</span>\n","\n","exports.urlRegex = <span class=\"code-regexp\">/^(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-.,@?^=%&amp;amp;:/~+#]*[\\w\\-@?^=%&amp;amp;/~+#])?/</span>; <span class=\"code-comment\">//\u7528\u4E8E\u6821\u9A8C\u5728\u7EBF\u89C6\u9891\u662F\u5426\u7B26\u5408\u89C4\u8303</span>\n","\n","exports.videoRegex = <span class=\"code-regexp\">/((&lt;iframe|video|embed|object)\\s+[\\s\\S]*&lt;\\/(iframe|video|embed|object))&gt;|&lt;(iframe|video|embed|object)\\s+[\\s\\S]*\\/?&gt;/</span>;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 27 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// toObject with fallback for non-array-like ES3 strings</span>\n","<span class=\"code-keyword\">var</span> IndexedObject = __webpack_require__(<span class=\"code-number\">69</span>);\n","<span class=\"code-keyword\">var</span> requireObjectCoercible = __webpack_require__(<span class=\"code-number\">46</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> IndexedObject(requireObjectCoercible(it));\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 28 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","\n","<span class=\"code-keyword\">var</span> aFunction = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">variable</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">typeof</span> variable == <span class=\"code-string\">'function'</span> ? variable : <span class=\"code-literal\">undefined</span>;\n","};\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">namespace, method</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">arguments</span>.length &lt; <span class=\"code-number\">2</span> ? aFunction(path[namespace]) || aFunction(global[namespace])\n","    : path[namespace] &amp;&amp; path[namespace][method] || global[namespace] &amp;&amp; global[namespace][method];\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 29 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">218</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 30 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">285</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 31 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description panel class\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _set = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">124</span>));\n","\n","<span class=\"code-keyword\">var</span> _find = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">30</span>));\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> dom_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">2</span>));\n","\n","<span class=\"code-keyword\">var</span> const_1 = __webpack_require__(<span class=\"code-number\">26</span>);\n","\n","<span class=\"code-keyword\">var</span> Panel =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Panel</span>(<span class=\"code-params\">menu, conf</span>) </span>{\n","    <span class=\"code-keyword\">this</span>.menu = menu;\n","    <span class=\"code-keyword\">this</span>.conf = conf;\n","    <span class=\"code-keyword\">this</span>.$container = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div class=\"w-e-panel-container\"&gt;&lt;/div&gt;'</span>); <span class=\"code-comment\">// \u9690\u85CF panel</span>\n","\n","    <span class=\"code-keyword\">var</span> editor = menu.editor;\n","    editor.txt.eventHooks.clickEvents.push(Panel.hideCurAllPanels);\n","    editor.txt.eventHooks.toolbarClickEvents.push(Panel.hideCurAllPanels);\n","    editor.txt.eventHooks.dropListMenuHoverEvents.push(Panel.hideCurAllPanels);\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u521B\u5EFA\u5E76\u5C55\u793A panel\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Panel.prototype.create = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">var</span> menu = <span class=\"code-keyword\">this</span>.menu;\n","\n","    <span class=\"code-keyword\">if</span> (Panel.createdMenus.has(menu)) {\n","      <span class=\"code-comment\">// \u521B\u5EFA\u8FC7\u4E86</span>\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> conf = <span class=\"code-keyword\">this</span>.conf; <span class=\"code-comment\">// panel \u7684\u5BB9\u5668</span>\n","\n","    <span class=\"code-keyword\">var</span> $container = <span class=\"code-keyword\">this</span>.$container;\n","    <span class=\"code-keyword\">var</span> width = conf.width || <span class=\"code-number\">300</span>; <span class=\"code-comment\">// \u9ED8\u8BA4 300px</span>\n","\n","    <span class=\"code-keyword\">var</span> rect = menu.editor.$toolbarElem.getBoundingClientRect();\n","    <span class=\"code-keyword\">var</span> menuRect = menu.$elem.getBoundingClientRect();\n","    <span class=\"code-keyword\">var</span> top = rect.height + rect.top - menuRect.top;\n","    <span class=\"code-keyword\">var</span> left = (rect.width - width) / <span class=\"code-number\">2</span> + rect.left - menuRect.left;\n","    $container.css(<span class=\"code-string\">'width'</span>, width + <span class=\"code-string\">'px'</span>).css(<span class=\"code-string\">'margin-top'</span>, top + <span class=\"code-string\">\"px\"</span>).css(<span class=\"code-string\">'margin-left'</span>, left + <span class=\"code-string\">\"px\"</span>).css(<span class=\"code-string\">'z-index'</span>, menu.editor.zIndex.get(<span class=\"code-string\">'panel'</span>)); <span class=\"code-comment\">// \u6DFB\u52A0\u5173\u95ED\u6309\u94AE</span>\n","\n","    <span class=\"code-keyword\">var</span> $closeBtn = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;i class=\"w-e-icon-close w-e-panel-close\"&gt;&lt;/i&gt;'</span>);\n","    $container.append($closeBtn);\n","    $closeBtn.on(<span class=\"code-string\">'click'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      _this.remove();\n","    }); <span class=\"code-comment\">// \u51C6\u5907 tabs \u5BB9\u5668</span>\n","\n","    <span class=\"code-keyword\">var</span> $tabTitleContainer = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;ul class=\"w-e-panel-tab-title\"&gt;&lt;/ul&gt;'</span>);\n","    <span class=\"code-keyword\">var</span> $tabContentContainer = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div class=\"w-e-panel-tab-content\"&gt;&lt;/div&gt;'</span>);\n","    $container.append($tabTitleContainer).append($tabContentContainer); <span class=\"code-comment\">// \u8BBE\u7F6E\u9AD8\u5EA6</span>\n","\n","    <span class=\"code-keyword\">var</span> height = conf.height; <span class=\"code-comment\">// height: 0 \u5373\u4E0D\u7528\u8BBE\u7F6E</span>\n","\n","    <span class=\"code-keyword\">if</span> (height) {\n","      $tabContentContainer.css(<span class=\"code-string\">'height'</span>, height + <span class=\"code-string\">'px'</span>).css(<span class=\"code-string\">'overflow-y'</span>, <span class=\"code-string\">'auto'</span>);\n","    } <span class=\"code-comment\">// tabs</span>\n","\n","\n","    <span class=\"code-keyword\">var</span> tabs = conf.tabs || [];\n","    <span class=\"code-keyword\">var</span> tabTitleArr = [];\n","    <span class=\"code-keyword\">var</span> tabContentArr = [];\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(tabs).call(tabs, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">tab, tabIndex</span>) </span>{\n","      <span class=\"code-keyword\">if</span> (!tab) {\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      <span class=\"code-keyword\">var</span> title = tab.title || <span class=\"code-string\">''</span>;\n","      <span class=\"code-keyword\">var</span> tpl = tab.tpl || <span class=\"code-string\">''</span>; <span class=\"code-comment\">// \u6DFB\u52A0\u5230 DOM</span>\n","\n","      <span class=\"code-keyword\">var</span> $title = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">\"&lt;li class=\\\"w-e-item\\\"&gt;\"</span> + title + <span class=\"code-string\">\"&lt;/li&gt;\"</span>);\n","      $tabTitleContainer.append($title);\n","      <span class=\"code-keyword\">var</span> $content = dom_core_1[<span class=\"code-string\">\"default\"</span>](tpl);\n","      $tabContentContainer.append($content); <span class=\"code-comment\">// \u8BB0\u5F55\u5230\u5185\u5B58</span>\n","\n","      tabTitleArr.push($title);\n","      tabContentArr.push($content); <span class=\"code-comment\">// \u8BBE\u7F6E active \u9879</span>\n","\n","      <span class=\"code-keyword\">if</span> (tabIndex === <span class=\"code-number\">0</span>) {\n","        $title.data(<span class=\"code-string\">'active'</span>, <span class=\"code-literal\">true</span>);\n","        $title.addClass(<span class=\"code-string\">'w-e-active'</span>);\n","      } <span class=\"code-keyword\">else</span> {\n","        $content.hide();\n","      } <span class=\"code-comment\">// \u7ED1\u5B9A tab \u7684\u4E8B\u4EF6</span>\n","\n","\n","      $title.on(<span class=\"code-string\">'click'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        <span class=\"code-keyword\">if</span> ($title.data(<span class=\"code-string\">'active'</span>)) {\n","          <span class=\"code-keyword\">return</span>;\n","        } <span class=\"code-comment\">// \u9690\u85CF\u6240\u6709\u7684 tab</span>\n","\n","\n","        (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(tabTitleArr).call(tabTitleArr, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$title</span>) </span>{\n","          $title.data(<span class=\"code-string\">'active'</span>, <span class=\"code-literal\">false</span>);\n","          $title.removeClass(<span class=\"code-string\">'w-e-active'</span>);\n","        });\n","        (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(tabContentArr).call(tabContentArr, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$content</span>) </span>{\n","          $content.hide();\n","        }); <span class=\"code-comment\">// \u663E\u793A\u5F53\u524D\u7684 tab</span>\n","\n","        $title.data(<span class=\"code-string\">'active'</span>, <span class=\"code-literal\">true</span>);\n","        $title.addClass(<span class=\"code-string\">'w-e-active'</span>);\n","        $content.show();\n","      });\n","    }); <span class=\"code-comment\">// \u7ED1\u5B9A\u5173\u95ED\u4E8B\u4EF6</span>\n","\n","    $container.on(<span class=\"code-string\">'click'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">e</span>) </span>{\n","      <span class=\"code-comment\">// \u70B9\u51FB\u65F6\u963B\u6B62\u5192\u6CE1</span>\n","      e.stopPropagation();\n","    }); <span class=\"code-comment\">// \u6DFB\u52A0\u5230 DOM</span>\n","\n","    menu.$elem.append($container); <span class=\"code-comment\">// \u7ED1\u5B9A conf events \u7684\u4E8B\u4EF6\uFF0C\u53EA\u6709\u6DFB\u52A0\u5230 DOM \u4E4B\u540E\u624D\u80FD\u7ED1\u5B9A\u6210\u529F</span>\n","\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(tabs).call(tabs, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">tab, index</span>) </span>{\n","      <span class=\"code-keyword\">if</span> (!tab) {\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      <span class=\"code-keyword\">var</span> events = tab.events || [];\n","      (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(events).call(events, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">event</span>) </span>{\n","        <span class=\"code-keyword\">var</span> selector = event.selector;\n","        <span class=\"code-keyword\">var</span> type = event.type;\n","        <span class=\"code-keyword\">var</span> fn = event.fn || const_1.EMPTY_FN;\n","        <span class=\"code-keyword\">var</span> $content = tabContentArr[index];\n","        (<span class=\"code-number\">0</span>, _find[<span class=\"code-string\">\"default\"</span>])($content).call($content, selector).on(type, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">e</span>) </span>{\n","          e.stopPropagation();\n","          <span class=\"code-keyword\">var</span> needToHide = fn(e); <span class=\"code-comment\">// \u6267\u884C\u5B8C\u4E8B\u4EF6\u4E4B\u540E\uFF0C\u662F\u5426\u8981\u5173\u95ED panel</span>\n","\n","          <span class=\"code-keyword\">if</span> (needToHide) {\n","            _this.remove();\n","          }\n","        });\n","      });\n","    }); <span class=\"code-comment\">// focus \u7B2C\u4E00\u4E2A elem</span>\n","\n","    <span class=\"code-keyword\">var</span> $inputs = (<span class=\"code-number\">0</span>, _find[<span class=\"code-string\">\"default\"</span>])($container).call($container, <span class=\"code-string\">'input[type=text],textarea'</span>);\n","\n","    <span class=\"code-keyword\">if</span> ($inputs.length) {\n","      $inputs.get(<span class=\"code-number\">0</span>).focus();\n","    } <span class=\"code-comment\">// \u9690\u85CF\u5176\u4ED6 panel</span>\n","\n","\n","    Panel.hideCurAllPanels(); <span class=\"code-comment\">// \u8BB0\u5F55\u8BE5 menu \u5DF2\u7ECF\u521B\u5EFA\u4E86 panel</span>\n","\n","    menu.setPanel(<span class=\"code-keyword\">this</span>);\n","    Panel.createdMenus.add(menu);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u79FB\u9664 penal\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Panel.prototype.remove = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> menu = <span class=\"code-keyword\">this</span>.menu;\n","    <span class=\"code-keyword\">var</span> $container = <span class=\"code-keyword\">this</span>.$container;\n","\n","    <span class=\"code-keyword\">if</span> ($container) {\n","      $container.remove();\n","    } <span class=\"code-comment\">// \u5C06\u8BE5 menu \u8BB0\u5F55\u4E2D\u79FB\u9664</span>\n","\n","\n","    Panel.createdMenus[<span class=\"code-string\">\"delete\"</span>](menu);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u9690\u85CF\u5F53\u524D\u6240\u6709\u7684 panel\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Panel.hideCurAllPanels = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context;\n","\n","    <span class=\"code-keyword\">if</span> (Panel.createdMenus.size === <span class=\"code-number\">0</span>) {\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context = Panel.createdMenus).call(_context, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">menu</span>) </span>{\n","      <span class=\"code-keyword\">var</span> panel = menu.panel;\n","      panel &amp;&amp; panel.remove();\n","    });\n","  }; <span class=\"code-comment\">// \u8BB0\u5F55\u5DF2\u7ECF\u521B\u5EFA\u8FC7\u7684 panelMenu</span>\n","\n","\n","  Panel.createdMenus = <span class=\"code-keyword\">new</span> _set[<span class=\"code-string\">\"default\"</span>]();\n","  <span class=\"code-keyword\">return</span> Panel;\n","}();\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = Panel;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 32 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> it != <span class=\"code-string\">'function'</span>) {\n","    <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-built_in\">String</span>(it) + <span class=\"code-string\">' is not a function'</span>);\n","  } <span class=\"code-keyword\">return</span> it;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 33 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> bind = __webpack_require__(<span class=\"code-number\">47</span>);\n","<span class=\"code-keyword\">var</span> IndexedObject = __webpack_require__(<span class=\"code-number\">69</span>);\n","<span class=\"code-keyword\">var</span> toObject = __webpack_require__(<span class=\"code-number\">38</span>);\n","<span class=\"code-keyword\">var</span> toLength = __webpack_require__(<span class=\"code-number\">36</span>);\n","<span class=\"code-keyword\">var</span> arraySpeciesCreate = __webpack_require__(<span class=\"code-number\">86</span>);\n","\n","<span class=\"code-keyword\">var</span> push = [].push;\n","\n","<span class=\"code-comment\">// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation</span>\n","<span class=\"code-keyword\">var</span> createMethod = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">TYPE</span>) </span>{\n","  <span class=\"code-keyword\">var</span> IS_MAP = TYPE == <span class=\"code-number\">1</span>;\n","  <span class=\"code-keyword\">var</span> IS_FILTER = TYPE == <span class=\"code-number\">2</span>;\n","  <span class=\"code-keyword\">var</span> IS_SOME = TYPE == <span class=\"code-number\">3</span>;\n","  <span class=\"code-keyword\">var</span> IS_EVERY = TYPE == <span class=\"code-number\">4</span>;\n","  <span class=\"code-keyword\">var</span> IS_FIND_INDEX = TYPE == <span class=\"code-number\">6</span>;\n","  <span class=\"code-keyword\">var</span> IS_FILTER_OUT = TYPE == <span class=\"code-number\">7</span>;\n","  <span class=\"code-keyword\">var</span> NO_HOLES = TYPE == <span class=\"code-number\">5</span> || IS_FIND_INDEX;\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$this, callbackfn, that, specificCreate</span>) </span>{\n","    <span class=\"code-keyword\">var</span> O = toObject($<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">var</span> self = IndexedObject(O);\n","    <span class=\"code-keyword\">var</span> boundFunction = bind(callbackfn, that, <span class=\"code-number\">3</span>);\n","    <span class=\"code-keyword\">var</span> length = toLength(self.length);\n","    <span class=\"code-keyword\">var</span> index = <span class=\"code-number\">0</span>;\n","    <span class=\"code-keyword\">var</span> create = specificCreate || arraySpeciesCreate;\n","    <span class=\"code-keyword\">var</span> target = IS_MAP ? create($<span class=\"code-keyword\">this</span>, length) : IS_FILTER || IS_FILTER_OUT ? create($<span class=\"code-keyword\">this</span>, <span class=\"code-number\">0</span>) : <span class=\"code-literal\">undefined</span>;\n","    <span class=\"code-keyword\">var</span> value, result;\n","    <span class=\"code-keyword\">for</span> (;length &gt; index; index++) <span class=\"code-keyword\">if</span> (NO_HOLES || index <span class=\"code-keyword\">in</span> self) {\n","      value = self[index];\n","      result = boundFunction(value, index, O);\n","      <span class=\"code-keyword\">if</span> (TYPE) {\n","        <span class=\"code-keyword\">if</span> (IS_MAP) target[index] = result; <span class=\"code-comment\">// map</span>\n","        <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (result) <span class=\"code-keyword\">switch</span> (TYPE) {\n","          <span class=\"code-keyword\">case</span> <span class=\"code-number\">3</span>: <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;              <span class=\"code-comment\">// some</span>\n","          <span class=\"code-keyword\">case</span> <span class=\"code-number\">5</span>: <span class=\"code-keyword\">return</span> value;             <span class=\"code-comment\">// find</span>\n","          <span class=\"code-keyword\">case</span> <span class=\"code-number\">6</span>: <span class=\"code-keyword\">return</span> index;             <span class=\"code-comment\">// findIndex</span>\n","          <span class=\"code-keyword\">case</span> <span class=\"code-number\">2</span>: push.call(target, value); <span class=\"code-comment\">// filter</span>\n","        } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">switch</span> (TYPE) {\n","          <span class=\"code-keyword\">case</span> <span class=\"code-number\">4</span>: <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;             <span class=\"code-comment\">// every</span>\n","          <span class=\"code-keyword\">case</span> <span class=\"code-number\">7</span>: push.call(target, value); <span class=\"code-comment\">// filterOut</span>\n","        }\n","      }\n","    }\n","    <span class=\"code-keyword\">return</span> IS_FIND_INDEX ? <span class=\"code-number\">-1</span> : IS_SOME || IS_EVERY ? IS_EVERY : target;\n","  };\n","};\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  <span class=\"code-comment\">// `Array.prototype.forEach` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.foreach</span>\n","  forEach: createMethod(<span class=\"code-number\">0</span>),\n","  <span class=\"code-comment\">// `Array.prototype.map` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.map</span>\n","  map: createMethod(<span class=\"code-number\">1</span>),\n","  <span class=\"code-comment\">// `Array.prototype.filter` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.filter</span>\n","  filter: createMethod(<span class=\"code-number\">2</span>),\n","  <span class=\"code-comment\">// `Array.prototype.some` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.some</span>\n","  some: createMethod(<span class=\"code-number\">3</span>),\n","  <span class=\"code-comment\">// `Array.prototype.every` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.every</span>\n","  every: createMethod(<span class=\"code-number\">4</span>),\n","  <span class=\"code-comment\">// `Array.prototype.find` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.find</span>\n","  find: createMethod(<span class=\"code-number\">5</span>),\n","  <span class=\"code-comment\">// `Array.prototype.findIndex` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.findIndex</span>\n","  findIndex: createMethod(<span class=\"code-number\">6</span>),\n","  <span class=\"code-comment\">// `Array.prototype.filterOut` method</span>\n","  <span class=\"code-comment\">// https://github.com/tc39/proposal-array-filtering</span>\n","  filterOut: createMethod(<span class=\"code-number\">7</span>)\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 34 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description Modal \u83DC\u5355 Class\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> _create = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">3</span>));\n","\n","<span class=\"code-keyword\">var</span> _setPrototypeOf = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">6</span>));\n","\n","<span class=\"code-keyword\">var</span> __extends = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__extends || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> _extendStatics = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">extendStatics</span>(<span class=\"code-params\">d, b</span>) </span>{\n","    _extendStatics = _setPrototypeOf[<span class=\"code-string\">\"default\"</span>] || {\n","      __proto__: []\n","    } <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","      d.__proto__ = b;\n","    } || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","      <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> p <span class=\"code-keyword\">in</span> b) {\n","        <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n","      }\n","    };\n","\n","    <span class=\"code-keyword\">return</span> _extendStatics(d, b);\n","  };\n","\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">d, b</span>) </span>{\n","    _extendStatics(d, b);\n","\n","    <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">__</span>(<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">this</span>.constructor = d;\n","    }\n","\n","    d.prototype = b === <span class=\"code-literal\">null</span> ? (<span class=\"code-number\">0</span>, _create[<span class=\"code-string\">\"default\"</span>])(b) : (__.prototype = b.prototype, <span class=\"code-keyword\">new</span> __());\n","  };\n","}();\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> Menu_1 = __importDefault(__webpack_require__(<span class=\"code-number\">96</span>));\n","\n","<span class=\"code-keyword\">var</span> PanelMenu =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">_super</span>) </span>{\n","  __extends(PanelMenu, _super);\n","\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">PanelMenu</span>(<span class=\"code-params\">$elem, editor</span>) </span>{\n","    <span class=\"code-keyword\">return</span> _super.call(<span class=\"code-keyword\">this</span>, $elem, editor) || <span class=\"code-keyword\">this</span>;\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u7ED9 menu \u8BBE\u7F6E panel\n</span>","<span class=\"code-comment\">   * @param panel panel \u5B9E\u4F8B\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  PanelMenu.prototype.setPanel = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">panel</span>) </span>{\n","    <span class=\"code-keyword\">this</span>.panel = panel;\n","  };\n","\n","  <span class=\"code-keyword\">return</span> PanelMenu;\n","}(Menu_1[<span class=\"code-string\">\"default\"</span>]);\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = PanelMenu;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 35 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">bitmap, value</span>) </span>{\n","  <span class=\"code-keyword\">return</span> {\n","    enumerable: !(bitmap &amp; <span class=\"code-number\">1</span>),\n","    configurable: !(bitmap &amp; <span class=\"code-number\">2</span>),\n","    writable: !(bitmap &amp; <span class=\"code-number\">4</span>),\n","    value: value\n","  };\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 36 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> toInteger = __webpack_require__(<span class=\"code-number\">58</span>);\n","\n","<span class=\"code-keyword\">var</span> min = <span class=\"code-built_in\">Math</span>.min;\n","\n","<span class=\"code-comment\">// `ToLength` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-tolength</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">argument</span>) </span>{\n","  <span class=\"code-keyword\">return</span> argument &gt; <span class=\"code-number\">0</span> ? min(toInteger(argument), <span class=\"code-number\">0x1FFFFFFFFFFFFF</span>) : <span class=\"code-number\">0</span>; <span class=\"code-comment\">// 2 ** 53 - 1 == 9007199254740991</span>\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 37 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-literal\">true</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 38 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> requireObjectCoercible = __webpack_require__(<span class=\"code-number\">46</span>);\n","\n","<span class=\"code-comment\">// `ToObject` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-toobject</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">argument</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>(requireObjectCoercible(argument));\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 39 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> isArrayIteratorMethod = __webpack_require__(<span class=\"code-number\">160</span>);\n","<span class=\"code-keyword\">var</span> toLength = __webpack_require__(<span class=\"code-number\">36</span>);\n","<span class=\"code-keyword\">var</span> bind = __webpack_require__(<span class=\"code-number\">47</span>);\n","<span class=\"code-keyword\">var</span> getIteratorMethod = __webpack_require__(<span class=\"code-number\">161</span>);\n","<span class=\"code-keyword\">var</span> iteratorClose = __webpack_require__(<span class=\"code-number\">162</span>);\n","\n","<span class=\"code-keyword\">var</span> Result = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">stopped, result</span>) </span>{\n","  <span class=\"code-keyword\">this</span>.stopped = stopped;\n","  <span class=\"code-keyword\">this</span>.result = result;\n","};\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">iterable, unboundFunction, options</span>) </span>{\n","  <span class=\"code-keyword\">var</span> that = options &amp;&amp; options.that;\n","  <span class=\"code-keyword\">var</span> AS_ENTRIES = !!(options &amp;&amp; options.AS_ENTRIES);\n","  <span class=\"code-keyword\">var</span> IS_ITERATOR = !!(options &amp;&amp; options.IS_ITERATOR);\n","  <span class=\"code-keyword\">var</span> INTERRUPTED = !!(options &amp;&amp; options.INTERRUPTED);\n","  <span class=\"code-keyword\">var</span> fn = bind(unboundFunction, that, <span class=\"code-number\">1</span> + AS_ENTRIES + INTERRUPTED);\n","  <span class=\"code-keyword\">var</span> iterator, iterFn, index, length, result, next, step;\n","\n","  <span class=\"code-keyword\">var</span> stop = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">condition</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (iterator) iteratorClose(iterator);\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> Result(<span class=\"code-literal\">true</span>, condition);\n","  };\n","\n","  <span class=\"code-keyword\">var</span> callFn = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">value</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (AS_ENTRIES) {\n","      anObject(value);\n","      <span class=\"code-keyword\">return</span> INTERRUPTED ? fn(value[<span class=\"code-number\">0</span>], value[<span class=\"code-number\">1</span>], stop) : fn(value[<span class=\"code-number\">0</span>], value[<span class=\"code-number\">1</span>]);\n","    } <span class=\"code-keyword\">return</span> INTERRUPTED ? fn(value, stop) : fn(value);\n","  };\n","\n","  <span class=\"code-keyword\">if</span> (IS_ITERATOR) {\n","    iterator = iterable;\n","  } <span class=\"code-keyword\">else</span> {\n","    iterFn = getIteratorMethod(iterable);\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> iterFn != <span class=\"code-string\">'function'</span>) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">'Target is not iterable'</span>);\n","    <span class=\"code-comment\">// optimisation for array iterators</span>\n","    <span class=\"code-keyword\">if</span> (isArrayIteratorMethod(iterFn)) {\n","      <span class=\"code-keyword\">for</span> (index = <span class=\"code-number\">0</span>, length = toLength(iterable.length); length &gt; index; index++) {\n","        result = callFn(iterable[index]);\n","        <span class=\"code-keyword\">if</span> (result &amp;&amp; result <span class=\"code-keyword\">instanceof</span> Result) <span class=\"code-keyword\">return</span> result;\n","      } <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> Result(<span class=\"code-literal\">false</span>);\n","    }\n","    iterator = iterFn.call(iterable);\n","  }\n","\n","  next = iterator.next;\n","  <span class=\"code-keyword\">while</span> (!(step = next.call(iterator)).done) {\n","    <span class=\"code-keyword\">try</span> {\n","      result = callFn(step.value);\n","    } <span class=\"code-keyword\">catch</span> (error) {\n","      iteratorClose(iterator);\n","      <span class=\"code-keyword\">throw</span> error;\n","    }\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> result == <span class=\"code-string\">'object'</span> &amp;&amp; result &amp;&amp; result <span class=\"code-keyword\">instanceof</span> Result) <span class=\"code-keyword\">return</span> result;\n","  } <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> Result(<span class=\"code-literal\">false</span>);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 40 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = {};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 41 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> TO_STRING_TAG_SUPPORT = __webpack_require__(<span class=\"code-number\">79</span>);\n","<span class=\"code-keyword\">var</span> defineProperty = __webpack_require__(<span class=\"code-number\">18</span>).f;\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> toString = __webpack_require__(<span class=\"code-number\">164</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> TO_STRING_TAG = wellKnownSymbol(<span class=\"code-string\">'toStringTag'</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it, TAG, STATIC, SET_METHOD</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (it) {\n","    <span class=\"code-keyword\">var</span> target = STATIC ? it : it.prototype;\n","    <span class=\"code-keyword\">if</span> (!has(target, TO_STRING_TAG)) {\n","      defineProperty(target, TO_STRING_TAG, { <span class=\"code-attr\">configurable</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">value</span>: TAG });\n","    }\n","    <span class=\"code-keyword\">if</span> (SET_METHOD &amp;&amp; !TO_STRING_TAG_SUPPORT) {\n","      createNonEnumerableProperty(target, <span class=\"code-string\">'toString'</span>, toString);\n","    }\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 42 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> NATIVE_WEAK_MAP = __webpack_require__(<span class=\"code-number\">169</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> objectHas = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> shared = __webpack_require__(<span class=\"code-number\">75</span>);\n","<span class=\"code-keyword\">var</span> sharedKey = __webpack_require__(<span class=\"code-number\">59</span>);\n","<span class=\"code-keyword\">var</span> hiddenKeys = __webpack_require__(<span class=\"code-number\">49</span>);\n","\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">WeakMap</span> = global.WeakMap;\n","<span class=\"code-keyword\">var</span> <span class=\"code-keyword\">set</span>, <span class=\"code-keyword\">get</span>, has;\n","\n","var enforce = function (it) {\n","  <span class=\"code-keyword\">return</span> has(it) ? <span class=\"code-keyword\">get</span>(it) : <span class=\"code-keyword\">set</span>(it, {});\n","};\n","\n","<span class=\"code-keyword\">var</span> getterFor = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">TYPE</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","    <span class=\"code-keyword\">var</span> state;\n","    <span class=\"code-keyword\">if</span> (!isObject(it) || (state = <span class=\"code-keyword\">get</span>(it)).type !== TYPE) {\n","      <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">'Incompatible receiver, '</span> + TYPE + <span class=\"code-string\">' required'</span>);\n","    } <span class=\"code-keyword\">return</span> state;\n","  };\n","};\n","\n","<span class=\"code-keyword\">if</span> (NATIVE_WEAK_MAP) {\n","  <span class=\"code-keyword\">var</span> store = shared.state || (shared.state = <span class=\"code-keyword\">new</span> <span class=\"code-built_in\">WeakMap</span>());\n","  <span class=\"code-keyword\">var</span> wmget = store.get;\n","  <span class=\"code-keyword\">var</span> wmhas = store.has;\n","  <span class=\"code-keyword\">var</span> wmset = store.set;\n","  <span class=\"code-keyword\">set</span> = function (it, metadata) {\n","    metadata.facade = it;\n","    wmset.call(store, it, metadata);\n","    <span class=\"code-keyword\">return</span> metadata;\n","  };\n","  <span class=\"code-keyword\">get</span> = function (it) {\n","    <span class=\"code-keyword\">return</span> wmget.call(store, it) || {};\n","  };\n","  has = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","    <span class=\"code-keyword\">return</span> wmhas.call(store, it);\n","  };\n","} <span class=\"code-keyword\">else</span> {\n","  <span class=\"code-keyword\">var</span> STATE = sharedKey(<span class=\"code-string\">'state'</span>);\n","  hiddenKeys[STATE] = <span class=\"code-literal\">true</span>;\n","  <span class=\"code-keyword\">set</span> = function (it, metadata) {\n","    metadata.facade = it;\n","    createNonEnumerableProperty(it, STATE, metadata);\n","    <span class=\"code-keyword\">return</span> metadata;\n","  };\n","  <span class=\"code-keyword\">get</span> = function (it) {\n","    <span class=\"code-keyword\">return</span> objectHas(it, STATE) ? it[STATE] : {};\n","  };\n","  has = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","    <span class=\"code-keyword\">return</span> objectHas(it, STATE);\n","  };\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  <span class=\"code-keyword\">set</span>: <span class=\"code-keyword\">set</span>,\n","  <span class=\"code-keyword\">get</span>: <span class=\"code-keyword\">get</span>,\n","  has: has,\n","  enforce: enforce,\n","  getterFor: getterFor\n","};\n","\n","\n","/***/ }),\n","/* 43 */\n","/***/ (function(module, exports, __webpack_require__) {\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">257</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 44 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description Tooltip class\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> dom_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">2</span>));\n","\n","<span class=\"code-keyword\">var</span> Tooltip =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Tooltip</span>(<span class=\"code-params\">editor, $elem, conf</span>) </span>{\n","    <span class=\"code-keyword\">this</span>.editor = editor;\n","    <span class=\"code-keyword\">this</span>.$targetElem = $elem;\n","    <span class=\"code-keyword\">this</span>.conf = conf;\n","    <span class=\"code-keyword\">this</span>._show = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>._isInsertTextContainer = <span class=\"code-literal\">false</span>; <span class=\"code-comment\">// \u5B9A\u4E49 container</span>\n","\n","    <span class=\"code-keyword\">var</span> $container = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div&gt;&lt;/div&gt;'</span>);\n","    $container.addClass(<span class=\"code-string\">'w-e-tooltip'</span>);\n","    <span class=\"code-keyword\">this</span>.$container = $container;\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6 tooltip \u5B9A\u4F4D\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Tooltip.prototype.getPositionData = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> $container = <span class=\"code-keyword\">this</span>.$container;\n","    <span class=\"code-keyword\">var</span> top = <span class=\"code-number\">0</span>;\n","    <span class=\"code-keyword\">var</span> left = <span class=\"code-number\">0</span>; <span class=\"code-comment\">// tooltip \u7684\u9AD8\u5EA6</span>\n","\n","    <span class=\"code-keyword\">var</span> tooltipHeight = <span class=\"code-number\">20</span>; <span class=\"code-comment\">// \u7F51\u9875\u7684 scrollTop</span>\n","\n","    <span class=\"code-keyword\">var</span> pageScrollTop = <span class=\"code-built_in\">document</span>.documentElement.scrollTop; <span class=\"code-comment\">// \u76EE\u6807\u5143\u7D20\u7684 rect</span>\n","\n","    <span class=\"code-keyword\">var</span> targetElemRect = <span class=\"code-keyword\">this</span>.$targetElem.getBoundingClientRect(); <span class=\"code-comment\">// \u7F16\u8F91\u533A\u57DF\u7684 rect</span>\n","\n","    <span class=\"code-keyword\">var</span> textElemRect = <span class=\"code-keyword\">this</span>.editor.$textElem.getBoundingClientRect(); <span class=\"code-comment\">// \u83B7\u53D6\u57FA\u4E8E textContainerElem \u7684 \u4F4D\u7F6E\u4FE1\u606F</span>\n","\n","    <span class=\"code-keyword\">var</span> targetOffset = <span class=\"code-keyword\">this</span>.$targetElem.getOffsetData();\n","    <span class=\"code-keyword\">var</span> targetParentElem = dom_core_1[<span class=\"code-string\">\"default\"</span>](targetOffset.parent); <span class=\"code-comment\">// \u83B7\u53D6 \u7F16\u8F91\u533A\u57DF\u7684\u6EDA\u52A8\u6761\u4FE1\u606F</span>\n","\n","    <span class=\"code-keyword\">var</span> scrollTop = <span class=\"code-keyword\">this</span>.editor.$textElem.elems[<span class=\"code-number\">0</span>].scrollTop; <span class=\"code-comment\">// \u662F\u5426\u63D2\u5165 textContainer \u4E2D</span>\n","\n","    <span class=\"code-keyword\">this</span>._isInsertTextContainer = targetParentElem.equal(<span class=\"code-keyword\">this</span>.editor.$textContainerElem);\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>._isInsertTextContainer) {\n","      <span class=\"code-comment\">// \u7236\u5BB9\u5668\u7684\u9AD8\u5EA6</span>\n","      <span class=\"code-keyword\">var</span> targetParentElemHeight = targetParentElem.getClientHeight(); <span class=\"code-comment\">// \u76F8\u5BF9\u4E8E\u7236\u5BB9\u5668\u7684\u4F4D\u7F6E\u4FE1\u606F</span>\n","\n","      <span class=\"code-keyword\">var</span> offsetTop = targetOffset.top,\n","          offsetLeft = targetOffset.left,\n","          offsetHeight = targetOffset.height; <span class=\"code-comment\">// \u5143\u7D20\u57FA\u4E8E\u7236\u5BB9\u5668\u7684 \u7EDD\u5BF9top\u4FE1\u606F</span>\n","\n","      <span class=\"code-keyword\">var</span> absoluteTop = offsetTop - scrollTop;\n","\n","      <span class=\"code-keyword\">if</span> (absoluteTop &gt; tooltipHeight + <span class=\"code-number\">5</span>) {\n","        <span class=\"code-comment\">// \u8BF4\u660E\u6A21\u677F\u5143\u7D20\u7684\u9876\u90E8\u7A7A\u95F4\u8DB3\u591F</span>\n","        top = absoluteTop - tooltipHeight - <span class=\"code-number\">15</span>;\n","        $container.addClass(<span class=\"code-string\">'w-e-tooltip-up'</span>);\n","      } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (absoluteTop + offsetHeight + tooltipHeight &lt; targetParentElemHeight) {\n","        <span class=\"code-comment\">// \u8BF4\u660E\u6A21\u677F\u5143\u7D20\u7684\u5E95\u90E8\u7A7A\u95F4\u8DB3\u591F</span>\n","        top = absoluteTop + offsetHeight + <span class=\"code-number\">10</span>;\n","        $container.addClass(<span class=\"code-string\">'w-e-tooltip-down'</span>);\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-comment\">// \u5176\u4ED6\u60C5\u51B5\uFF0Ctooltip \u653E\u5728\u76EE\u6807\u5143\u7D20\u5DE6\u4E0A\u89D2</span>\n","        top = (absoluteTop &gt; <span class=\"code-number\">0</span> ? absoluteTop : <span class=\"code-number\">0</span>) + tooltipHeight + <span class=\"code-number\">10</span>;\n","        $container.addClass(<span class=\"code-string\">'w-e-tooltip-down'</span>);\n","      } <span class=\"code-comment\">// \u8BA1\u7B97 left</span>\n","\n","\n","      <span class=\"code-keyword\">if</span> (offsetLeft &lt; <span class=\"code-number\">0</span>) {\n","        left = <span class=\"code-number\">0</span>;\n","      } <span class=\"code-keyword\">else</span> {\n","        left = offsetLeft;\n","      }\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-keyword\">if</span> (targetElemRect.top &lt; tooltipHeight) {\n","        <span class=\"code-comment\">// \u8BF4\u660E\u76EE\u6807\u5143\u7D20\u7684\u9876\u90E8\uFF0C\u56E0\u6ED1\u52A8\u9690\u85CF\u5728\u6D4F\u89C8\u5668\u4E0A\u65B9\u3002tooltip \u8981\u653E\u5728\u76EE\u6807\u5143\u7D20\u4E0B\u9762</span>\n","        top = targetElemRect.bottom + pageScrollTop + <span class=\"code-number\">5</span>; <span class=\"code-comment\">// 5px \u95F4\u8DDD</span>\n","\n","        $container.addClass(<span class=\"code-string\">'w-e-tooltip-down'</span>);\n","      } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (targetElemRect.top - textElemRect.top &lt; tooltipHeight) {\n","        <span class=\"code-comment\">// \u8BF4\u660E\u76EE\u6807\u5143\u7D20\u7684\u9876\u90E8\uFF0C\u56E0\u6ED1\u52A8\u9690\u85CF\u5728\u7F16\u8F91\u533A\u57DF\u4E0A\u65B9\u3002tooltip \u8981\u653E\u5728\u76EE\u6807\u5143\u7D20\u4E0B\u9762</span>\n","        top = targetElemRect.bottom + pageScrollTop + <span class=\"code-number\">5</span>; <span class=\"code-comment\">// 5px \u95F4\u8DDD</span>\n","\n","        $container.addClass(<span class=\"code-string\">'w-e-tooltip-down'</span>);\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-comment\">// \u5176\u4ED6\u60C5\u51B5\uFF0Ctooltip \u653E\u5728\u76EE\u6807\u5143\u7D20\u4E0A\u65B9</span>\n","        top = targetElemRect.top + pageScrollTop - tooltipHeight - <span class=\"code-number\">15</span>; <span class=\"code-comment\">// \u51CF\u53BB toolbar \u7684\u9AD8\u5EA6\uFF0C\u8FD8\u6709 15px \u95F4\u8DDD</span>\n","\n","        $container.addClass(<span class=\"code-string\">'w-e-tooltip-up'</span>);\n","      } <span class=\"code-comment\">// \u8BA1\u7B97 left</span>\n","\n","\n","      <span class=\"code-keyword\">if</span> (targetElemRect.left &lt; <span class=\"code-number\">0</span>) {\n","        left = <span class=\"code-number\">0</span>;\n","      } <span class=\"code-keyword\">else</span> {\n","        left = targetElemRect.left;\n","      }\n","    } <span class=\"code-comment\">// \u8FD4\u56DE\u7ED3\u679C</span>\n","\n","\n","    <span class=\"code-keyword\">return</span> {\n","      top: top,\n","      left: left\n","    };\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6DFB\u52A0 tooltip \u83DC\u5355\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Tooltip.prototype.appendMenus = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">var</span> conf = <span class=\"code-keyword\">this</span>.conf;\n","    <span class=\"code-keyword\">var</span> editor = <span class=\"code-keyword\">this</span>.editor;\n","    <span class=\"code-keyword\">var</span> $targetElem = <span class=\"code-keyword\">this</span>.$targetElem;\n","    <span class=\"code-keyword\">var</span> $container = <span class=\"code-keyword\">this</span>.$container;\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(conf).call(conf, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item, index</span>) </span>{\n","      <span class=\"code-comment\">// \u6DFB\u52A0\u5143\u7D20</span>\n","      <span class=\"code-keyword\">var</span> $elem = item.$elem;\n","      <span class=\"code-keyword\">var</span> $wrapper = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div&gt;&lt;/div&gt;'</span>);\n","      $wrapper.addClass(<span class=\"code-string\">'w-e-tooltip-item-wrapper '</span>);\n","      $wrapper.append($elem);\n","      $container.append($wrapper); <span class=\"code-comment\">// \u7ED1\u5B9A\u70B9\u51FB\u4E8B\u4EF6</span>\n","\n","      $elem.on(<span class=\"code-string\">'click'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">e</span>) </span>{\n","        e.preventDefault();\n","        <span class=\"code-keyword\">var</span> res = item.onClick(editor, $targetElem);\n","        <span class=\"code-keyword\">if</span> (res) _this.remove();\n","      });\n","    });\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u521B\u5EFA tooltip\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Tooltip.prototype.create = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> editor = <span class=\"code-keyword\">this</span>.editor;\n","    <span class=\"code-keyword\">var</span> $container = <span class=\"code-keyword\">this</span>.$container; <span class=\"code-comment\">// \u751F\u6210 container \u7684\u5185\u5BB9</span>\n","\n","    <span class=\"code-keyword\">this</span>.appendMenus(); <span class=\"code-comment\">// \u8BBE\u7F6E\u5B9A\u4F4D</span>\n","\n","    <span class=\"code-keyword\">var</span> _a = <span class=\"code-keyword\">this</span>.getPositionData(),\n","        top = _a.top,\n","        left = _a.left;\n","\n","    $container.css(<span class=\"code-string\">'top'</span>, top + <span class=\"code-string\">\"px\"</span>);\n","    $container.css(<span class=\"code-string\">'left'</span>, left + <span class=\"code-string\">\"px\"</span>); <span class=\"code-comment\">// \u8BBE\u7F6E z-index</span>\n","\n","    $container.css(<span class=\"code-string\">'z-index'</span>, editor.zIndex.get(<span class=\"code-string\">'tooltip'</span>)); <span class=\"code-comment\">// \u6DFB\u52A0\u5230 DOM</span>\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>._isInsertTextContainer) {\n","      <span class=\"code-keyword\">this</span>.editor.$textContainerElem.append($container);\n","    } <span class=\"code-keyword\">else</span> {\n","      dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'body'</span>).append($container);\n","    }\n","\n","    <span class=\"code-keyword\">this</span>._show = <span class=\"code-literal\">true</span>;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u79FB\u9664\u8BE5 tooltip\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Tooltip.prototype.remove = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">this</span>.$container.remove();\n","    <span class=\"code-keyword\">this</span>._show = <span class=\"code-literal\">false</span>;\n","  };\n","\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(Tooltip.prototype, <span class=\"code-string\">\"isShow\"</span>, {\n","    <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">     * \u662F\u5426\u663E\u793A\n</span>","<span class=\"code-comment\">     */</span>\n","    <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>() {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>._show;\n","    },\n","    enumerable: <span class=\"code-literal\">false</span>,\n","    configurable: <span class=\"code-literal\">true</span>\n","  });\n","  <span class=\"code-keyword\">return</span> Tooltip;\n","}();\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = Tooltip;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 45 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> toString = {}.toString;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> toString.call(it).slice(<span class=\"code-number\">8</span>, <span class=\"code-number\">-1</span>);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 46 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// `RequireObjectCoercible` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-requireobjectcoercible</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (it == <span class=\"code-literal\">undefined</span>) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">\"Can't call method on \"</span> + it);\n","  <span class=\"code-keyword\">return</span> it;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 47 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> aFunction = __webpack_require__(<span class=\"code-number\">32</span>);\n","\n","<span class=\"code-comment\">// optional / simple context binding</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn, that, length</span>) </span>{\n","  aFunction(fn);\n","  <span class=\"code-keyword\">if</span> (that === <span class=\"code-literal\">undefined</span>) <span class=\"code-keyword\">return</span> fn;\n","  <span class=\"code-keyword\">switch</span> (length) {\n","    <span class=\"code-keyword\">case</span> <span class=\"code-number\">0</span>: <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">return</span> fn.call(that);\n","    };\n","    <span class=\"code-keyword\">case</span> <span class=\"code-number\">1</span>: <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">a</span>) </span>{\n","      <span class=\"code-keyword\">return</span> fn.call(that, a);\n","    };\n","    <span class=\"code-keyword\">case</span> <span class=\"code-number\">2</span>: <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">a, b</span>) </span>{\n","      <span class=\"code-keyword\">return</span> fn.call(that, a, b);\n","    };\n","    <span class=\"code-keyword\">case</span> <span class=\"code-number\">3</span>: <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">a, b, c</span>) </span>{\n","      <span class=\"code-keyword\">return</span> fn.call(that, a, b, c);\n","    };\n","  }\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"><span class=\"code-regexp\">/* ...args */</span></span>) </span>{\n","    <span class=\"code-keyword\">return</span> fn.apply(that, <span class=\"code-built_in\">arguments</span>);\n","  };\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 48 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> defineProperties = __webpack_require__(<span class=\"code-number\">137</span>);\n","<span class=\"code-keyword\">var</span> enumBugKeys = __webpack_require__(<span class=\"code-number\">73</span>);\n","<span class=\"code-keyword\">var</span> hiddenKeys = __webpack_require__(<span class=\"code-number\">49</span>);\n","<span class=\"code-keyword\">var</span> html = __webpack_require__(<span class=\"code-number\">103</span>);\n","<span class=\"code-keyword\">var</span> documentCreateElement = __webpack_require__(<span class=\"code-number\">70</span>);\n","<span class=\"code-keyword\">var</span> sharedKey = __webpack_require__(<span class=\"code-number\">59</span>);\n","\n","<span class=\"code-keyword\">var</span> GT = <span class=\"code-string\">'&gt;'</span>;\n","<span class=\"code-keyword\">var</span> LT = <span class=\"code-string\">'&lt;'</span>;\n","<span class=\"code-keyword\">var</span> PROTOTYPE = <span class=\"code-string\">'prototype'</span>;\n","<span class=\"code-keyword\">var</span> SCRIPT = <span class=\"code-string\">'script'</span>;\n","<span class=\"code-keyword\">var</span> IE_PROTO = sharedKey(<span class=\"code-string\">'IE_PROTO'</span>);\n","\n","<span class=\"code-keyword\">var</span> EmptyConstructor = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> };\n","\n","<span class=\"code-keyword\">var</span> scriptTag = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">content</span>) </span>{\n","  <span class=\"code-keyword\">return</span> LT + SCRIPT + GT + content + LT + <span class=\"code-string\">'/'</span> + SCRIPT + GT;\n","};\n","\n","<span class=\"code-comment\">// Create object with fake `null` prototype: use ActiveX Object with cleared prototype</span>\n","<span class=\"code-keyword\">var</span> NullProtoObjectViaActiveX = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">activeXDocument</span>) </span>{\n","  activeXDocument.write(scriptTag(<span class=\"code-string\">''</span>));\n","  activeXDocument.close();\n","  <span class=\"code-keyword\">var</span> temp = activeXDocument.parentWindow.Object;\n","  activeXDocument = <span class=\"code-literal\">null</span>; <span class=\"code-comment\">// avoid memory leak</span>\n","  <span class=\"code-keyword\">return</span> temp;\n","};\n","\n","<span class=\"code-comment\">// Create object with fake `null` prototype: use iframe Object with cleared prototype</span>\n","<span class=\"code-keyword\">var</span> NullProtoObjectViaIFrame = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-comment\">// Thrash, waste and sodomy: IE GC bug</span>\n","  <span class=\"code-keyword\">var</span> iframe = documentCreateElement(<span class=\"code-string\">'iframe'</span>);\n","  <span class=\"code-keyword\">var</span> JS = <span class=\"code-string\">'java'</span> + SCRIPT + <span class=\"code-string\">':'</span>;\n","  <span class=\"code-keyword\">var</span> iframeDocument;\n","  iframe.style.display = <span class=\"code-string\">'none'</span>;\n","  html.appendChild(iframe);\n","  <span class=\"code-comment\">// https://github.com/zloirock/core-js/issues/475</span>\n","  iframe.src = <span class=\"code-built_in\">String</span>(JS);\n","  iframeDocument = iframe.contentWindow.document;\n","  iframeDocument.open();\n","  iframeDocument.write(scriptTag(<span class=\"code-string\">'document.F=Object'</span>));\n","  iframeDocument.close();\n","  <span class=\"code-keyword\">return</span> iframeDocument.F;\n","};\n","\n","<span class=\"code-comment\">// Check for document.domain and active x support</span>\n","<span class=\"code-comment\">// No need to use active x approach when document.domain is not set</span>\n","<span class=\"code-comment\">// see https://github.com/es-shims/es5-shim/issues/150</span>\n","<span class=\"code-comment\">// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346</span>\n","<span class=\"code-comment\">// avoid IE GC bug</span>\n","<span class=\"code-keyword\">var</span> activeXDocument;\n","<span class=\"code-keyword\">var</span> NullProtoObject = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-comment\">/* global ActiveXObject */</span>\n","    activeXDocument = <span class=\"code-built_in\">document</span>.domain &amp;&amp; <span class=\"code-keyword\">new</span> ActiveXObject(<span class=\"code-string\">'htmlfile'</span>);\n","  } <span class=\"code-keyword\">catch</span> (error) { <span class=\"code-comment\">/* ignore */</span> }\n","  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n","  <span class=\"code-keyword\">var</span> length = enumBugKeys.length;\n","  <span class=\"code-keyword\">while</span> (length--) <span class=\"code-keyword\">delete</span> NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n","  <span class=\"code-keyword\">return</span> NullProtoObject();\n","};\n","\n","hiddenKeys[IE_PROTO] = <span class=\"code-literal\">true</span>;\n","\n","<span class=\"code-comment\">// `Object.create` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.create</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-built_in\">Object</span>.create || <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">create</span>(<span class=\"code-params\">O, Properties</span>) </span>{\n","  <span class=\"code-keyword\">var</span> result;\n","  <span class=\"code-keyword\">if</span> (O !== <span class=\"code-literal\">null</span>) {\n","    EmptyConstructor[PROTOTYPE] = anObject(O);\n","    result = <span class=\"code-keyword\">new</span> EmptyConstructor();\n","    EmptyConstructor[PROTOTYPE] = <span class=\"code-literal\">null</span>;\n","    <span class=\"code-comment\">// add \"__proto__\" for Object.getPrototypeOf polyfill</span>\n","    result[IE_PROTO] = O;\n","  } <span class=\"code-keyword\">else</span> result = NullProtoObject();\n","  <span class=\"code-keyword\">return</span> Properties === <span class=\"code-literal\">undefined</span> ? result : defineProperties(result, Properties);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 49 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = {};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 50 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">target, key, value, options</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (options &amp;&amp; options.enumerable) target[key] = value;\n","  <span class=\"code-keyword\">else</span> createNonEnumerableProperty(target, key, value);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 51 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">175</span>);\n","<span class=\"code-keyword\">var</span> DOMIterables = __webpack_require__(<span class=\"code-number\">176</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">61</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> Iterators = __webpack_require__(<span class=\"code-number\">40</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> TO_STRING_TAG = wellKnownSymbol(<span class=\"code-string\">'toStringTag'</span>);\n","\n","<span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> COLLECTION_NAME <span class=\"code-keyword\">in</span> DOMIterables) {\n","  <span class=\"code-keyword\">var</span> Collection = global[COLLECTION_NAME];\n","  <span class=\"code-keyword\">var</span> CollectionPrototype = Collection &amp;&amp; Collection.prototype;\n","  <span class=\"code-keyword\">if</span> (CollectionPrototype &amp;&amp; classof(CollectionPrototype) !== TO_STRING_TAG) {\n","    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n","  }\n","  Iterators[COLLECTION_NAME] = Iterators.Array;\n","}\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 52 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">45</span>);\n","\n","<span class=\"code-comment\">// `IsArray` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-isarray</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-built_in\">Array</span>.isArray || <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isArray</span>(<span class=\"code-params\">arg</span>) </span>{\n","  <span class=\"code-keyword\">return</span> classof(arg) == <span class=\"code-string\">'Array'</span>;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 53 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> V8_VERSION = __webpack_require__(<span class=\"code-number\">83</span>);\n","\n","<span class=\"code-keyword\">var</span> SPECIES = wellKnownSymbol(<span class=\"code-string\">'species'</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">METHOD_NAME</span>) </span>{\n","  <span class=\"code-comment\">// We can't use this feature detection in V8 since it causes</span>\n","  <span class=\"code-comment\">// deoptimization and serious performance degradation</span>\n","  <span class=\"code-comment\">// https://github.com/zloirock/core-js/issues/677</span>\n","  <span class=\"code-keyword\">return</span> V8_VERSION &gt;= <span class=\"code-number\">51</span> || !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> array = [];\n","    <span class=\"code-keyword\">var</span> <span class=\"code-keyword\">constructor</span> = array.<span class=\"code-keyword\">constructor</span> = {};\n","    <span class=\"code-keyword\">constructor</span>[SPECIES] = function () {\n","      <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">foo</span>: <span class=\"code-number\">1</span> };\n","    };\n","    <span class=\"code-keyword\">return</span> array[METHOD_NAME](<span class=\"code-built_in\">Boolean</span>).foo !== <span class=\"code-number\">1</span>;\n","  });\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 54 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">205</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 55 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> nativePropertyIsEnumerable = {}.propertyIsEnumerable;\n","<span class=\"code-keyword\">var</span> getOwnPropertyDescriptor = <span class=\"code-built_in\">Object</span>.getOwnPropertyDescriptor;\n","\n","<span class=\"code-comment\">// Nashorn ~ JDK8 bug</span>\n","<span class=\"code-keyword\">var</span> NASHORN_BUG = getOwnPropertyDescriptor &amp;&amp; !nativePropertyIsEnumerable.call({ <span class=\"code-number\">1</span>: <span class=\"code-number\">2</span> }, <span class=\"code-number\">1</span>);\n","\n","<span class=\"code-comment\">// `Object.prototype.propertyIsEnumerable` method implementation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable</span>\n","exports.f = NASHORN_BUG ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">propertyIsEnumerable</span>(<span class=\"code-params\">V</span>) </span>{\n","  <span class=\"code-keyword\">var</span> descriptor = getOwnPropertyDescriptor(<span class=\"code-keyword\">this</span>, V);\n","  <span class=\"code-keyword\">return</span> !!descriptor &amp;&amp; descriptor.enumerable;\n","} : nativePropertyIsEnumerable;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 56 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","\n","<span class=\"code-comment\">// `ToPrimitive` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-toprimitive</span>\n","<span class=\"code-comment\">// instead of the ES6 spec version, we didn't implement @@toPrimitive case</span>\n","<span class=\"code-comment\">// and the second argument - flag - preferred type is a string</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">input, PREFERRED_STRING</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!isObject(input)) <span class=\"code-keyword\">return</span> input;\n","  <span class=\"code-keyword\">var</span> fn, val;\n","  <span class=\"code-keyword\">if</span> (PREFERRED_STRING &amp;&amp; <span class=\"code-keyword\">typeof</span> (fn = input.toString) == <span class=\"code-string\">'function'</span> &amp;&amp; !isObject(val = fn.call(input))) <span class=\"code-keyword\">return</span> val;\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> (fn = input.valueOf) == <span class=\"code-string\">'function'</span> &amp;&amp; !isObject(val = fn.call(input))) <span class=\"code-keyword\">return</span> val;\n","  <span class=\"code-keyword\">if</span> (!PREFERRED_STRING &amp;&amp; <span class=\"code-keyword\">typeof</span> (fn = input.toString) == <span class=\"code-string\">'function'</span> &amp;&amp; !isObject(val = fn.call(input))) <span class=\"code-keyword\">return</span> val;\n","  <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">\"Can't convert object to primitive value\"</span>);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 57 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> internalObjectKeys = __webpack_require__(<span class=\"code-number\">102</span>);\n","<span class=\"code-keyword\">var</span> enumBugKeys = __webpack_require__(<span class=\"code-number\">73</span>);\n","\n","<span class=\"code-comment\">// `Object.keys` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.keys</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-built_in\">Object</span>.keys || <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">keys</span>(<span class=\"code-params\">O</span>) </span>{\n","  <span class=\"code-keyword\">return</span> internalObjectKeys(O, enumBugKeys);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 58 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> ceil = <span class=\"code-built_in\">Math</span>.ceil;\n","<span class=\"code-keyword\">var</span> floor = <span class=\"code-built_in\">Math</span>.floor;\n","\n","<span class=\"code-comment\">// `ToInteger` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-tointeger</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">argument</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">isNaN</span>(argument = +argument) ? <span class=\"code-number\">0</span> : (argument &gt; <span class=\"code-number\">0</span> ? floor : ceil)(argument);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 59 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> shared = __webpack_require__(<span class=\"code-number\">74</span>);\n","<span class=\"code-keyword\">var</span> uid = __webpack_require__(<span class=\"code-number\">60</span>);\n","\n","<span class=\"code-keyword\">var</span> keys = shared(<span class=\"code-string\">'keys'</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","  <span class=\"code-keyword\">return</span> keys[key] || (keys[key] = uid(key));\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 60 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> id = <span class=\"code-number\">0</span>;\n","<span class=\"code-keyword\">var</span> postfix = <span class=\"code-built_in\">Math</span>.random();\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-string\">'Symbol('</span> + <span class=\"code-built_in\">String</span>(key === <span class=\"code-literal\">undefined</span> ? <span class=\"code-string\">''</span> : key) + <span class=\"code-string\">')_'</span> + (++id + postfix).toString(<span class=\"code-number\">36</span>);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 61 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> TO_STRING_TAG_SUPPORT = __webpack_require__(<span class=\"code-number\">79</span>);\n","<span class=\"code-keyword\">var</span> classofRaw = __webpack_require__(<span class=\"code-number\">45</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> TO_STRING_TAG = wellKnownSymbol(<span class=\"code-string\">'toStringTag'</span>);\n","<span class=\"code-comment\">// ES3 wrong here</span>\n","<span class=\"code-keyword\">var</span> CORRECT_ARGUMENTS = classofRaw(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">arguments</span>; }()) == <span class=\"code-string\">'Arguments'</span>;\n","\n","<span class=\"code-comment\">// fallback for IE11 Script Access Denied error</span>\n","<span class=\"code-keyword\">var</span> tryGet = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it, key</span>) </span>{\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">return</span> it[key];\n","  } <span class=\"code-keyword\">catch</span> (error) { <span class=\"code-comment\">/* empty */</span> }\n","};\n","\n","<span class=\"code-comment\">// getting tag from ES6+ `Object.prototype.toString`</span>\n","<span class=\"code-built_in\">module</span>.exports = TO_STRING_TAG_SUPPORT ? classofRaw : <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> O, tag, result;\n","  <span class=\"code-keyword\">return</span> it === <span class=\"code-literal\">undefined</span> ? <span class=\"code-string\">'Undefined'</span> : it === <span class=\"code-literal\">null</span> ? <span class=\"code-string\">'Null'</span>\n","    <span class=\"code-comment\">// @@toStringTag case</span>\n","    : <span class=\"code-keyword\">typeof</span> (tag = tryGet(O = <span class=\"code-built_in\">Object</span>(it), TO_STRING_TAG)) == <span class=\"code-string\">'string'</span> ? tag\n","    <span class=\"code-comment\">// builtinTag case</span>\n","    : CORRECT_ARGUMENTS ? classofRaw(O)\n","    <span class=\"code-comment\">// ES3 arguments fallback</span>\n","    : (result = classofRaw(O)) == <span class=\"code-string\">'Object'</span> &amp;&amp; <span class=\"code-keyword\">typeof</span> O.callee == <span class=\"code-string\">'function'</span> ? <span class=\"code-string\">'Arguments'</span> : result;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 62 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// empty</span>\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 63 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> getBuiltIn = __webpack_require__(<span class=\"code-number\">28</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = getBuiltIn(<span class=\"code-string\">'navigator'</span>, <span class=\"code-string\">'userAgent'</span>) || <span class=\"code-string\">''</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 64 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> aFunction = __webpack_require__(<span class=\"code-number\">32</span>);\n","\n","<span class=\"code-keyword\">var</span> PromiseCapability = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">C</span>) </span>{\n","  <span class=\"code-keyword\">var</span> resolve, reject;\n","  <span class=\"code-keyword\">this</span>.promise = <span class=\"code-keyword\">new</span> C(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$$resolve, $$reject</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (resolve !== <span class=\"code-literal\">undefined</span> || reject !== <span class=\"code-literal\">undefined</span>) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">'Bad Promise constructor'</span>);\n","    resolve = $$resolve;\n","    reject = $$reject;\n","  });\n","  <span class=\"code-keyword\">this</span>.resolve = aFunction(resolve);\n","  <span class=\"code-keyword\">this</span>.reject = aFunction(reject);\n","};\n","\n","<span class=\"code-comment\">// 25.4.1.5 NewPromiseCapability(C)</span>\n","<span class=\"code-built_in\">module</span>.exports.f = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">C</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> PromiseCapability(C);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 65 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> charAt = __webpack_require__(<span class=\"code-number\">173</span>).charAt;\n","<span class=\"code-keyword\">var</span> InternalStateModule = __webpack_require__(<span class=\"code-number\">42</span>);\n","<span class=\"code-keyword\">var</span> defineIterator = __webpack_require__(<span class=\"code-number\">84</span>);\n","\n","<span class=\"code-keyword\">var</span> STRING_ITERATOR = <span class=\"code-string\">'String Iterator'</span>;\n","<span class=\"code-keyword\">var</span> setInternalState = InternalStateModule.set;\n","<span class=\"code-keyword\">var</span> getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n","\n","<span class=\"code-comment\">// `String.prototype[@@iterator]` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-string.prototype-@@iterator</span>\n","defineIterator(<span class=\"code-built_in\">String</span>, <span class=\"code-string\">'String'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">iterated</span>) </span>{\n","  setInternalState(<span class=\"code-keyword\">this</span>, {\n","    type: STRING_ITERATOR,\n","    string: <span class=\"code-built_in\">String</span>(iterated),\n","    index: <span class=\"code-number\">0</span>\n","  });\n","<span class=\"code-comment\">// `%StringIteratorPrototype%.next` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next</span>\n","}, <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">next</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> state = getInternalState(<span class=\"code-keyword\">this</span>);\n","  <span class=\"code-keyword\">var</span> string = state.string;\n","  <span class=\"code-keyword\">var</span> index = state.index;\n","  <span class=\"code-keyword\">var</span> point;\n","  <span class=\"code-keyword\">if</span> (index &gt;= string.length) <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: <span class=\"code-literal\">undefined</span>, <span class=\"code-attr\">done</span>: <span class=\"code-literal\">true</span> };\n","  point = charAt(string, index);\n","  state.index += point.length;\n","  <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: point, <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 66 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">197</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 67 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// a string of all valid unicode whitespaces</span>\n","<span class=\"code-comment\">// eslint-disable-next-line max-len</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-string\">'\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF'</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 68 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> propertyIsEnumerableModule = __webpack_require__(<span class=\"code-number\">55</span>);\n","<span class=\"code-keyword\">var</span> createPropertyDescriptor = __webpack_require__(<span class=\"code-number\">35</span>);\n","<span class=\"code-keyword\">var</span> toIndexedObject = __webpack_require__(<span class=\"code-number\">27</span>);\n","<span class=\"code-keyword\">var</span> toPrimitive = __webpack_require__(<span class=\"code-number\">56</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> IE8_DOM_DEFINE = __webpack_require__(<span class=\"code-number\">100</span>);\n","\n","<span class=\"code-keyword\">var</span> nativeGetOwnPropertyDescriptor = <span class=\"code-built_in\">Object</span>.getOwnPropertyDescriptor;\n","\n","<span class=\"code-comment\">// `Object.getOwnPropertyDescriptor` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor</span>\n","exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getOwnPropertyDescriptor</span>(<span class=\"code-params\">O, P</span>) </span>{\n","  O = toIndexedObject(O);\n","  P = toPrimitive(P, <span class=\"code-literal\">true</span>);\n","  <span class=\"code-keyword\">if</span> (IE8_DOM_DEFINE) <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">return</span> nativeGetOwnPropertyDescriptor(O, P);\n","  } <span class=\"code-keyword\">catch</span> (error) { <span class=\"code-comment\">/* empty */</span> }\n","  <span class=\"code-keyword\">if</span> (has(O, P)) <span class=\"code-keyword\">return</span> createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 69 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">45</span>);\n","\n","<span class=\"code-keyword\">var</span> split = <span class=\"code-string\">''</span>.split;\n","\n","<span class=\"code-comment\">// fallback for non-array-like ES3 and non-enumerable old V8 strings</span>\n","<span class=\"code-built_in\">module</span>.exports = fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-comment\">// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346</span>\n","  <span class=\"code-comment\">// eslint-disable-next-line no-prototype-builtins</span>\n","  <span class=\"code-keyword\">return</span> !<span class=\"code-built_in\">Object</span>(<span class=\"code-string\">'z'</span>).propertyIsEnumerable(<span class=\"code-number\">0</span>);\n","}) ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> classof(it) == <span class=\"code-string\">'String'</span> ? split.call(it, <span class=\"code-string\">''</span>) : <span class=\"code-built_in\">Object</span>(it);\n","} : <span class=\"code-built_in\">Object</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 70 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">document</span> = global.document;\n","<span class=\"code-comment\">// typeof document.createElement is 'object' in old IE</span>\n","<span class=\"code-keyword\">var</span> EXISTS = isObject(<span class=\"code-built_in\">document</span>) &amp;&amp; isObject(<span class=\"code-built_in\">document</span>.createElement);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> EXISTS ? <span class=\"code-built_in\">document</span>.createElement(it) : {};\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 71 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> toIndexedObject = __webpack_require__(<span class=\"code-number\">27</span>);\n","<span class=\"code-keyword\">var</span> toLength = __webpack_require__(<span class=\"code-number\">36</span>);\n","<span class=\"code-keyword\">var</span> toAbsoluteIndex = __webpack_require__(<span class=\"code-number\">72</span>);\n","\n","<span class=\"code-comment\">// `Array.prototype.{ indexOf, includes }` methods implementation</span>\n","<span class=\"code-keyword\">var</span> createMethod = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">IS_INCLUDES</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$this, el, fromIndex</span>) </span>{\n","    <span class=\"code-keyword\">var</span> O = toIndexedObject($<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">var</span> length = toLength(O.length);\n","    <span class=\"code-keyword\">var</span> index = toAbsoluteIndex(fromIndex, length);\n","    <span class=\"code-keyword\">var</span> value;\n","    <span class=\"code-comment\">// Array#includes uses SameValueZero equality algorithm</span>\n","    <span class=\"code-comment\">// eslint-disable-next-line no-self-compare</span>\n","    <span class=\"code-keyword\">if</span> (IS_INCLUDES &amp;&amp; el != el) <span class=\"code-keyword\">while</span> (length &gt; index) {\n","      value = O[index++];\n","      <span class=\"code-comment\">// eslint-disable-next-line no-self-compare</span>\n","      <span class=\"code-keyword\">if</span> (value != value) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","    <span class=\"code-comment\">// Array#indexOf ignores holes, Array#includes - not</span>\n","    } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">for</span> (;length &gt; index; index++) {\n","      <span class=\"code-keyword\">if</span> ((IS_INCLUDES || index <span class=\"code-keyword\">in</span> O) &amp;&amp; O[index] === el) <span class=\"code-keyword\">return</span> IS_INCLUDES || index || <span class=\"code-number\">0</span>;\n","    } <span class=\"code-keyword\">return</span> !IS_INCLUDES &amp;&amp; <span class=\"code-number\">-1</span>;\n","  };\n","};\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  <span class=\"code-comment\">// `Array.prototype.includes` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.includes</span>\n","  includes: createMethod(<span class=\"code-literal\">true</span>),\n","  <span class=\"code-comment\">// `Array.prototype.indexOf` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.indexof</span>\n","  indexOf: createMethod(<span class=\"code-literal\">false</span>)\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 72 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> toInteger = __webpack_require__(<span class=\"code-number\">58</span>);\n","\n","<span class=\"code-keyword\">var</span> max = <span class=\"code-built_in\">Math</span>.max;\n","<span class=\"code-keyword\">var</span> min = <span class=\"code-built_in\">Math</span>.min;\n","\n","<span class=\"code-comment\">// Helper for a popular repeating case of the spec:</span>\n","<span class=\"code-comment\">// Let integer be ? ToInteger(index).</span>\n","<span class=\"code-comment\">// If integer &lt; 0, let result be max((length + integer), 0); else let result be min(integer, length).</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">index, length</span>) </span>{\n","  <span class=\"code-keyword\">var</span> integer = toInteger(index);\n","  <span class=\"code-keyword\">return</span> integer &lt; <span class=\"code-number\">0</span> ? max(integer + length, <span class=\"code-number\">0</span>) : min(integer, length);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 73 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// IE8- don't enum bug keys</span>\n","<span class=\"code-built_in\">module</span>.exports = [\n","  <span class=\"code-string\">'constructor'</span>,\n","  <span class=\"code-string\">'hasOwnProperty'</span>,\n","  <span class=\"code-string\">'isPrototypeOf'</span>,\n","  <span class=\"code-string\">'propertyIsEnumerable'</span>,\n","  <span class=\"code-string\">'toLocaleString'</span>,\n","  <span class=\"code-string\">'toString'</span>,\n","  <span class=\"code-string\">'valueOf'</span>\n","];\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 74 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> IS_PURE = __webpack_require__(<span class=\"code-number\">37</span>);\n","<span class=\"code-keyword\">var</span> store = __webpack_require__(<span class=\"code-number\">75</span>);\n","\n","(<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, value</span>) </span>{\n","  <span class=\"code-keyword\">return</span> store[key] || (store[key] = value !== <span class=\"code-literal\">undefined</span> ? value : {});\n","})(<span class=\"code-string\">'versions'</span>, []).push({\n","  version: <span class=\"code-string\">'3.8.2'</span>,\n","  mode: IS_PURE ? <span class=\"code-string\">'pure'</span> : <span class=\"code-string\">'global'</span>,\n","  copyright: <span class=\"code-string\">'\u00A9 2021 Denis Pushkarev (zloirock.ru)'</span>\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 75 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> setGlobal = __webpack_require__(<span class=\"code-number\">138</span>);\n","\n","<span class=\"code-keyword\">var</span> SHARED = <span class=\"code-string\">'__core-js_shared__'</span>;\n","<span class=\"code-keyword\">var</span> store = global[SHARED] || setGlobal(SHARED, {});\n","\n","<span class=\"code-built_in\">module</span>.exports = store;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 76 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> toObject = __webpack_require__(<span class=\"code-number\">38</span>);\n","<span class=\"code-keyword\">var</span> sharedKey = __webpack_require__(<span class=\"code-number\">59</span>);\n","<span class=\"code-keyword\">var</span> CORRECT_PROTOTYPE_GETTER = __webpack_require__(<span class=\"code-number\">158</span>);\n","\n","<span class=\"code-keyword\">var</span> IE_PROTO = sharedKey(<span class=\"code-string\">'IE_PROTO'</span>);\n","<span class=\"code-keyword\">var</span> ObjectPrototype = <span class=\"code-built_in\">Object</span>.prototype;\n","\n","<span class=\"code-comment\">// `Object.getPrototypeOf` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.getprototypeof</span>\n","<span class=\"code-built_in\">module</span>.exports = CORRECT_PROTOTYPE_GETTER ? <span class=\"code-built_in\">Object</span>.getPrototypeOf : <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">O</span>) </span>{\n","  O = toObject(O);\n","  <span class=\"code-keyword\">if</span> (has(O, IE_PROTO)) <span class=\"code-keyword\">return</span> O[IE_PROTO];\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> O.constructor == <span class=\"code-string\">'function'</span> &amp;&amp; O <span class=\"code-keyword\">instanceof</span> O.constructor) {\n","    <span class=\"code-keyword\">return</span> O.constructor.prototype;\n","  } <span class=\"code-keyword\">return</span> O <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Object</span> ? ObjectPrototype : <span class=\"code-literal\">null</span>;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 77 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> aPossiblePrototype = __webpack_require__(<span class=\"code-number\">159</span>);\n","\n","<span class=\"code-comment\">// `Object.setPrototypeOf` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.setprototypeof</span>\n","<span class=\"code-comment\">// Works with __proto__ only. Old v8 can't work with null proto objects.</span>\n","<span class=\"code-comment\">/* eslint-disable no-proto */</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-built_in\">Object</span>.setPrototypeOf || (<span class=\"code-string\">'__proto__'</span> <span class=\"code-keyword\">in</span> {} ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> CORRECT_SETTER = <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">var</span> test = {};\n","  <span class=\"code-keyword\">var</span> setter;\n","  <span class=\"code-keyword\">try</span> {\n","    setter = <span class=\"code-built_in\">Object</span>.getOwnPropertyDescriptor(<span class=\"code-built_in\">Object</span>.prototype, <span class=\"code-string\">'__proto__'</span>).set;\n","    setter.call(test, []);\n","    CORRECT_SETTER = test <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span>;\n","  } <span class=\"code-keyword\">catch</span> (error) { <span class=\"code-comment\">/* empty */</span> }\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">setPrototypeOf</span>(<span class=\"code-params\">O, proto</span>) </span>{\n","    anObject(O);\n","    aPossiblePrototype(proto);\n","    <span class=\"code-keyword\">if</span> (CORRECT_SETTER) setter.call(O, proto);\n","    <span class=\"code-keyword\">else</span> O.__proto__ = proto;\n","    <span class=\"code-keyword\">return</span> O;\n","  };\n","}() : <span class=\"code-literal\">undefined</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 78 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = !!<span class=\"code-built_in\">Object</span>.getOwnPropertySymbols &amp;&amp; !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-comment\">// Chrome 38 Symbol has incorrect toString conversion</span>\n","  <span class=\"code-comment\">// eslint-disable-next-line no-undef</span>\n","  <span class=\"code-keyword\">return</span> !<span class=\"code-built_in\">String</span>(<span class=\"code-built_in\">Symbol</span>());\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 79 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> TO_STRING_TAG = wellKnownSymbol(<span class=\"code-string\">'toStringTag'</span>);\n","<span class=\"code-keyword\">var</span> test = {};\n","\n","test[TO_STRING_TAG] = <span class=\"code-string\">'z'</span>;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-built_in\">String</span>(test) === <span class=\"code-string\">'[object z]'</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 80 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it, Constructor, name</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!(it <span class=\"code-keyword\">instanceof</span> Constructor)) {\n","    <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">'Incorrect '</span> + (name ? name + <span class=\"code-string\">' '</span> : <span class=\"code-string\">''</span>) + <span class=\"code-string\">'invocation'</span>);\n","  } <span class=\"code-keyword\">return</span> it;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 81 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">45</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = classof(global.process) == <span class=\"code-string\">'process'</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 82 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">exec</span>) </span>{\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">error</span>: <span class=\"code-literal\">false</span>, <span class=\"code-attr\">value</span>: exec() };\n","  } <span class=\"code-keyword\">catch</span> (error) {\n","    <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">error</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">value</span>: error };\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 83 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> userAgent = __webpack_require__(<span class=\"code-number\">63</span>);\n","\n","<span class=\"code-keyword\">var</span> process = global.process;\n","<span class=\"code-keyword\">var</span> versions = process &amp;&amp; process.versions;\n","<span class=\"code-keyword\">var</span> v8 = versions &amp;&amp; versions.v8;\n","<span class=\"code-keyword\">var</span> match, version;\n","\n","<span class=\"code-keyword\">if</span> (v8) {\n","  match = v8.split(<span class=\"code-string\">'.'</span>);\n","  version = match[<span class=\"code-number\">0</span>] + match[<span class=\"code-number\">1</span>];\n","} <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (userAgent) {\n","  match = userAgent.match(<span class=\"code-regexp\">/Edge\\/(\\d+)/</span>);\n","  <span class=\"code-keyword\">if</span> (!match || match[<span class=\"code-number\">1</span>] &gt;= <span class=\"code-number\">74</span>) {\n","    match = userAgent.match(<span class=\"code-regexp\">/Chrome\\/(\\d+)/</span>);\n","    <span class=\"code-keyword\">if</span> (match) version = match[<span class=\"code-number\">1</span>];\n","  }\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = version &amp;&amp; +version;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 84 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> createIteratorConstructor = __webpack_require__(<span class=\"code-number\">174</span>);\n","<span class=\"code-keyword\">var</span> getPrototypeOf = __webpack_require__(<span class=\"code-number\">76</span>);\n","<span class=\"code-keyword\">var</span> setPrototypeOf = __webpack_require__(<span class=\"code-number\">77</span>);\n","<span class=\"code-keyword\">var</span> setToStringTag = __webpack_require__(<span class=\"code-number\">41</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> redefine = __webpack_require__(<span class=\"code-number\">50</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> IS_PURE = __webpack_require__(<span class=\"code-number\">37</span>);\n","<span class=\"code-keyword\">var</span> Iterators = __webpack_require__(<span class=\"code-number\">40</span>);\n","<span class=\"code-keyword\">var</span> IteratorsCore = __webpack_require__(<span class=\"code-number\">113</span>);\n","\n","<span class=\"code-keyword\">var</span> IteratorPrototype = IteratorsCore.IteratorPrototype;\n","<span class=\"code-keyword\">var</span> BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\n","<span class=\"code-keyword\">var</span> ITERATOR = wellKnownSymbol(<span class=\"code-string\">'iterator'</span>);\n","<span class=\"code-keyword\">var</span> KEYS = <span class=\"code-string\">'keys'</span>;\n","<span class=\"code-keyword\">var</span> VALUES = <span class=\"code-string\">'values'</span>;\n","<span class=\"code-keyword\">var</span> ENTRIES = <span class=\"code-string\">'entries'</span>;\n","\n","<span class=\"code-keyword\">var</span> returnThis = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>; };\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED</span>) </span>{\n","  createIteratorConstructor(IteratorConstructor, NAME, next);\n","\n","  <span class=\"code-keyword\">var</span> getIterationMethod = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">KIND</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (KIND === DEFAULT &amp;&amp; defaultIterator) <span class=\"code-keyword\">return</span> defaultIterator;\n","    <span class=\"code-keyword\">if</span> (!BUGGY_SAFARI_ITERATORS &amp;&amp; KIND <span class=\"code-keyword\">in</span> IterablePrototype) <span class=\"code-keyword\">return</span> IterablePrototype[KIND];\n","    <span class=\"code-keyword\">switch</span> (KIND) {\n","      <span class=\"code-keyword\">case</span> KEYS: <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">keys</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> IteratorConstructor(<span class=\"code-keyword\">this</span>, KIND); };\n","      <span class=\"code-keyword\">case</span> VALUES: <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">values</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> IteratorConstructor(<span class=\"code-keyword\">this</span>, KIND); };\n","      <span class=\"code-keyword\">case</span> ENTRIES: <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">entries</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> IteratorConstructor(<span class=\"code-keyword\">this</span>, KIND); };\n","    } <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> IteratorConstructor(<span class=\"code-keyword\">this</span>); };\n","  };\n","\n","  <span class=\"code-keyword\">var</span> TO_STRING_TAG = NAME + <span class=\"code-string\">' Iterator'</span>;\n","  <span class=\"code-keyword\">var</span> INCORRECT_VALUES_NAME = <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">var</span> IterablePrototype = Iterable.prototype;\n","  <span class=\"code-keyword\">var</span> nativeIterator = IterablePrototype[ITERATOR]\n","    || IterablePrototype[<span class=\"code-string\">'@@iterator'</span>]\n","    || DEFAULT &amp;&amp; IterablePrototype[DEFAULT];\n","  <span class=\"code-keyword\">var</span> defaultIterator = !BUGGY_SAFARI_ITERATORS &amp;&amp; nativeIterator || getIterationMethod(DEFAULT);\n","  <span class=\"code-keyword\">var</span> anyNativeIterator = NAME == <span class=\"code-string\">'Array'</span> ? IterablePrototype.entries || nativeIterator : nativeIterator;\n","  <span class=\"code-keyword\">var</span> CurrentIteratorPrototype, methods, KEY;\n","\n","  <span class=\"code-comment\">// fix native</span>\n","  <span class=\"code-keyword\">if</span> (anyNativeIterator) {\n","    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(<span class=\"code-keyword\">new</span> Iterable()));\n","    <span class=\"code-keyword\">if</span> (IteratorPrototype !== <span class=\"code-built_in\">Object</span>.prototype &amp;&amp; CurrentIteratorPrototype.next) {\n","      <span class=\"code-keyword\">if</span> (!IS_PURE &amp;&amp; getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n","        <span class=\"code-keyword\">if</span> (setPrototypeOf) {\n","          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n","        } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> CurrentIteratorPrototype[ITERATOR] != <span class=\"code-string\">'function'</span>) {\n","          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n","        }\n","      }\n","      <span class=\"code-comment\">// Set @@toStringTag to native iterators</span>\n","      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, <span class=\"code-literal\">true</span>, <span class=\"code-literal\">true</span>);\n","      <span class=\"code-keyword\">if</span> (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n","    }\n","  }\n","\n","  <span class=\"code-comment\">// fix Array#{values, @@iterator}.name in V8 / FF</span>\n","  <span class=\"code-keyword\">if</span> (DEFAULT == VALUES &amp;&amp; nativeIterator &amp;&amp; nativeIterator.name !== VALUES) {\n","    INCORRECT_VALUES_NAME = <span class=\"code-literal\">true</span>;\n","    defaultIterator = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">values</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> nativeIterator.call(<span class=\"code-keyword\">this</span>); };\n","  }\n","\n","  <span class=\"code-comment\">// define iterator</span>\n","  <span class=\"code-keyword\">if</span> ((!IS_PURE || FORCED) &amp;&amp; IterablePrototype[ITERATOR] !== defaultIterator) {\n","    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n","  }\n","  Iterators[NAME] = defaultIterator;\n","\n","  <span class=\"code-comment\">// export additional methods</span>\n","  <span class=\"code-keyword\">if</span> (DEFAULT) {\n","    methods = {\n","      values: getIterationMethod(VALUES),\n","      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n","      entries: getIterationMethod(ENTRIES)\n","    };\n","    <span class=\"code-keyword\">if</span> (FORCED) <span class=\"code-keyword\">for</span> (KEY <span class=\"code-keyword\">in</span> methods) {\n","      <span class=\"code-keyword\">if</span> (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY <span class=\"code-keyword\">in</span> IterablePrototype)) {\n","        redefine(IterablePrototype, KEY, methods[KEY]);\n","      }\n","    } <span class=\"code-keyword\">else</span> $({ <span class=\"code-attr\">target</span>: NAME, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n","  }\n","\n","  <span class=\"code-keyword\">return</span> methods;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 85 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> };\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 86 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> isArray = __webpack_require__(<span class=\"code-number\">52</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> SPECIES = wellKnownSymbol(<span class=\"code-string\">'species'</span>);\n","\n","<span class=\"code-comment\">// `ArraySpeciesCreate` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-arrayspeciescreate</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">originalArray, length</span>) </span>{\n","  <span class=\"code-keyword\">var</span> C;\n","  <span class=\"code-keyword\">if</span> (isArray(originalArray)) {\n","    C = originalArray.constructor;\n","    <span class=\"code-comment\">// cross-realm fallback</span>\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> C == <span class=\"code-string\">'function'</span> &amp;&amp; (C === <span class=\"code-built_in\">Array</span> || isArray(C.prototype))) C = <span class=\"code-literal\">undefined</span>;\n","    <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (isObject(C)) {\n","      C = C[SPECIES];\n","      <span class=\"code-keyword\">if</span> (C === <span class=\"code-literal\">null</span>) C = <span class=\"code-literal\">undefined</span>;\n","    }\n","  } <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> (C === <span class=\"code-literal\">undefined</span> ? <span class=\"code-built_in\">Array</span> : C)(length === <span class=\"code-number\">0</span> ? <span class=\"code-number\">0</span> : length);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 87 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">METHOD_NAME, argument</span>) </span>{\n","  <span class=\"code-keyword\">var</span> method = [][METHOD_NAME];\n","  <span class=\"code-keyword\">return</span> !!method &amp;&amp; fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-comment\">// eslint-disable-next-line no-useless-call,no-throw-literal</span>\n","    method.call(<span class=\"code-literal\">null</span>, argument || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">throw</span> <span class=\"code-number\">1</span>; }, <span class=\"code-number\">1</span>);\n","  });\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 88 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">183</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 89 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">188</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 90 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">201</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 91 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> toPrimitive = __webpack_require__(<span class=\"code-number\">56</span>);\n","<span class=\"code-keyword\">var</span> definePropertyModule = __webpack_require__(<span class=\"code-number\">18</span>);\n","<span class=\"code-keyword\">var</span> createPropertyDescriptor = __webpack_require__(<span class=\"code-number\">35</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">object, key, value</span>) </span>{\n","  <span class=\"code-keyword\">var</span> propertyKey = toPrimitive(key);\n","  <span class=\"code-keyword\">if</span> (propertyKey <span class=\"code-keyword\">in</span> object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(<span class=\"code-number\">0</span>, value));\n","  <span class=\"code-keyword\">else</span> object[propertyKey] = value;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 92 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> requireObjectCoercible = __webpack_require__(<span class=\"code-number\">46</span>);\n","<span class=\"code-keyword\">var</span> whitespaces = __webpack_require__(<span class=\"code-number\">67</span>);\n","\n","<span class=\"code-keyword\">var</span> whitespace = <span class=\"code-string\">'['</span> + whitespaces + <span class=\"code-string\">']'</span>;\n","<span class=\"code-keyword\">var</span> ltrim = <span class=\"code-built_in\">RegExp</span>(<span class=\"code-string\">'^'</span> + whitespace + whitespace + <span class=\"code-string\">'*'</span>);\n","<span class=\"code-keyword\">var</span> rtrim = <span class=\"code-built_in\">RegExp</span>(whitespace + whitespace + <span class=\"code-string\">'*$'</span>);\n","\n","<span class=\"code-comment\">// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation</span>\n","<span class=\"code-keyword\">var</span> createMethod = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">TYPE</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$this</span>) </span>{\n","    <span class=\"code-keyword\">var</span> string = <span class=\"code-built_in\">String</span>(requireObjectCoercible($<span class=\"code-keyword\">this</span>));\n","    <span class=\"code-keyword\">if</span> (TYPE &amp; <span class=\"code-number\">1</span>) string = string.replace(ltrim, <span class=\"code-string\">''</span>);\n","    <span class=\"code-keyword\">if</span> (TYPE &amp; <span class=\"code-number\">2</span>) string = string.replace(rtrim, <span class=\"code-string\">''</span>);\n","    <span class=\"code-keyword\">return</span> string;\n","  };\n","};\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  <span class=\"code-comment\">// `String.prototype.{ trimLeft, trimStart }` methods</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-string.prototype.trimstart</span>\n","  start: createMethod(<span class=\"code-number\">1</span>),\n","  <span class=\"code-comment\">// `String.prototype.{ trimRight, trimEnd }` methods</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-string.prototype.trimend</span>\n","  end: createMethod(<span class=\"code-number\">2</span>),\n","  <span class=\"code-comment\">// `String.prototype.trim` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-string.prototype.trim</span>\n","  trim: createMethod(<span class=\"code-number\">3</span>)\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 93 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">222</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 94 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> _Symbol$iterator = __webpack_require__(<span class=\"code-number\">225</span>);\n","\n","<span class=\"code-keyword\">var</span> _Symbol = __webpack_require__(<span class=\"code-number\">228</span>);\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_typeof</span>(<span class=\"code-params\">obj</span>) </span>{\n","  <span class=\"code-string\">\"@babel/helpers - typeof\"</span>;\n","\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> _Symbol === <span class=\"code-string\">\"function\"</span> &amp;&amp; <span class=\"code-keyword\">typeof</span> _Symbol$iterator === <span class=\"code-string\">\"symbol\"</span>) {\n","    <span class=\"code-built_in\">module</span>.exports = _typeof = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_typeof</span>(<span class=\"code-params\">obj</span>) </span>{\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">typeof</span> obj;\n","    };\n","  } <span class=\"code-keyword\">else</span> {\n","    <span class=\"code-built_in\">module</span>.exports = _typeof = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">_typeof</span>(<span class=\"code-params\">obj</span>) </span>{\n","      <span class=\"code-keyword\">return</span> obj &amp;&amp; <span class=\"code-keyword\">typeof</span> _Symbol === <span class=\"code-string\">\"function\"</span> &amp;&amp; obj.constructor === _Symbol &amp;&amp; obj !== _Symbol.prototype ? <span class=\"code-string\">\"symbol\"</span> : <span class=\"code-keyword\">typeof</span> obj;\n","    };\n","  }\n","\n","  <span class=\"code-keyword\">return</span> _typeof(obj);\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = _typeof;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 95 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","exports.f = wellKnownSymbol;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 96 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description Menu class \u7236\u7C7B\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> Panel_1 = __importDefault(__webpack_require__(<span class=\"code-number\">31</span>));\n","\n","<span class=\"code-keyword\">var</span> Menu =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Menu</span>(<span class=\"code-params\">$elem, editor</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">this</span>.$elem = $elem;\n","    <span class=\"code-keyword\">this</span>.editor = editor;\n","    <span class=\"code-keyword\">this</span>._active = <span class=\"code-literal\">false</span>; <span class=\"code-comment\">// \u7ED1\u5B9A\u83DC\u5355\u70B9\u51FB\u4E8B\u4EF6</span>\n","\n","    $elem.on(<span class=\"code-string\">'click'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">e</span>) </span>{\n","      <span class=\"code-keyword\">var</span> _context;\n","\n","      Panel_1[<span class=\"code-string\">\"default\"</span>].hideCurAllPanels(); <span class=\"code-comment\">// \u9690\u85CF\u5F53\u524D\u7684\u6240\u6709 Panel</span>\n","      <span class=\"code-comment\">// \u89E6\u53D1\u83DC\u5355\u70B9\u51FB\u7684\u94A9\u5B50</span>\n","\n","      (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context = editor.txt.eventHooks.menuClickEvents).call(_context, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","        <span class=\"code-keyword\">return</span> fn();\n","      });\n","      e.stopPropagation();\n","\n","      <span class=\"code-keyword\">if</span> (editor.selection.getRange() == <span class=\"code-literal\">null</span>) {\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      _this.clickHandler(e);\n","    });\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83DC\u5355\u70B9\u51FB\u4E8B\u4EF6\uFF0C\u5B50\u7C7B\u53EF\u91CD\u5199\n</span>","<span class=\"code-comment\">   * @param e event\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Menu.prototype.clickHandler = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">e</span>) </span>{};\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6FC0\u6D3B\u83DC\u5355\uFF0C\u9AD8\u4EAE\u663E\u793A\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Menu.prototype.active = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">this</span>._active = <span class=\"code-literal\">true</span>;\n","    <span class=\"code-keyword\">this</span>.$elem.addClass(<span class=\"code-string\">'w-e-active'</span>);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u53D6\u6D88\u6FC0\u6D3B\uFF0C\u4E0D\u518D\u9AD8\u4EAE\u663E\u793A\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Menu.prototype.unActive = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">this</span>._active = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>.$elem.removeClass(<span class=\"code-string\">'w-e-active'</span>);\n","  };\n","\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(Menu.prototype, <span class=\"code-string\">\"isActive\"</span>, {\n","    <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">     * \u662F\u5426\u5904\u4E8E\u6FC0\u6D3B\u72B6\u6001\n</span>","<span class=\"code-comment\">     */</span>\n","    <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>() {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>._active;\n","    },\n","    enumerable: <span class=\"code-literal\">false</span>,\n","    configurable: <span class=\"code-literal\">true</span>\n","  });\n","  <span class=\"code-keyword\">return</span> Menu;\n","}();\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = Menu;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 97 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u4E0A\u4F20\u56FE\u7247\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _indexOf = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">54</span>));\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _bind = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">88</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> util_1 = __webpack_require__(<span class=\"code-number\">7</span>);\n","\n","<span class=\"code-keyword\">var</span> upload_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">335</span>));\n","\n","<span class=\"code-keyword\">var</span> progress_1 = __importDefault(__webpack_require__(<span class=\"code-number\">336</span>));\n","\n","<span class=\"code-keyword\">var</span> UploadImg =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">UploadImg</span>(<span class=\"code-params\">editor</span>) </span>{\n","    <span class=\"code-keyword\">this</span>.editor = editor;\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5F80\u7F16\u8F91\u533A\u57DF\u63D2\u5165\u56FE\u7247\n</span>","<span class=\"code-comment\">   * @param src \u56FE\u7247\u5730\u5740\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  UploadImg.prototype.insertImg = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">src</span>) </span>{\n","    <span class=\"code-keyword\">var</span> editor = <span class=\"code-keyword\">this</span>.editor;\n","    <span class=\"code-keyword\">var</span> config = editor.config;\n","    <span class=\"code-keyword\">var</span> i18nPrefix = <span class=\"code-string\">'validate.'</span>;\n","\n","    <span class=\"code-keyword\">var</span> t = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">t</span>(<span class=\"code-params\">text, prefix</span>) </span>{\n","      <span class=\"code-keyword\">if</span> (prefix === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","        prefix = i18nPrefix;\n","      }\n","\n","      <span class=\"code-keyword\">return</span> editor.i18next.t(prefix + text);\n","    }; <span class=\"code-comment\">// \u5148\u63D2\u5165\u56FE\u7247\uFF0C\u65E0\u8BBA\u662F\u5426\u80FD\u6210\u529F</span>\n","\n","\n","    editor.cmd[<span class=\"code-string\">\"do\"</span>](<span class=\"code-string\">'insertHTML'</span>, <span class=\"code-string\">\"&lt;img src=\\\"\"</span> + src + <span class=\"code-string\">\"\\\" style=\\\"max-width:100%;\\\"/&gt;\"</span>); <span class=\"code-comment\">// \u6267\u884C\u56DE\u8C03\u51FD\u6570</span>\n","\n","    config.linkImgCallback(src); <span class=\"code-comment\">// \u52A0\u8F7D\u56FE\u7247</span>\n","\n","    <span class=\"code-keyword\">var</span> img = <span class=\"code-built_in\">document</span>.createElement(<span class=\"code-string\">'img'</span>);\n","\n","    img.onload = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      img = <span class=\"code-literal\">null</span>;\n","    };\n","\n","    img.onerror = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      config.customAlert(t(<span class=\"code-string\">'\u63D2\u5165\u56FE\u7247\u9519\u8BEF'</span>), <span class=\"code-string\">'error'</span>, <span class=\"code-string\">\"wangEditor: \"</span> + t(<span class=\"code-string\">'\u63D2\u5165\u56FE\u7247\u9519\u8BEF'</span>) + <span class=\"code-string\">\"\\uFF0C\"</span> + t(<span class=\"code-string\">'\u56FE\u7247\u94FE\u63A5'</span>) + <span class=\"code-string\">\" \\\"\"</span> + src + <span class=\"code-string\">\"\\\"\\uFF0C\"</span> + t(<span class=\"code-string\">'\u4E0B\u8F7D\u94FE\u63A5\u5931\u8D25'</span>));\n","      img = <span class=\"code-literal\">null</span>;\n","    };\n","\n","    img.onabort = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">return</span> img = <span class=\"code-literal\">null</span>;\n","    };\n","\n","    img.src = src;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u4E0A\u4F20\u56FE\u7247\n</span>","<span class=\"code-comment\">   * @param files \u6587\u4EF6\u5217\u8868\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  UploadImg.prototype.uploadImg = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">files</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this_1 = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">if</span> (!files.length) {\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> editor = <span class=\"code-keyword\">this</span>.editor;\n","    <span class=\"code-keyword\">var</span> config = editor.config; <span class=\"code-comment\">// ------------------------------ i18next ------------------------------</span>\n","\n","    <span class=\"code-keyword\">var</span> i18nPrefix = <span class=\"code-string\">'validate.'</span>;\n","\n","    <span class=\"code-keyword\">var</span> t = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">t</span>(<span class=\"code-params\">text</span>) </span>{\n","      <span class=\"code-keyword\">return</span> editor.i18next.t(i18nPrefix + text);\n","    }; <span class=\"code-comment\">// ------------------------------ \u83B7\u53D6\u914D\u7F6E\u4FE1\u606F ------------------------------</span>\n","    <span class=\"code-comment\">// \u670D\u52A1\u7AEF\u5730\u5740</span>\n","\n","\n","    <span class=\"code-keyword\">var</span> uploadImgServer = config.uploadImgServer; <span class=\"code-comment\">// base64 \u683C\u5F0F</span>\n","\n","    <span class=\"code-keyword\">var</span> uploadImgShowBase64 = config.uploadImgShowBase64; <span class=\"code-comment\">// \u56FE\u7247\u6700\u5927\u4F53\u79EF</span>\n","\n","    <span class=\"code-keyword\">var</span> maxSize = config.uploadImgMaxSize;\n","    <span class=\"code-keyword\">var</span> maxSizeM = maxSize / <span class=\"code-number\">1024</span> / <span class=\"code-number\">1024</span>; <span class=\"code-comment\">// \u4E00\u6B21\u6700\u591A\u4E0A\u4F20\u56FE\u7247\u6570\u91CF</span>\n","\n","    <span class=\"code-keyword\">var</span> maxLength = config.uploadImgMaxLength; <span class=\"code-comment\">// \u81EA\u5B9A\u4E49 fileName</span>\n","\n","    <span class=\"code-keyword\">var</span> uploadFileName = config.uploadFileName; <span class=\"code-comment\">// \u81EA\u5B9A\u4E49\u53C2\u6570</span>\n","\n","    <span class=\"code-keyword\">var</span> uploadImgParams = config.uploadImgParams; <span class=\"code-comment\">// \u53C2\u6570\u62FC\u63A5\u5230 url \u4E2D</span>\n","\n","    <span class=\"code-keyword\">var</span> uploadImgParamsWithUrl = config.uploadImgParamsWithUrl; <span class=\"code-comment\">// \u81EA\u5B9A\u4E49 header</span>\n","\n","    <span class=\"code-keyword\">var</span> uploadImgHeaders = config.uploadImgHeaders; <span class=\"code-comment\">// \u94A9\u5B50\u51FD\u6570</span>\n","\n","    <span class=\"code-keyword\">var</span> hooks = config.uploadImgHooks; <span class=\"code-comment\">// \u4E0A\u4F20\u56FE\u7247\u8D85\u65F6\u65F6\u95F4</span>\n","\n","    <span class=\"code-keyword\">var</span> timeout = config.uploadImgTimeout; <span class=\"code-comment\">// \u8DE8\u57DF\u5E26 cookie</span>\n","\n","    <span class=\"code-keyword\">var</span> withCredentials = config.withCredentials; <span class=\"code-comment\">// \u81EA\u5B9A\u4E49\u4E0A\u4F20\u56FE\u7247</span>\n","\n","    <span class=\"code-keyword\">var</span> customUploadImg = config.customUploadImg;\n","\n","    <span class=\"code-keyword\">if</span> (!customUploadImg) {\n","      <span class=\"code-comment\">// \u6CA1\u6709 customUploadImg \u7684\u60C5\u51B5\u4E0B\uFF0C\u9700\u8981\u5982\u4E0B\u4E24\u4E2A\u914D\u7F6E\u624D\u80FD\u7EE7\u7EED\u8FDB\u884C\u56FE\u7247\u4E0A\u4F20</span>\n","      <span class=\"code-keyword\">if</span> (!uploadImgServer &amp;&amp; !uploadImgShowBase64) {\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","    } <span class=\"code-comment\">// ------------------------------ \u9A8C\u8BC1\u6587\u4EF6\u4FE1\u606F ------------------------------</span>\n","\n","\n","    <span class=\"code-keyword\">var</span> resultFiles = [];\n","    <span class=\"code-keyword\">var</span> errInfos = [];\n","    util_1.arrForEach(files, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">file</span>) </span>{\n","      <span class=\"code-keyword\">var</span> name = file.name;\n","      <span class=\"code-keyword\">var</span> size = file.size; <span class=\"code-comment\">// chrome \u4F4E\u7248\u672C name === undefined</span>\n","\n","      <span class=\"code-keyword\">if</span> (!name || !size) {\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      <span class=\"code-keyword\">if</span> (<span class=\"code-regexp\">/\\.(jpg|jpeg|png|bmp|gif|webp)$/i</span>.test(name) === <span class=\"code-literal\">false</span>) {\n","        <span class=\"code-comment\">// \u540E\u7F00\u540D\u4E0D\u5408\u6CD5\uFF0C\u4E0D\u662F\u56FE\u7247</span>\n","        errInfos.push(<span class=\"code-string\">\"\\u3010\"</span> + name + <span class=\"code-string\">\"\\u3011\"</span> + t(<span class=\"code-string\">'\u4E0D\u662F\u56FE\u7247'</span>));\n","        <span class=\"code-keyword\">return</span>;\n","      }\n","\n","      <span class=\"code-keyword\">if</span> (maxSize &lt; size) {\n","        <span class=\"code-comment\">// \u4E0A\u4F20\u56FE\u7247\u8FC7\u5927</span>\n","        errInfos.push(<span class=\"code-string\">\"\\u3010\"</span> + name + <span class=\"code-string\">\"\\u3011\"</span> + t(<span class=\"code-string\">'\u5927\u4E8E'</span>) + <span class=\"code-string\">\" \"</span> + maxSizeM + <span class=\"code-string\">\"M\"</span>);\n","        <span class=\"code-keyword\">return</span>;\n","      } <span class=\"code-comment\">// \u9A8C\u8BC1\u901A\u8FC7\u7684\u52A0\u5165\u7ED3\u679C\u5217\u8868</span>\n","\n","\n","      resultFiles.push(file);\n","    }); <span class=\"code-comment\">// \u629B\u51FA\u9A8C\u8BC1\u4FE1\u606F</span>\n","\n","    <span class=\"code-keyword\">if</span> (errInfos.length) {\n","      config.customAlert(t(<span class=\"code-string\">'\u56FE\u7247\u9A8C\u8BC1\u672A\u901A\u8FC7'</span>) + <span class=\"code-string\">\": \\n\"</span> + errInfos.join(<span class=\"code-string\">'\\n'</span>), <span class=\"code-string\">'warning'</span>);\n","      <span class=\"code-keyword\">return</span>;\n","    } <span class=\"code-comment\">// \u5982\u679C\u8FC7\u6EE4\u540E\u6587\u4EF6\u5217\u8868\u4E3A\u7A7A\u76F4\u63A5\u8FD4\u56DE</span>\n","\n","\n","    <span class=\"code-keyword\">if</span> (resultFiles.length === <span class=\"code-number\">0</span>) {\n","      config.customAlert(t(<span class=\"code-string\">'\u4F20\u5165\u7684\u6587\u4EF6\u4E0D\u5408\u6CD5'</span>), <span class=\"code-string\">'warning'</span>);\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (resultFiles.length &gt; maxLength) {\n","      config.customAlert(t(<span class=\"code-string\">'\u4E00\u6B21\u6700\u591A\u4E0A\u4F20'</span>) + maxLength + t(<span class=\"code-string\">'\u5F20\u56FE\u7247'</span>), <span class=\"code-string\">'warning'</span>);\n","      <span class=\"code-keyword\">return</span>;\n","    } <span class=\"code-comment\">// ------------------------------ \u81EA\u5B9A\u4E49\u4E0A\u4F20 ------------------------------</span>\n","\n","\n","    <span class=\"code-keyword\">if</span> (customUploadImg &amp;&amp; <span class=\"code-keyword\">typeof</span> customUploadImg === <span class=\"code-string\">'function'</span>) {\n","      <span class=\"code-keyword\">var</span> _context;\n","\n","      customUploadImg(resultFiles, (<span class=\"code-number\">0</span>, _bind[<span class=\"code-string\">\"default\"</span>])(_context = <span class=\"code-keyword\">this</span>.insertImg).call(_context, <span class=\"code-keyword\">this</span>)); <span class=\"code-comment\">// \u963B\u6B62\u4EE5\u4E0B\u4EE3\u7801\u6267\u884C\uFF0C\u91CD\u8981\uFF01\uFF01\uFF01</span>\n","\n","      <span class=\"code-keyword\">return</span>;\n","    } <span class=\"code-comment\">// ------------------------------ \u4E0A\u4F20\u56FE\u7247 ------------------------------</span>\n","    <span class=\"code-comment\">// \u6DFB\u52A0\u56FE\u7247\u6570\u636E</span>\n","\n","\n","    <span class=\"code-keyword\">var</span> formData = <span class=\"code-keyword\">new</span> FormData();\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(resultFiles).call(resultFiles, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">file, index</span>) </span>{\n","      <span class=\"code-keyword\">var</span> name = uploadFileName || file.name;\n","\n","      <span class=\"code-keyword\">if</span> (resultFiles.length &gt; <span class=\"code-number\">1</span>) {\n","        <span class=\"code-comment\">// \u591A\u4E2A\u6587\u4EF6\u65F6\uFF0Cfilename \u4E0D\u80FD\u91CD\u590D</span>\n","        name = name + (index + <span class=\"code-number\">1</span>);\n","      }\n","\n","      formData.append(name, file);\n","    });\n","\n","    <span class=\"code-keyword\">if</span> (uploadImgServer) {\n","      <span class=\"code-comment\">// \u6DFB\u52A0\u81EA\u5B9A\u4E49\u53C2\u6570</span>\n","      <span class=\"code-keyword\">var</span> uploadImgServerArr = uploadImgServer.split(<span class=\"code-string\">'#'</span>);\n","      uploadImgServer = uploadImgServerArr[<span class=\"code-number\">0</span>];\n","      <span class=\"code-keyword\">var</span> uploadImgServerHash = uploadImgServerArr[<span class=\"code-number\">1</span>] || <span class=\"code-string\">''</span>;\n","      (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(util_1).call(util_1, uploadImgParams, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, val</span>) </span>{\n","        <span class=\"code-comment\">// \u56E0\u4F7F\u7528\u8005\u53CD\u5E94\uFF0C\u81EA\u5B9A\u4E49\u53C2\u6570\u4E0D\u80FD\u9ED8\u8BA4 encode \uFF0C\u7531 v3.1.1 \u7248\u672C\u5F00\u59CB\u6CE8\u91CA\u6389</span>\n","        <span class=\"code-comment\">// val = encodeURIComponent(val)</span>\n","        <span class=\"code-comment\">// \u7B2C\u4E00\uFF0C\u5C06\u53C2\u6570\u62FC\u63A5\u5230 url \u4E2D</span>\n","        <span class=\"code-keyword\">if</span> (uploadImgParamsWithUrl) {\n","          <span class=\"code-keyword\">if</span> ((<span class=\"code-number\">0</span>, _indexOf[<span class=\"code-string\">\"default\"</span>])(uploadImgServer).call(uploadImgServer, <span class=\"code-string\">'?'</span>) &gt; <span class=\"code-number\">0</span>) {\n","            uploadImgServer += <span class=\"code-string\">'&amp;'</span>;\n","          } <span class=\"code-keyword\">else</span> {\n","            uploadImgServer += <span class=\"code-string\">'?'</span>;\n","          }\n","\n","          uploadImgServer = uploadImgServer + key + <span class=\"code-string\">'='</span> + val;\n","        } <span class=\"code-comment\">// \u7B2C\u4E8C\uFF0C\u5C06\u53C2\u6570\u6DFB\u52A0\u5230 formData \u4E2D</span>\n","\n","\n","        formData.append(key, val);\n","      });\n","\n","      <span class=\"code-keyword\">if</span> (uploadImgServerHash) {\n","        uploadImgServer += <span class=\"code-string\">'#'</span> + uploadImgServerHash;\n","      } <span class=\"code-comment\">// \u5F00\u59CB\u4E0A\u4F20</span>\n","\n","\n","      <span class=\"code-keyword\">var</span> xhr = upload_core_1[<span class=\"code-string\">\"default\"</span>](uploadImgServer, {\n","        timeout: timeout,\n","        formData: formData,\n","        headers: uploadImgHeaders,\n","        withCredentials: !!withCredentials,\n","        beforeSend: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">beforeSend</span>(<span class=\"code-params\">xhr</span>) </span>{\n","          <span class=\"code-keyword\">if</span> (hooks.before) <span class=\"code-keyword\">return</span> hooks.before(xhr, editor, resultFiles);\n","        },\n","        onTimeout: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">onTimeout</span>(<span class=\"code-params\">xhr</span>) </span>{\n","          config.customAlert(t(<span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u8D85\u65F6'</span>), <span class=\"code-string\">'error'</span>);\n","          <span class=\"code-keyword\">if</span> (hooks.timeout) hooks.timeout(xhr, editor);\n","        },\n","        onProgress: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">onProgress</span>(<span class=\"code-params\">percent, e</span>) </span>{\n","          <span class=\"code-keyword\">var</span> progressBar = <span class=\"code-keyword\">new</span> progress_1[<span class=\"code-string\">\"default\"</span>](editor);\n","\n","          <span class=\"code-keyword\">if</span> (e.lengthComputable) {\n","            percent = e.loaded / e.total;\n","            progressBar.show(percent);\n","          }\n","        },\n","        onError: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">onError</span>(<span class=\"code-params\">xhr</span>) </span>{\n","          config.customAlert(t(<span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u9519\u8BEF'</span>), <span class=\"code-string\">'error'</span>, t(<span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u9519\u8BEF'</span>) + <span class=\"code-string\">\"\\uFF0C\"</span> + t(<span class=\"code-string\">'\u670D\u52A1\u5668\u8FD4\u56DE\u72B6\u6001'</span>) + <span class=\"code-string\">\": \"</span> + xhr.status);\n","          <span class=\"code-keyword\">if</span> (hooks.error) hooks.error(xhr, editor);\n","        },\n","        onFail: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">onFail</span>(<span class=\"code-params\">xhr, resultStr</span>) </span>{\n","          config.customAlert(t(<span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u5931\u8D25'</span>), <span class=\"code-string\">'error'</span>, t(<span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u8FD4\u56DE\u7ED3\u679C\u9519\u8BEF'</span>) + (<span class=\"code-string\">\"\\uFF0C\"</span> + t(<span class=\"code-string\">'\u8FD4\u56DE\u7ED3\u679C'</span>) + <span class=\"code-string\">\": \"</span>) + resultStr);\n","          <span class=\"code-keyword\">if</span> (hooks.fail) hooks.fail(xhr, editor, resultStr);\n","        },\n","        onSuccess: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">onSuccess</span>(<span class=\"code-params\">xhr, result</span>) </span>{\n","          <span class=\"code-keyword\">if</span> (hooks.customInsert) {\n","            <span class=\"code-keyword\">var</span> _context2;\n","\n","            <span class=\"code-comment\">// \u81EA\u5B9A\u4E49\u63D2\u5165\u56FE\u7247</span>\n","            hooks.customInsert((<span class=\"code-number\">0</span>, _bind[<span class=\"code-string\">\"default\"</span>])(_context2 = _this_1.insertImg).call(_context2, _this_1), result, editor);\n","            <span class=\"code-keyword\">return</span>;\n","          }\n","\n","          <span class=\"code-keyword\">if</span> (result.errno != <span class=\"code-string\">'0'</span>) {\n","            <span class=\"code-comment\">// \u8FD4\u56DE\u683C\u5F0F\u4E0D\u5BF9\uFF0C\u5E94\u8BE5\u4E3A { errno: 0, data: [...] }</span>\n","            config.customAlert(t(<span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u5931\u8D25'</span>), <span class=\"code-string\">'error'</span>, t(<span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u8FD4\u56DE\u7ED3\u679C\u9519\u8BEF'</span>) + <span class=\"code-string\">\"\\uFF0C\"</span> + t(<span class=\"code-string\">'\u8FD4\u56DE\u7ED3\u679C'</span>) + <span class=\"code-string\">\" errno=\"</span> + result.errno);\n","            <span class=\"code-keyword\">if</span> (hooks.fail) hooks.fail(xhr, editor, result);\n","            <span class=\"code-keyword\">return</span>;\n","          } <span class=\"code-comment\">// \u6210\u529F\uFF0C\u63D2\u5165\u56FE\u7247</span>\n","\n","\n","          <span class=\"code-keyword\">var</span> data = result.data;\n","          (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(data).call(data, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">link</span>) </span>{\n","            _this_1.insertImg(link);\n","          }); <span class=\"code-comment\">// \u94A9\u5B50\u51FD\u6570</span>\n","\n","          <span class=\"code-keyword\">if</span> (hooks.success) hooks.success(xhr, editor, result);\n","        }\n","      });\n","\n","      <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> xhr === <span class=\"code-string\">'string'</span>) {\n","        <span class=\"code-comment\">// \u4E0A\u4F20\u88AB\u963B\u6B62</span>\n","        config.customAlert(xhr, <span class=\"code-string\">'error'</span>);\n","      } <span class=\"code-comment\">// \u963B\u6B62\u4EE5\u4E0B\u4EE3\u7801\u6267\u884C\uFF0C\u91CD\u8981\uFF01\uFF01\uFF01</span>\n","\n","\n","      <span class=\"code-keyword\">return</span>;\n","    } <span class=\"code-comment\">// ------------------------------ \u663E\u793A base64 \u683C\u5F0F ------------------------------</span>\n","\n","\n","    <span class=\"code-keyword\">if</span> (uploadImgShowBase64) {\n","      util_1.arrForEach(files, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">file</span>) </span>{\n","        <span class=\"code-keyword\">var</span> _this = _this_1;\n","        <span class=\"code-keyword\">var</span> reader = <span class=\"code-keyword\">new</span> FileReader();\n","        reader.readAsDataURL(file);\n","\n","        reader.onload = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","          <span class=\"code-keyword\">if</span> (!<span class=\"code-keyword\">this</span>.result) <span class=\"code-keyword\">return</span>;\n","\n","          _this.insertImg(<span class=\"code-keyword\">this</span>.result.toString());\n","        };\n","      });\n","    }\n","  };\n","\n","  <span class=\"code-keyword\">return</span> UploadImg;\n","}();\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = UploadImg;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 98 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _slice = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">43</span>));\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _every = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">381</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports.dealTextNode = exports.isAllTodo = exports.isTodo = exports.getCursorNextNode = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5224\u65AD\u4F20\u5165\u7684\u5355\u884C\u9876\u7EA7\u9009\u533A\u9009\u53D6\u662F\u4E0D\u662Ftodo\n</span>","<span class=\"code-comment\"> * @param editor \u7F16\u8F91\u5668\u5BF9\u8C61\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isTodo</span>(<span class=\"code-params\">$topSelectElem</span>) </span>{\n","  <span class=\"code-keyword\">return</span> $topSelectElem.attr(<span class=\"code-string\">'class'</span>) === <span class=\"code-string\">'w-e-todo'</span>;\n","}\n","\n","exports.isTodo = isTodo;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5224\u65AD\u9009\u4E2D\u7684\u5185\u5BB9\u662F\u4E0D\u662F\u90FD\u662Ftodo\n</span>","<span class=\"code-comment\"> * @param editor \u7F16\u8F91\u5668\u5BF9\u8C61\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isAllTodo</span>(<span class=\"code-params\">editor</span>) </span>{\n","  <span class=\"code-keyword\">var</span> $topSelectElems = editor.selection.getSelectionRangeTopNodes(editor); <span class=\"code-comment\">// \u6392\u9664\u4E3A[]\u7684\u60C5\u51B5</span>\n","\n","  <span class=\"code-keyword\">if</span> ($topSelectElems.length === <span class=\"code-number\">0</span>) <span class=\"code-keyword\">return</span>;\n","  <span class=\"code-keyword\">return</span> (<span class=\"code-number\">0</span>, _every[<span class=\"code-string\">\"default\"</span>])($topSelectElems).call($topSelectElems, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$topSelectElem</span>) </span>{\n","    <span class=\"code-keyword\">return</span> isTodo($topSelectElem);\n","  });\n","}\n","\n","exports.isAllTodo = isAllTodo;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u6839\u636E\u6240\u5728\u7684\u6587\u672C\u8282\u70B9\u548C\u5149\u6807\u5728\u6587\u672C\u8282\u70B9\u7684\u4F4D\u7F6E\u83B7\u53D6\u622A\u65AD\u7684\u540E\u8282\u70B9\u5185\u5BB9\n</span>","<span class=\"code-comment\"> * @param node \u9876\u7EA7\u8282\u70B9\n</span>","<span class=\"code-comment\"> * @param textNode \u5149\u6807\u6240\u5728\u7684\u6587\u672C\u8282\u70B9\n</span>","<span class=\"code-comment\"> * @param pos \u5149\u6807\u5728\u6587\u672C\u8282\u70B9\u7684\u4F4D\u7F6E\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getCursorNextNode</span>(<span class=\"code-params\">node, textNode, pos</span>) </span>{\n","  <span class=\"code-keyword\">var</span> _context;\n","\n","  <span class=\"code-keyword\">if</span> (!node.hasChildNodes()) <span class=\"code-keyword\">return</span>;\n","  <span class=\"code-keyword\">var</span> newNode = node.cloneNode(); <span class=\"code-comment\">// \u5224\u65AD\u5149\u6807\u662F\u5426\u5728\u672B\u5C3E</span>\n","\n","  <span class=\"code-keyword\">var</span> end = <span class=\"code-literal\">false</span>;\n","\n","  <span class=\"code-keyword\">if</span> (textNode.nodeValue === <span class=\"code-string\">''</span>) {\n","    end = <span class=\"code-literal\">true</span>;\n","  }\n","\n","  <span class=\"code-keyword\">var</span> delArr = [];\n","  (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context = node.childNodes).call(_context, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">v</span>) </span>{\n","    <span class=\"code-comment\">//\u5149\u6807\u540E\u7684\u5185\u5BB9</span>\n","    <span class=\"code-keyword\">if</span> (!isContains(v, textNode) &amp;&amp; end) {\n","      newNode.appendChild(v.cloneNode(<span class=\"code-literal\">true</span>));\n","\n","      <span class=\"code-keyword\">if</span> (v.nodeName !== <span class=\"code-string\">'BR'</span>) {\n","        delArr.push(v);\n","      }\n","    } <span class=\"code-comment\">// \u5149\u6807\u6240\u5728\u7684\u533A\u57DF</span>\n","\n","\n","    <span class=\"code-keyword\">if</span> (isContains(v, textNode)) {\n","      <span class=\"code-keyword\">if</span> (v.nodeType === <span class=\"code-number\">1</span>) {\n","        <span class=\"code-keyword\">var</span> childNode = getCursorNextNode(v, textNode, pos);\n","        <span class=\"code-keyword\">if</span> (childNode &amp;&amp; childNode.textContent !== <span class=\"code-string\">''</span>) newNode === <span class=\"code-literal\">null</span> || newNode === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : newNode.appendChild(childNode);\n","      }\n","\n","      <span class=\"code-keyword\">if</span> (v.nodeType === <span class=\"code-number\">3</span>) {\n","        <span class=\"code-keyword\">if</span> (textNode.isEqualNode(v)) {\n","          <span class=\"code-keyword\">var</span> textContent = dealTextNode(v, pos);\n","          newNode.textContent = textContent;\n","        }\n","      }\n","\n","      end = <span class=\"code-literal\">true</span>;\n","    }\n","  }); <span class=\"code-comment\">// \u5220\u9664\u9009\u4E2D\u540E\u539F\u6765\u7684\u8282\u70B9</span>\n","\n","  (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(delArr).call(delArr, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">v</span>) </span>{\n","    <span class=\"code-keyword\">var</span> node = v;\n","    node.remove();\n","  });\n","  <span class=\"code-keyword\">return</span> newNode;\n","}\n","\n","exports.getCursorNextNode = getCursorNextNode;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u5224\u65ADotherNode\u662F\u5426\u5305\u542B\u5728node\u4E2D\n</span>","<span class=\"code-comment\"> * @param node \u7236\u8282\u70B9\n</span>","<span class=\"code-comment\"> * @param otherNode \u9700\u8981\u5224\u65AD\u662F\u4E0D\u662F\u88AB\u5305\u542B\u7684\u8282\u70B9\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isContains</span>(<span class=\"code-params\">node, otherNode</span>) </span>{\n","  <span class=\"code-comment\">// \u517C\u5BB9ie11\u4E2DtextNode\u4E0D\u652F\u6301contains\u65B9\u6CD5</span>\n","  <span class=\"code-keyword\">if</span> (node.nodeType === <span class=\"code-number\">3</span>) {\n","    <span class=\"code-keyword\">return</span> node.nodeValue === otherNode.nodeValue;\n","  }\n","\n","  <span class=\"code-keyword\">return</span> node.contains(otherNode);\n","}\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u83B7\u53D6\u65B0\u7684\u6587\u672C\u8282\u70B9\n</span>","<span class=\"code-comment\"> * @param node \u8981\u5904\u7406\u7684\u6587\u672C\u8282\u70B9\n</span>","<span class=\"code-comment\"> * @param pos  \u5149\u6807\u5728\u6587\u672C\u8282\u70B9\u6240\u5728\u7684\u4F4D\u7F6E\n</span>","<span class=\"code-comment\"> * @param start \u8BBE\u7F6E\u4E3Atrue\u65F6\u4FDD\u7559\u5F00\u59CB\u4F4D\u7F6E\u5230\u5149\u6807\u7684\u5185\u5BB9\uFF0C\u8BBE\u7F6E\u4E3Afalse\u65F6\u5220\u53BB\u5F00\u59CB\u7684\u5185\u5BB9\n</span>","<span class=\"code-comment\"> */</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">dealTextNode</span>(<span class=\"code-params\">node, pos, start</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (start === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","    start = <span class=\"code-literal\">true</span>;\n","  }\n","\n","  <span class=\"code-keyword\">var</span> content = node.nodeValue;\n","  <span class=\"code-keyword\">var</span> oldContent = content === <span class=\"code-literal\">null</span> || content === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : (<span class=\"code-number\">0</span>, _slice[<span class=\"code-string\">\"default\"</span>])(content).call(content, <span class=\"code-number\">0</span>, pos);\n","  content = content === <span class=\"code-literal\">null</span> || content === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : (<span class=\"code-number\">0</span>, _slice[<span class=\"code-string\">\"default\"</span>])(content).call(content, pos); <span class=\"code-comment\">// start\u4E3Afalse\u65F6\u66FF\u6362content\u548ColdContent</span>\n","\n","  <span class=\"code-keyword\">if</span> (!start) {\n","    <span class=\"code-keyword\">var</span> temp = content;\n","    content = oldContent;\n","    oldContent = temp;\n","  }\n","\n","  node.nodeValue = oldContent;\n","  <span class=\"code-keyword\">return</span> content;\n","}\n","\n","exports.dealTextNode = dealTextNode;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 99 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u53CC\u6808\u5B9E\u73B0\u64A4\u9500\u6062\u590D\n</span>","<span class=\"code-comment\"> * @author fangzhicong\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> stack_1 = __webpack_require__(<span class=\"code-number\">401</span>);\n","\n","<span class=\"code-keyword\">var</span> Cache =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Cache</span>(<span class=\"code-params\">maxSize</span>) </span>{\n","    <span class=\"code-keyword\">this</span>.maxSize = maxSize;\n","    <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">     * \u4E0A\u4E00\u6B65\u64CD\u4F5C\u662F\u5426\u4E3A \u64A4\u9500/\u6062\u590D\n</span>","<span class=\"code-comment\">     */</span>\n","\n","    <span class=\"code-keyword\">this</span>.isRe = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>.data = <span class=\"code-keyword\">new</span> stack_1.CeilStack(maxSize);\n","    <span class=\"code-keyword\">this</span>.revokeData = <span class=\"code-keyword\">new</span> stack_1.CeilStack(maxSize);\n","  }\n","\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(Cache.prototype, <span class=\"code-string\">\"size\"</span>, {\n","    <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">     * \u8FD4\u56DE\u5F53\u524D\u6808\u4E2D\u7684\u6570\u636E\u957F\u5EA6\u3002\u683C\u5F0F\u4E3A\uFF1A[\u6B63\u5E38\u7684\u6570\u636E\u7684\u6761\u6570\uFF0C\u88AB\u64A4\u9500\u7684\u6570\u636E\u7684\u6761\u6570]\n</span>","<span class=\"code-comment\">     */</span>\n","    <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>() {\n","      <span class=\"code-keyword\">return</span> [<span class=\"code-keyword\">this</span>.data.size, <span class=\"code-keyword\">this</span>.revokeData.size];\n","    },\n","    enumerable: <span class=\"code-literal\">false</span>,\n","    configurable: <span class=\"code-literal\">true</span>\n","  });\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u91CD\u8BBE\u6570\u636E\u7F13\u5B58\u5668\u7684\u7F13\u5B58\u957F\u5EA6\uFF08\u7B2C\u4E00\u6B21\u6709\u6548\uFF09\n</span>","<span class=\"code-comment\">   */</span>\n","\n","  Cache.prototype.resetMaxSize = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">maxSize</span>) </span>{\n","    <span class=\"code-keyword\">this</span>.data.resetMax(maxSize);\n","    <span class=\"code-keyword\">this</span>.revokeData.resetMax(maxSize);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u4FDD\u5B58\u6570\u636E\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Cache.prototype.save = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">data</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>.isRe) {\n","      <span class=\"code-keyword\">this</span>.revokeData.clear();\n","      <span class=\"code-keyword\">this</span>.isRe = <span class=\"code-literal\">false</span>;\n","    }\n","\n","    <span class=\"code-keyword\">this</span>.data.instack(data);\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u64A4\u9500\n</span>","<span class=\"code-comment\">   * @param fn \u64A4\u9500\u65F6\uFF0C\u5982\u679C\u6709\u6570\u636E\uFF0C\u6267\u884C\u7684\u56DE\u8C03\u51FD\u6570\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Cache.prototype.revoke = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","    !<span class=\"code-keyword\">this</span>.isRe &amp;&amp; (<span class=\"code-keyword\">this</span>.isRe = <span class=\"code-literal\">true</span>);\n","    <span class=\"code-keyword\">var</span> data = <span class=\"code-keyword\">this</span>.data.outstack();\n","\n","    <span class=\"code-keyword\">if</span> (data) {\n","      <span class=\"code-keyword\">this</span>.revokeData.instack(data);\n","      fn(data);\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6062\u590D\n</span>","<span class=\"code-comment\">   * @param fn \u6062\u590D\u65F6\uFF0C\u5982\u679C\u6709\u6570\u636E\uFF0C\u6267\u884C\u7684\u56DE\u8C03\u51FD\u6570\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Cache.prototype.restore = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","    !<span class=\"code-keyword\">this</span>.isRe &amp;&amp; (<span class=\"code-keyword\">this</span>.isRe = <span class=\"code-literal\">true</span>);\n","    <span class=\"code-keyword\">var</span> data = <span class=\"code-keyword\">this</span>.revokeData.outstack();\n","\n","    <span class=\"code-keyword\">if</span> (data) {\n","      <span class=\"code-keyword\">this</span>.data.instack(data);\n","      fn(data);\n","      <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  };\n","\n","  <span class=\"code-keyword\">return</span> Cache;\n","}();\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = Cache;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 100 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> createElement = __webpack_require__(<span class=\"code-number\">70</span>);\n","\n","<span class=\"code-comment\">// Thank's IE8 for his funny defineProperty</span>\n","<span class=\"code-built_in\">module</span>.exports = !DESCRIPTORS &amp;&amp; !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>.defineProperty(createElement(<span class=\"code-string\">'div'</span>), <span class=\"code-string\">'a'</span>, {\n","    <span class=\"code-keyword\">get</span>: function () { <span class=\"code-keyword\">return</span> <span class=\"code-number\">7</span>; }\n","  }).a != <span class=\"code-number\">7</span>;\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 101 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","\n","<span class=\"code-keyword\">var</span> replacement = <span class=\"code-regexp\">/#|\\.prototype\\./</span>;\n","\n","<span class=\"code-keyword\">var</span> isForced = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">feature, detection</span>) </span>{\n","  <span class=\"code-keyword\">var</span> value = data[normalize(feature)];\n","  <span class=\"code-keyword\">return</span> value == POLYFILL ? <span class=\"code-literal\">true</span>\n","    : value == NATIVE ? <span class=\"code-literal\">false</span>\n","    : <span class=\"code-keyword\">typeof</span> detection == <span class=\"code-string\">'function'</span> ? fails(detection)\n","    : !!detection;\n","};\n","\n","<span class=\"code-keyword\">var</span> normalize = isForced.normalize = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">string</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">String</span>(string).replace(replacement, <span class=\"code-string\">'.'</span>).toLowerCase();\n","};\n","\n","<span class=\"code-keyword\">var</span> data = isForced.data = {};\n","<span class=\"code-keyword\">var</span> NATIVE = isForced.NATIVE = <span class=\"code-string\">'N'</span>;\n","<span class=\"code-keyword\">var</span> POLYFILL = isForced.POLYFILL = <span class=\"code-string\">'P'</span>;\n","\n","<span class=\"code-built_in\">module</span>.exports = isForced;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 102 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> toIndexedObject = __webpack_require__(<span class=\"code-number\">27</span>);\n","<span class=\"code-keyword\">var</span> indexOf = __webpack_require__(<span class=\"code-number\">71</span>).indexOf;\n","<span class=\"code-keyword\">var</span> hiddenKeys = __webpack_require__(<span class=\"code-number\">49</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">object, names</span>) </span>{\n","  <span class=\"code-keyword\">var</span> O = toIndexedObject(object);\n","  <span class=\"code-keyword\">var</span> i = <span class=\"code-number\">0</span>;\n","  <span class=\"code-keyword\">var</span> result = [];\n","  <span class=\"code-keyword\">var</span> key;\n","  <span class=\"code-keyword\">for</span> (key <span class=\"code-keyword\">in</span> O) !has(hiddenKeys, key) &amp;&amp; has(O, key) &amp;&amp; result.push(key);\n","  <span class=\"code-comment\">// Don't enum bug &amp; hidden keys</span>\n","  <span class=\"code-keyword\">while</span> (names.length &gt; i) <span class=\"code-keyword\">if</span> (has(O, key = names[i++])) {\n","    ~indexOf(result, key) || result.push(key);\n","  }\n","  <span class=\"code-keyword\">return</span> result;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 103 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> getBuiltIn = __webpack_require__(<span class=\"code-number\">28</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = getBuiltIn(<span class=\"code-string\">'document'</span>, <span class=\"code-string\">'documentElement'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 104 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> NATIVE_SYMBOL = __webpack_require__(<span class=\"code-number\">78</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = NATIVE_SYMBOL\n","  <span class=\"code-comment\">// eslint-disable-next-line no-undef</span>\n","  &amp;&amp; !<span class=\"code-built_in\">Symbol</span>.sham\n","  <span class=\"code-comment\">// eslint-disable-next-line no-undef</span>\n","  &amp;&amp; <span class=\"code-keyword\">typeof</span> <span class=\"code-built_in\">Symbol</span>.iterator == <span class=\"code-string\">'symbol'</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 105 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = global.Promise;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 106 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> redefine = __webpack_require__(<span class=\"code-number\">50</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">target, src, options</span>) </span>{\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> key <span class=\"code-keyword\">in</span> src) {\n","    <span class=\"code-keyword\">if</span> (options &amp;&amp; options.unsafe &amp;&amp; target[key]) target[key] = src[key];\n","    <span class=\"code-keyword\">else</span> redefine(target, key, src[key], options);\n","  } <span class=\"code-keyword\">return</span> target;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 107 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> getBuiltIn = __webpack_require__(<span class=\"code-number\">28</span>);\n","<span class=\"code-keyword\">var</span> definePropertyModule = __webpack_require__(<span class=\"code-number\">18</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","\n","<span class=\"code-keyword\">var</span> SPECIES = wellKnownSymbol(<span class=\"code-string\">'species'</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">CONSTRUCTOR_NAME</span>) </span>{\n","  <span class=\"code-keyword\">var</span> Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n","  <span class=\"code-keyword\">var</span> defineProperty = definePropertyModule.f;\n","\n","  <span class=\"code-keyword\">if</span> (DESCRIPTORS &amp;&amp; Constructor &amp;&amp; !Constructor[SPECIES]) {\n","    defineProperty(Constructor, SPECIES, {\n","      configurable: <span class=\"code-literal\">true</span>,\n","      <span class=\"code-keyword\">get</span>: function () { <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>; }\n","    });\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 108 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> store = __webpack_require__(<span class=\"code-number\">75</span>);\n","\n","<span class=\"code-keyword\">var</span> functionToString = <span class=\"code-built_in\">Function</span>.toString;\n","\n","<span class=\"code-comment\">// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper</span>\n","<span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> store.inspectSource != <span class=\"code-string\">'function'</span>) {\n","  store.inspectSource = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","    <span class=\"code-keyword\">return</span> functionToString.call(it);\n","  };\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = store.inspectSource;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 109 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> aFunction = __webpack_require__(<span class=\"code-number\">32</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> SPECIES = wellKnownSymbol(<span class=\"code-string\">'species'</span>);\n","\n","<span class=\"code-comment\">// `SpeciesConstructor` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-speciesconstructor</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">O, defaultConstructor</span>) </span>{\n","  <span class=\"code-keyword\">var</span> C = anObject(O).constructor;\n","  <span class=\"code-keyword\">var</span> S;\n","  <span class=\"code-keyword\">return</span> C === <span class=\"code-literal\">undefined</span> || (S = anObject(C)[SPECIES]) == <span class=\"code-literal\">undefined</span> ? defaultConstructor : aFunction(S);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 110 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> bind = __webpack_require__(<span class=\"code-number\">47</span>);\n","<span class=\"code-keyword\">var</span> html = __webpack_require__(<span class=\"code-number\">103</span>);\n","<span class=\"code-keyword\">var</span> createElement = __webpack_require__(<span class=\"code-number\">70</span>);\n","<span class=\"code-keyword\">var</span> IS_IOS = __webpack_require__(<span class=\"code-number\">111</span>);\n","<span class=\"code-keyword\">var</span> IS_NODE = __webpack_require__(<span class=\"code-number\">81</span>);\n","\n","<span class=\"code-keyword\">var</span> location = global.location;\n","<span class=\"code-keyword\">var</span> <span class=\"code-keyword\">set</span> = global.setImmediate;\n","var clear = global.clearImmediate;\n","var process = global.process;\n","var MessageChannel = global.MessageChannel;\n","var Dispatch = global.Dispatch;\n","var counter = 0;\n","var queue = {};\n","<span class=\"code-keyword\">var</span> ONREADYSTATECHANGE = <span class=\"code-string\">'onreadystatechange'</span>;\n","<span class=\"code-keyword\">var</span> defer, channel, port;\n","\n","<span class=\"code-keyword\">var</span> run = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","  <span class=\"code-comment\">// eslint-disable-next-line no-prototype-builtins</span>\n","  <span class=\"code-keyword\">if</span> (queue.hasOwnProperty(id)) {\n","    <span class=\"code-keyword\">var</span> fn = queue[id];\n","    <span class=\"code-keyword\">delete</span> queue[id];\n","    fn();\n","  }\n","};\n","\n","<span class=\"code-keyword\">var</span> runner = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    run(id);\n","  };\n","};\n","\n","<span class=\"code-keyword\">var</span> listener = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">event</span>) </span>{\n","  run(event.data);\n","};\n","\n","<span class=\"code-keyword\">var</span> post = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","  <span class=\"code-comment\">// old engines have not location.origin</span>\n","  global.postMessage(id + <span class=\"code-string\">''</span>, location.protocol + <span class=\"code-string\">'//'</span> + location.host);\n","};\n","\n","<span class=\"code-comment\">// Node.js 0.9+ &amp; IE10+ has setImmediate, otherwise:</span>\n","<span class=\"code-keyword\">if</span> (!<span class=\"code-keyword\">set</span> || !clear) {\n","  <span class=\"code-keyword\">set</span> = function setImmediate(fn) {\n","    <span class=\"code-keyword\">var</span> args = [];\n","    <span class=\"code-keyword\">var</span> i = <span class=\"code-number\">1</span>;\n","    <span class=\"code-keyword\">while</span> (<span class=\"code-built_in\">arguments</span>.length &gt; i) args.push(<span class=\"code-built_in\">arguments</span>[i++]);\n","    queue[++counter] = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-comment\">// eslint-disable-next-line no-new-func</span>\n","      (<span class=\"code-keyword\">typeof</span> fn == <span class=\"code-string\">'function'</span> ? fn : <span class=\"code-built_in\">Function</span>(fn)).apply(<span class=\"code-literal\">undefined</span>, args);\n","    };\n","    defer(counter);\n","    <span class=\"code-keyword\">return</span> counter;\n","  };\n","  clear = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">clearImmediate</span>(<span class=\"code-params\">id</span>) </span>{\n","    <span class=\"code-keyword\">delete</span> queue[id];\n","  };\n","  <span class=\"code-comment\">// Node.js 0.8-</span>\n","  <span class=\"code-keyword\">if</span> (IS_NODE) {\n","    defer = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","      process.nextTick(runner(id));\n","    };\n","  <span class=\"code-comment\">// Sphere (JS game engine) Dispatch API</span>\n","  } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (Dispatch &amp;&amp; Dispatch.now) {\n","    defer = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","      Dispatch.now(runner(id));\n","    };\n","  <span class=\"code-comment\">// Browsers with MessageChannel, includes WebWorkers</span>\n","  <span class=\"code-comment\">// except iOS - https://github.com/zloirock/core-js/issues/624</span>\n","  } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (MessageChannel &amp;&amp; !IS_IOS) {\n","    channel = <span class=\"code-keyword\">new</span> MessageChannel();\n","    port = channel.port2;\n","    channel.port1.onmessage = listener;\n","    defer = bind(port.postMessage, port, <span class=\"code-number\">1</span>);\n","  <span class=\"code-comment\">// Browsers with postMessage, skip WebWorkers</span>\n","  <span class=\"code-comment\">// IE8 has postMessage, but it's sync &amp; typeof its postMessage is 'object'</span>\n","  } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (\n","    global.addEventListener &amp;&amp;\n","    <span class=\"code-keyword\">typeof</span> postMessage == <span class=\"code-string\">'function'</span> &amp;&amp;\n","    !global.importScripts &amp;&amp;\n","    location &amp;&amp; location.protocol !== <span class=\"code-string\">'file:'</span> &amp;&amp;\n","    !fails(post)\n","  ) {\n","    defer = post;\n","    global.addEventListener(<span class=\"code-string\">'message'</span>, listener, <span class=\"code-literal\">false</span>);\n","  <span class=\"code-comment\">// IE8-</span>\n","  } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (ONREADYSTATECHANGE <span class=\"code-keyword\">in</span> createElement(<span class=\"code-string\">'script'</span>)) {\n","    defer = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","      html.appendChild(createElement(<span class=\"code-string\">'script'</span>))[ONREADYSTATECHANGE] = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        html.removeChild(<span class=\"code-keyword\">this</span>);\n","        run(id);\n","      };\n","    };\n","  <span class=\"code-comment\">// Rest old browsers</span>\n","  } <span class=\"code-keyword\">else</span> {\n","    defer = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","      setTimeout(runner(id), <span class=\"code-number\">0</span>);\n","    };\n","  }\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  <span class=\"code-keyword\">set</span>: <span class=\"code-keyword\">set</span>,\n","  clear: clear\n","};\n","\n","\n","/***/ }),\n","/* 111 */\n","/***/ (function(module, exports, __webpack_require__) {\n","\n","<span class=\"code-keyword\">var</span> userAgent = __webpack_require__(<span class=\"code-number\">63</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-regexp\">/(iphone|ipod|ipad).*applewebkit/i</span>.test(userAgent);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 112 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> newPromiseCapability = __webpack_require__(<span class=\"code-number\">64</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">C, x</span>) </span>{\n","  anObject(C);\n","  <span class=\"code-keyword\">if</span> (isObject(x) &amp;&amp; x.constructor === C) <span class=\"code-keyword\">return</span> x;\n","  <span class=\"code-keyword\">var</span> promiseCapability = newPromiseCapability.f(C);\n","  <span class=\"code-keyword\">var</span> resolve = promiseCapability.resolve;\n","  resolve(x);\n","  <span class=\"code-keyword\">return</span> promiseCapability.promise;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 113 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> getPrototypeOf = __webpack_require__(<span class=\"code-number\">76</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> IS_PURE = __webpack_require__(<span class=\"code-number\">37</span>);\n","\n","<span class=\"code-keyword\">var</span> ITERATOR = wellKnownSymbol(<span class=\"code-string\">'iterator'</span>);\n","<span class=\"code-keyword\">var</span> BUGGY_SAFARI_ITERATORS = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">var</span> returnThis = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>; };\n","\n","<span class=\"code-comment\">// `%IteratorPrototype%` object</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-%iteratorprototype%-object</span>\n","<span class=\"code-keyword\">var</span> IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n","\n","<span class=\"code-keyword\">if</span> ([].keys) {\n","  arrayIterator = [].keys();\n","  <span class=\"code-comment\">// Safari 8 has buggy iterators w/o `next`</span>\n","  <span class=\"code-keyword\">if</span> (!(<span class=\"code-string\">'next'</span> <span class=\"code-keyword\">in</span> arrayIterator)) BUGGY_SAFARI_ITERATORS = <span class=\"code-literal\">true</span>;\n","  <span class=\"code-keyword\">else</span> {\n","    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n","    <span class=\"code-keyword\">if</span> (PrototypeOfArrayIteratorPrototype !== <span class=\"code-built_in\">Object</span>.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n","  }\n","}\n","\n","<span class=\"code-keyword\">if</span> (IteratorPrototype == <span class=\"code-literal\">undefined</span>) IteratorPrototype = {};\n","\n","<span class=\"code-comment\">// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()</span>\n","<span class=\"code-keyword\">if</span> (!IS_PURE &amp;&amp; !has(IteratorPrototype, ITERATOR)) {\n","  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  IteratorPrototype: IteratorPrototype,\n","  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 114 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">209</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 115 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> InternalMetadataModule = __webpack_require__(<span class=\"code-number\">116</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> iterate = __webpack_require__(<span class=\"code-number\">39</span>);\n","<span class=\"code-keyword\">var</span> anInstance = __webpack_require__(<span class=\"code-number\">80</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> setToStringTag = __webpack_require__(<span class=\"code-number\">41</span>);\n","<span class=\"code-keyword\">var</span> defineProperty = __webpack_require__(<span class=\"code-number\">18</span>).f;\n","<span class=\"code-keyword\">var</span> forEach = __webpack_require__(<span class=\"code-number\">33</span>).forEach;\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> InternalStateModule = __webpack_require__(<span class=\"code-number\">42</span>);\n","\n","<span class=\"code-keyword\">var</span> setInternalState = InternalStateModule.set;\n","<span class=\"code-keyword\">var</span> internalStateGetterFor = InternalStateModule.getterFor;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">CONSTRUCTOR_NAME, wrapper, common</span>) </span>{\n","  <span class=\"code-keyword\">var</span> IS_MAP = CONSTRUCTOR_NAME.indexOf(<span class=\"code-string\">'Map'</span>) !== <span class=\"code-number\">-1</span>;\n","  <span class=\"code-keyword\">var</span> IS_WEAK = CONSTRUCTOR_NAME.indexOf(<span class=\"code-string\">'Weak'</span>) !== <span class=\"code-number\">-1</span>;\n","  <span class=\"code-keyword\">var</span> ADDER = IS_MAP ? <span class=\"code-string\">'set'</span> : <span class=\"code-string\">'add'</span>;\n","  <span class=\"code-keyword\">var</span> NativeConstructor = global[CONSTRUCTOR_NAME];\n","  <span class=\"code-keyword\">var</span> NativePrototype = NativeConstructor &amp;&amp; NativeConstructor.prototype;\n","  <span class=\"code-keyword\">var</span> exported = {};\n","  <span class=\"code-keyword\">var</span> Constructor;\n","\n","  <span class=\"code-keyword\">if</span> (!DESCRIPTORS || <span class=\"code-keyword\">typeof</span> NativeConstructor != <span class=\"code-string\">'function'</span>\n","    || !(IS_WEAK || NativePrototype.forEach &amp;&amp; !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">new</span> NativeConstructor().entries().next(); }))\n","  ) {\n","    <span class=\"code-comment\">// create collection constructor</span>\n","    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n","    InternalMetadataModule.REQUIRED = <span class=\"code-literal\">true</span>;\n","  } <span class=\"code-keyword\">else</span> {\n","    Constructor = wrapper(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">target, iterable</span>) </span>{\n","      setInternalState(anInstance(target, Constructor, CONSTRUCTOR_NAME), {\n","        type: CONSTRUCTOR_NAME,\n","        collection: <span class=\"code-keyword\">new</span> NativeConstructor()\n","      });\n","      <span class=\"code-keyword\">if</span> (iterable != <span class=\"code-literal\">undefined</span>) iterate(iterable, target[ADDER], { <span class=\"code-attr\">that</span>: target, <span class=\"code-attr\">AS_ENTRIES</span>: IS_MAP });\n","    });\n","\n","    <span class=\"code-keyword\">var</span> getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n","\n","    forEach([<span class=\"code-string\">'add'</span>, <span class=\"code-string\">'clear'</span>, <span class=\"code-string\">'delete'</span>, <span class=\"code-string\">'forEach'</span>, <span class=\"code-string\">'get'</span>, <span class=\"code-string\">'has'</span>, <span class=\"code-string\">'set'</span>, <span class=\"code-string\">'keys'</span>, <span class=\"code-string\">'values'</span>, <span class=\"code-string\">'entries'</span>], <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">KEY</span>) </span>{\n","      <span class=\"code-keyword\">var</span> IS_ADDER = KEY == <span class=\"code-string\">'add'</span> || KEY == <span class=\"code-string\">'set'</span>;\n","      <span class=\"code-keyword\">if</span> (KEY <span class=\"code-keyword\">in</span> NativePrototype &amp;&amp; !(IS_WEAK &amp;&amp; KEY == <span class=\"code-string\">'clear'</span>)) {\n","        createNonEnumerableProperty(Constructor.prototype, KEY, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">a, b</span>) </span>{\n","          <span class=\"code-keyword\">var</span> collection = getInternalState(<span class=\"code-keyword\">this</span>).collection;\n","          <span class=\"code-keyword\">if</span> (!IS_ADDER &amp;&amp; IS_WEAK &amp;&amp; !isObject(a)) <span class=\"code-keyword\">return</span> KEY == <span class=\"code-string\">'get'</span> ? <span class=\"code-literal\">undefined</span> : <span class=\"code-literal\">false</span>;\n","          <span class=\"code-keyword\">var</span> result = collection[KEY](a === <span class=\"code-number\">0</span> ? <span class=\"code-number\">0</span> : a, b);\n","          <span class=\"code-keyword\">return</span> IS_ADDER ? <span class=\"code-keyword\">this</span> : result;\n","        });\n","      }\n","    });\n","\n","    IS_WEAK || defineProperty(Constructor.prototype, <span class=\"code-string\">'size'</span>, {\n","      configurable: <span class=\"code-literal\">true</span>,\n","      <span class=\"code-keyword\">get</span>: function () {\n","        <span class=\"code-keyword\">return</span> getInternalState(<span class=\"code-keyword\">this</span>).collection.size;\n","      }\n","    });\n","  }\n","\n","  setToStringTag(Constructor, CONSTRUCTOR_NAME, <span class=\"code-literal\">false</span>, <span class=\"code-literal\">true</span>);\n","\n","  exported[CONSTRUCTOR_NAME] = Constructor;\n","  $({ <span class=\"code-attr\">global</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: <span class=\"code-literal\">true</span> }, exported);\n","\n","  <span class=\"code-keyword\">if</span> (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n","\n","  <span class=\"code-keyword\">return</span> Constructor;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 116 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> hiddenKeys = __webpack_require__(<span class=\"code-number\">49</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> defineProperty = __webpack_require__(<span class=\"code-number\">18</span>).f;\n","<span class=\"code-keyword\">var</span> uid = __webpack_require__(<span class=\"code-number\">60</span>);\n","<span class=\"code-keyword\">var</span> FREEZING = __webpack_require__(<span class=\"code-number\">212</span>);\n","\n","<span class=\"code-keyword\">var</span> METADATA = uid(<span class=\"code-string\">'meta'</span>);\n","<span class=\"code-keyword\">var</span> id = <span class=\"code-number\">0</span>;\n","\n","<span class=\"code-keyword\">var</span> isExtensible = <span class=\"code-built_in\">Object</span>.isExtensible || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","};\n","\n","<span class=\"code-keyword\">var</span> setMetadata = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  defineProperty(it, METADATA, { <span class=\"code-attr\">value</span>: {\n","    objectID: <span class=\"code-string\">'O'</span> + ++id, <span class=\"code-comment\">// object ID</span>\n","    weakData: {}          <span class=\"code-comment\">// weak collections IDs</span>\n","  } });\n","};\n","\n","<span class=\"code-keyword\">var</span> fastKey = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it, create</span>) </span>{\n","  <span class=\"code-comment\">// return a primitive with prefix</span>\n","  <span class=\"code-keyword\">if</span> (!isObject(it)) <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">typeof</span> it == <span class=\"code-string\">'symbol'</span> ? it : (<span class=\"code-keyword\">typeof</span> it == <span class=\"code-string\">'string'</span> ? <span class=\"code-string\">'S'</span> : <span class=\"code-string\">'P'</span>) + it;\n","  <span class=\"code-keyword\">if</span> (!has(it, METADATA)) {\n","    <span class=\"code-comment\">// can't set metadata to uncaught frozen object</span>\n","    <span class=\"code-keyword\">if</span> (!isExtensible(it)) <span class=\"code-keyword\">return</span> <span class=\"code-string\">'F'</span>;\n","    <span class=\"code-comment\">// not necessary to add metadata</span>\n","    <span class=\"code-keyword\">if</span> (!create) <span class=\"code-keyword\">return</span> <span class=\"code-string\">'E'</span>;\n","    <span class=\"code-comment\">// add missing metadata</span>\n","    setMetadata(it);\n","  <span class=\"code-comment\">// return object ID</span>\n","  } <span class=\"code-keyword\">return</span> it[METADATA].objectID;\n","};\n","\n","<span class=\"code-keyword\">var</span> getWeakData = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it, create</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!has(it, METADATA)) {\n","    <span class=\"code-comment\">// can't set metadata to uncaught frozen object</span>\n","    <span class=\"code-keyword\">if</span> (!isExtensible(it)) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","    <span class=\"code-comment\">// not necessary to add metadata</span>\n","    <span class=\"code-keyword\">if</span> (!create) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","    <span class=\"code-comment\">// add missing metadata</span>\n","    setMetadata(it);\n","  <span class=\"code-comment\">// return the store of weak collections IDs</span>\n","  } <span class=\"code-keyword\">return</span> it[METADATA].weakData;\n","};\n","\n","<span class=\"code-comment\">// add metadata on freeze-family methods calling</span>\n","<span class=\"code-keyword\">var</span> onFreeze = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (FREEZING &amp;&amp; meta.REQUIRED &amp;&amp; isExtensible(it) &amp;&amp; !has(it, METADATA)) setMetadata(it);\n","  <span class=\"code-keyword\">return</span> it;\n","};\n","\n","<span class=\"code-keyword\">var</span> meta = <span class=\"code-built_in\">module</span>.exports = {\n","  REQUIRED: <span class=\"code-literal\">false</span>,\n","  fastKey: fastKey,\n","  getWeakData: getWeakData,\n","  onFreeze: onFreeze\n","};\n","\n","hiddenKeys[METADATA] = <span class=\"code-literal\">true</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 117 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> defineProperty = __webpack_require__(<span class=\"code-number\">18</span>).f;\n","<span class=\"code-keyword\">var</span> create = __webpack_require__(<span class=\"code-number\">48</span>);\n","<span class=\"code-keyword\">var</span> redefineAll = __webpack_require__(<span class=\"code-number\">106</span>);\n","<span class=\"code-keyword\">var</span> bind = __webpack_require__(<span class=\"code-number\">47</span>);\n","<span class=\"code-keyword\">var</span> anInstance = __webpack_require__(<span class=\"code-number\">80</span>);\n","<span class=\"code-keyword\">var</span> iterate = __webpack_require__(<span class=\"code-number\">39</span>);\n","<span class=\"code-keyword\">var</span> defineIterator = __webpack_require__(<span class=\"code-number\">84</span>);\n","<span class=\"code-keyword\">var</span> setSpecies = __webpack_require__(<span class=\"code-number\">107</span>);\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> fastKey = __webpack_require__(<span class=\"code-number\">116</span>).fastKey;\n","<span class=\"code-keyword\">var</span> InternalStateModule = __webpack_require__(<span class=\"code-number\">42</span>);\n","\n","<span class=\"code-keyword\">var</span> setInternalState = InternalStateModule.set;\n","<span class=\"code-keyword\">var</span> internalStateGetterFor = InternalStateModule.getterFor;\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  getConstructor: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER</span>) </span>{\n","    <span class=\"code-keyword\">var</span> C = wrapper(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">that, iterable</span>) </span>{\n","      anInstance(that, C, CONSTRUCTOR_NAME);\n","      setInternalState(that, {\n","        type: CONSTRUCTOR_NAME,\n","        index: create(<span class=\"code-literal\">null</span>),\n","        first: <span class=\"code-literal\">undefined</span>,\n","        last: <span class=\"code-literal\">undefined</span>,\n","        size: <span class=\"code-number\">0</span>\n","      });\n","      <span class=\"code-keyword\">if</span> (!DESCRIPTORS) that.size = <span class=\"code-number\">0</span>;\n","      <span class=\"code-keyword\">if</span> (iterable != <span class=\"code-literal\">undefined</span>) iterate(iterable, that[ADDER], { <span class=\"code-attr\">that</span>: that, <span class=\"code-attr\">AS_ENTRIES</span>: IS_MAP });\n","    });\n","\n","    <span class=\"code-keyword\">var</span> getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n","\n","    <span class=\"code-keyword\">var</span> define = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">that, key, value</span>) </span>{\n","      <span class=\"code-keyword\">var</span> state = getInternalState(that);\n","      <span class=\"code-keyword\">var</span> entry = getEntry(that, key);\n","      <span class=\"code-keyword\">var</span> previous, index;\n","      <span class=\"code-comment\">// change existing entry</span>\n","      <span class=\"code-keyword\">if</span> (entry) {\n","        entry.value = value;\n","      <span class=\"code-comment\">// create new entry</span>\n","      } <span class=\"code-keyword\">else</span> {\n","        state.last = entry = {\n","          index: index = fastKey(key, <span class=\"code-literal\">true</span>),\n","          key: key,\n","          value: value,\n","          previous: previous = state.last,\n","          next: <span class=\"code-literal\">undefined</span>,\n","          removed: <span class=\"code-literal\">false</span>\n","        };\n","        <span class=\"code-keyword\">if</span> (!state.first) state.first = entry;\n","        <span class=\"code-keyword\">if</span> (previous) previous.next = entry;\n","        <span class=\"code-keyword\">if</span> (DESCRIPTORS) state.size++;\n","        <span class=\"code-keyword\">else</span> that.size++;\n","        <span class=\"code-comment\">// add to index</span>\n","        <span class=\"code-keyword\">if</span> (index !== <span class=\"code-string\">'F'</span>) state.index[index] = entry;\n","      } <span class=\"code-keyword\">return</span> that;\n","    };\n","\n","    <span class=\"code-keyword\">var</span> getEntry = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">that, key</span>) </span>{\n","      <span class=\"code-keyword\">var</span> state = getInternalState(that);\n","      <span class=\"code-comment\">// fast case</span>\n","      <span class=\"code-keyword\">var</span> index = fastKey(key);\n","      <span class=\"code-keyword\">var</span> entry;\n","      <span class=\"code-keyword\">if</span> (index !== <span class=\"code-string\">'F'</span>) <span class=\"code-keyword\">return</span> state.index[index];\n","      <span class=\"code-comment\">// frozen object case</span>\n","      <span class=\"code-keyword\">for</span> (entry = state.first; entry; entry = entry.next) {\n","        <span class=\"code-keyword\">if</span> (entry.key == key) <span class=\"code-keyword\">return</span> entry;\n","      }\n","    };\n","\n","    redefineAll(C.prototype, {\n","      <span class=\"code-comment\">// 23.1.3.1 Map.prototype.clear()</span>\n","      <span class=\"code-comment\">// 23.2.3.2 Set.prototype.clear()</span>\n","      clear: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">clear</span>(<span class=\"code-params\"></span>) </span>{\n","        <span class=\"code-keyword\">var</span> that = <span class=\"code-keyword\">this</span>;\n","        <span class=\"code-keyword\">var</span> state = getInternalState(that);\n","        <span class=\"code-keyword\">var</span> data = state.index;\n","        <span class=\"code-keyword\">var</span> entry = state.first;\n","        <span class=\"code-keyword\">while</span> (entry) {\n","          entry.removed = <span class=\"code-literal\">true</span>;\n","          <span class=\"code-keyword\">if</span> (entry.previous) entry.previous = entry.previous.next = <span class=\"code-literal\">undefined</span>;\n","          <span class=\"code-keyword\">delete</span> data[entry.index];\n","          entry = entry.next;\n","        }\n","        state.first = state.last = <span class=\"code-literal\">undefined</span>;\n","        <span class=\"code-keyword\">if</span> (DESCRIPTORS) state.size = <span class=\"code-number\">0</span>;\n","        <span class=\"code-keyword\">else</span> that.size = <span class=\"code-number\">0</span>;\n","      },\n","      <span class=\"code-comment\">// 23.1.3.3 Map.prototype.delete(key)</span>\n","      <span class=\"code-comment\">// 23.2.3.4 Set.prototype.delete(value)</span>\n","      <span class=\"code-string\">'delete'</span>: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","        <span class=\"code-keyword\">var</span> that = <span class=\"code-keyword\">this</span>;\n","        <span class=\"code-keyword\">var</span> state = getInternalState(that);\n","        <span class=\"code-keyword\">var</span> entry = getEntry(that, key);\n","        <span class=\"code-keyword\">if</span> (entry) {\n","          <span class=\"code-keyword\">var</span> next = entry.next;\n","          <span class=\"code-keyword\">var</span> prev = entry.previous;\n","          <span class=\"code-keyword\">delete</span> state.index[entry.index];\n","          entry.removed = <span class=\"code-literal\">true</span>;\n","          <span class=\"code-keyword\">if</span> (prev) prev.next = next;\n","          <span class=\"code-keyword\">if</span> (next) next.previous = prev;\n","          <span class=\"code-keyword\">if</span> (state.first == entry) state.first = next;\n","          <span class=\"code-keyword\">if</span> (state.last == entry) state.last = prev;\n","          <span class=\"code-keyword\">if</span> (DESCRIPTORS) state.size--;\n","          <span class=\"code-keyword\">else</span> that.size--;\n","        } <span class=\"code-keyword\">return</span> !!entry;\n","      },\n","      <span class=\"code-comment\">// 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)</span>\n","      <span class=\"code-comment\">// 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)</span>\n","      forEach: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">forEach</span>(<span class=\"code-params\">callbackfn <span class=\"code-regexp\">/* , that = undefined */</span></span>) </span>{\n","        <span class=\"code-keyword\">var</span> state = getInternalState(<span class=\"code-keyword\">this</span>);\n","        <span class=\"code-keyword\">var</span> boundFunction = bind(callbackfn, <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>, <span class=\"code-number\">3</span>);\n","        <span class=\"code-keyword\">var</span> entry;\n","        <span class=\"code-keyword\">while</span> (entry = entry ? entry.next : state.first) {\n","          boundFunction(entry.value, entry.key, <span class=\"code-keyword\">this</span>);\n","          <span class=\"code-comment\">// revert to the last existing entry</span>\n","          <span class=\"code-keyword\">while</span> (entry &amp;&amp; entry.removed) entry = entry.previous;\n","        }\n","      },\n","      <span class=\"code-comment\">// 23.1.3.7 Map.prototype.has(key)</span>\n","      <span class=\"code-comment\">// 23.2.3.7 Set.prototype.has(value)</span>\n","      has: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">has</span>(<span class=\"code-params\">key</span>) </span>{\n","        <span class=\"code-keyword\">return</span> !!getEntry(<span class=\"code-keyword\">this</span>, key);\n","      }\n","    });\n","\n","    redefineAll(C.prototype, IS_MAP ? {\n","      <span class=\"code-comment\">// 23.1.3.6 Map.prototype.get(key)</span>\n","      <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>(key) {\n","        <span class=\"code-keyword\">var</span> entry = getEntry(<span class=\"code-keyword\">this</span>, key);\n","        <span class=\"code-keyword\">return</span> entry &amp;&amp; entry.value;\n","      },\n","      <span class=\"code-comment\">// 23.1.3.9 Map.prototype.set(key, value)</span>\n","      <span class=\"code-keyword\">set</span>: function <span class=\"code-keyword\">set</span>(key, value) {\n","        <span class=\"code-keyword\">return</span> define(<span class=\"code-keyword\">this</span>, key === <span class=\"code-number\">0</span> ? <span class=\"code-number\">0</span> : key, value);\n","      }\n","    } : {\n","      <span class=\"code-comment\">// 23.2.3.1 Set.prototype.add(value)</span>\n","      add: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">add</span>(<span class=\"code-params\">value</span>) </span>{\n","        <span class=\"code-keyword\">return</span> define(<span class=\"code-keyword\">this</span>, value = value === <span class=\"code-number\">0</span> ? <span class=\"code-number\">0</span> : value, value);\n","      }\n","    });\n","    <span class=\"code-keyword\">if</span> (DESCRIPTORS) defineProperty(C.prototype, <span class=\"code-string\">'size'</span>, {\n","      <span class=\"code-keyword\">get</span>: function () {\n","        <span class=\"code-keyword\">return</span> getInternalState(<span class=\"code-keyword\">this</span>).size;\n","      }\n","    });\n","    <span class=\"code-keyword\">return</span> C;\n","  },\n","  setStrong: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">C, CONSTRUCTOR_NAME, IS_MAP</span>) </span>{\n","    <span class=\"code-keyword\">var</span> ITERATOR_NAME = CONSTRUCTOR_NAME + <span class=\"code-string\">' Iterator'</span>;\n","    <span class=\"code-keyword\">var</span> getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n","    <span class=\"code-keyword\">var</span> getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n","    <span class=\"code-comment\">// add .keys, .values, .entries, [@@iterator]</span>\n","    <span class=\"code-comment\">// 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11</span>\n","    defineIterator(C, CONSTRUCTOR_NAME, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">iterated, kind</span>) </span>{\n","      setInternalState(<span class=\"code-keyword\">this</span>, {\n","        type: ITERATOR_NAME,\n","        target: iterated,\n","        state: getInternalCollectionState(iterated),\n","        kind: kind,\n","        last: <span class=\"code-literal\">undefined</span>\n","      });\n","    }, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">var</span> state = getInternalIteratorState(<span class=\"code-keyword\">this</span>);\n","      <span class=\"code-keyword\">var</span> kind = state.kind;\n","      <span class=\"code-keyword\">var</span> entry = state.last;\n","      <span class=\"code-comment\">// revert to the last existing entry</span>\n","      <span class=\"code-keyword\">while</span> (entry &amp;&amp; entry.removed) entry = entry.previous;\n","      <span class=\"code-comment\">// get next entry</span>\n","      <span class=\"code-keyword\">if</span> (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n","        <span class=\"code-comment\">// or finish the iteration</span>\n","        state.target = <span class=\"code-literal\">undefined</span>;\n","        <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: <span class=\"code-literal\">undefined</span>, <span class=\"code-attr\">done</span>: <span class=\"code-literal\">true</span> };\n","      }\n","      <span class=\"code-comment\">// return step by kind</span>\n","      <span class=\"code-keyword\">if</span> (kind == <span class=\"code-string\">'keys'</span>) <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: entry.key, <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","      <span class=\"code-keyword\">if</span> (kind == <span class=\"code-string\">'values'</span>) <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: entry.value, <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","      <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: [entry.key, entry.value], <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","    }, IS_MAP ? <span class=\"code-string\">'entries'</span> : <span class=\"code-string\">'values'</span>, !IS_MAP, <span class=\"code-literal\">true</span>);\n","\n","    <span class=\"code-comment\">// add [@@species], 23.1.2.2, 23.2.2.2</span>\n","    setSpecies(CONSTRUCTOR_NAME);\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 118 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.iterator` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.iterator</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'iterator'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 119 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> internalObjectKeys = __webpack_require__(<span class=\"code-number\">102</span>);\n","<span class=\"code-keyword\">var</span> enumBugKeys = __webpack_require__(<span class=\"code-number\">73</span>);\n","\n","<span class=\"code-keyword\">var</span> hiddenKeys = enumBugKeys.concat(<span class=\"code-string\">'length'</span>, <span class=\"code-string\">'prototype'</span>);\n","\n","<span class=\"code-comment\">// `Object.getOwnPropertyNames` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.getownpropertynames</span>\n","exports.f = <span class=\"code-built_in\">Object</span>.getOwnPropertyNames || <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getOwnPropertyNames</span>(<span class=\"code-params\">O</span>) </span>{\n","  <span class=\"code-keyword\">return</span> internalObjectKeys(O, hiddenKeys);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 120 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","exports.f = <span class=\"code-built_in\">Object</span>.getOwnPropertySymbols;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 121 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">255</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 122 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u6837\u5F0F\u914D\u7F6E\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  zIndex: <span class=\"code-number\">10000</span>\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 123 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u5904\u7406\u7C98\u8D34\u903B\u8F91\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports.getPasteImgs = exports.getPasteHtml = exports.getPasteText = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>;\n","\n","<span class=\"code-keyword\">var</span> util_1 = __webpack_require__(<span class=\"code-number\">7</span>);\n","\n","<span class=\"code-keyword\">var</span> parse_html_1 = __importDefault(__webpack_require__(<span class=\"code-number\">294</span>));\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u83B7\u53D6\u7C98\u8D34\u7684\u7EAF\u6587\u672C\n</span>","<span class=\"code-comment\"> * @param e Event \u53C2\u6570\n</span>","<span class=\"code-comment\"> */</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getPasteText</span>(<span class=\"code-params\">e</span>) </span>{\n","  <span class=\"code-comment\">// const clipboardData = e.clipboardData || (e.originalEvent &amp;&amp; e.originalEvent.clipboardData)</span>\n","  <span class=\"code-keyword\">var</span> clipboardData = e.clipboardData; <span class=\"code-comment\">// \u6682\u4E0D\u8003\u8651 originalEvent \u7684\u60C5\u51B5</span>\n","\n","  <span class=\"code-keyword\">var</span> pasteText = <span class=\"code-string\">''</span>;\n","\n","  <span class=\"code-keyword\">if</span> (clipboardData == <span class=\"code-literal\">null</span>) {\n","    pasteText = <span class=\"code-built_in\">window</span>.clipboardData &amp;&amp; <span class=\"code-built_in\">window</span>.clipboardData.getData(<span class=\"code-string\">'text'</span>);\n","  } <span class=\"code-keyword\">else</span> {\n","    pasteText = clipboardData.getData(<span class=\"code-string\">'text/plain'</span>);\n","  }\n","\n","  <span class=\"code-keyword\">return</span> util_1.replaceHtmlSymbol(pasteText);\n","}\n","\n","exports.getPasteText = getPasteText;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u83B7\u53D6\u7C98\u8D34\u7684 html \u5B57\u7B26\u4E32\n</span>","<span class=\"code-comment\"> * @param e Event \u53C2\u6570\n</span>","<span class=\"code-comment\"> * @param filterStyle \u662F\u5426\u8FC7\u6EE4 style \u6837\u5F0F\n</span>","<span class=\"code-comment\"> * @param ignoreImg \u662F\u5426\u5FFD\u7565 img \u6807\u7B7E\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getPasteHtml</span>(<span class=\"code-params\">e, filterStyle, ignoreImg</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (filterStyle === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","    filterStyle = <span class=\"code-literal\">true</span>;\n","  }\n","\n","  <span class=\"code-keyword\">if</span> (ignoreImg === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","    ignoreImg = <span class=\"code-literal\">false</span>;\n","  }\n","\n","  <span class=\"code-keyword\">var</span> clipboardData = e.clipboardData; <span class=\"code-comment\">// \u6682\u4E0D\u8003\u8651 originalEvent \u7684\u60C5\u51B5</span>\n","\n","  <span class=\"code-keyword\">var</span> pasteHtml = <span class=\"code-string\">''</span>;\n","\n","  <span class=\"code-keyword\">if</span> (clipboardData) {\n","    pasteHtml = clipboardData.getData(<span class=\"code-string\">'text/html'</span>);\n","  } <span class=\"code-comment\">// \u65E0\u6CD5\u901A\u8FC7 'text/html' \u683C\u5F0F\u83B7\u53D6 html\uFF0C\u5219\u5C1D\u8BD5\u83B7\u53D6 text</span>\n","\n","\n","  <span class=\"code-keyword\">if</span> (!pasteHtml) {\n","    <span class=\"code-keyword\">var</span> text = getPasteText(e);\n","\n","    <span class=\"code-keyword\">if</span> (!text) {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-string\">''</span>; <span class=\"code-comment\">// \u6CA1\u6709\u627E\u5230\u4EFB\u4F55\u6587\u5B57\uFF0C\u5219\u8FD4\u56DE</span>\n","    }\n","\n","    pasteHtml = <span class=\"code-string\">\"&lt;p&gt;\"</span> + text + <span class=\"code-string\">\"&lt;/p&gt;\"</span>;\n","  } <span class=\"code-comment\">// \u5254\u9664\u591A\u4F59\u7684\u6807\u7B7E\u3001\u5C5E\u6027</span>\n","\n","\n","  pasteHtml = parse_html_1[<span class=\"code-string\">\"default\"</span>](pasteHtml, filterStyle, ignoreImg);\n","  <span class=\"code-keyword\">return</span> pasteHtml;\n","}\n","\n","exports.getPasteHtml = getPasteHtml;\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u83B7\u53D6\u7C98\u8D34\u7684\u56FE\u7247\u6587\u4EF6\n</span>","<span class=\"code-comment\"> * @param e Event \u53C2\u6570\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getPasteImgs</span>(<span class=\"code-params\">e</span>) </span>{\n","  <span class=\"code-keyword\">var</span> _a;\n","\n","  <span class=\"code-keyword\">var</span> result = [];\n","  <span class=\"code-keyword\">var</span> txt = getPasteText(e);\n","\n","  <span class=\"code-keyword\">if</span> (txt) {\n","    <span class=\"code-comment\">// \u6709\u6587\u5B57\uFF0C\u5C31\u5FFD\u7565\u56FE\u7247</span>\n","    <span class=\"code-keyword\">return</span> result;\n","  }\n","\n","  <span class=\"code-keyword\">var</span> items = (_a = e.clipboardData) === <span class=\"code-literal\">null</span> || _a === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : _a.items;\n","  <span class=\"code-keyword\">if</span> (!items) <span class=\"code-keyword\">return</span> result;\n","  (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(util_1).call(util_1, items, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, value</span>) </span>{\n","    <span class=\"code-keyword\">var</span> type = value.type;\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-regexp\">/image/i</span>.test(type)) {\n","      result.push(value.getAsFile());\n","    }\n","  });\n","  <span class=\"code-keyword\">return</span> result;\n","}\n","\n","exports.getPasteImgs = getPasteImgs;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 124 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">296</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 125 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u4E0B\u62C9\u5217\u8868 class\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> dom_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">2</span>));\n","\n","<span class=\"code-keyword\">var</span> const_1 = __webpack_require__(<span class=\"code-number\">26</span>);\n","\n","<span class=\"code-keyword\">var</span> DropList =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">DropList</span>(<span class=\"code-params\">menu, conf</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">this</span>.hideTimeoutId = <span class=\"code-number\">0</span>;\n","    <span class=\"code-keyword\">this</span>.showTimeoutId = <span class=\"code-number\">0</span>;\n","    <span class=\"code-keyword\">this</span>.menu = menu;\n","    <span class=\"code-keyword\">this</span>.conf = conf; <span class=\"code-comment\">// \u5BB9\u5668</span>\n","\n","    <span class=\"code-keyword\">var</span> $container = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div class=\"w-e-droplist\"&gt;&lt;/div&gt;'</span>); <span class=\"code-comment\">// \u6807\u9898</span>\n","\n","    <span class=\"code-keyword\">var</span> $title = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">\"&lt;p&gt;\"</span> + conf.title + <span class=\"code-string\">\"&lt;/p&gt;\"</span>);\n","    $title.addClass(<span class=\"code-string\">'w-e-dp-title'</span>);\n","    $container.append($title); <span class=\"code-comment\">// \u5217\u8868\u548C\u7C7B\u578B</span>\n","\n","    <span class=\"code-keyword\">var</span> list = conf.list || [];\n","    <span class=\"code-keyword\">var</span> type = conf.type || <span class=\"code-string\">'list'</span>; <span class=\"code-comment\">// item \u7684\u70B9\u51FB\u4E8B\u4EF6</span>\n","\n","    <span class=\"code-keyword\">var</span> clickHandler = conf.clickHandler || const_1.EMPTY_FN; <span class=\"code-comment\">// \u52A0\u5165 DOM \u5E76\u7ED1\u5B9A\u4E8B\u4EF6</span>\n","\n","    <span class=\"code-keyword\">var</span> $list = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;ul class=\"'</span> + (type === <span class=\"code-string\">'list'</span> ? <span class=\"code-string\">'w-e-list'</span> : <span class=\"code-string\">'w-e-block'</span>) + <span class=\"code-string\">'\"&gt;&lt;/ul&gt;'</span>);\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(list).call(list, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">item</span>) </span>{\n","      <span class=\"code-keyword\">var</span> $elem = item.$elem;\n","      <span class=\"code-keyword\">var</span> value = item.value;\n","      <span class=\"code-keyword\">var</span> $li = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;li class=\"w-e-item\"&gt;&lt;/li&gt;'</span>);\n","\n","      <span class=\"code-keyword\">if</span> ($elem) {\n","        $li.append($elem);\n","        $list.append($li);\n","        $li.on(<span class=\"code-string\">'click'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","          clickHandler(value); <span class=\"code-comment\">// item \u70B9\u51FB\u4E4B\u540E\uFF0C\u9690\u85CF list</span>\n","\n","          _this.hideTimeoutId = <span class=\"code-built_in\">window</span>.setTimeout(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","            _this.hide();\n","          });\n","        });\n","      }\n","    });\n","    $container.append($list); <span class=\"code-comment\">// \u7ED1\u5B9A\u9690\u85CF\u4E8B\u4EF6</span>\n","\n","    $container.on(<span class=\"code-string\">'mouseleave'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      _this.hideTimeoutId = <span class=\"code-built_in\">window</span>.setTimeout(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        _this.hide();\n","      });\n","    }); <span class=\"code-comment\">// \u8BB0\u5F55\u5C5E\u6027</span>\n","\n","    <span class=\"code-keyword\">this</span>.$container = $container;\n","    <span class=\"code-keyword\">this</span>.rendered = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>._show = <span class=\"code-literal\">false</span>;\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u663E\u793A DropList\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DropList.prototype.show = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>.hideTimeoutId) {\n","      <span class=\"code-comment\">// \u6E05\u9664\u4E4B\u524D\u7684\u5B9A\u65F6\u9690\u85CF</span>\n","      clearTimeout(<span class=\"code-keyword\">this</span>.hideTimeoutId);\n","    }\n","\n","    <span class=\"code-keyword\">var</span> menu = <span class=\"code-keyword\">this</span>.menu;\n","    <span class=\"code-keyword\">var</span> $menuELem = menu.$elem;\n","    <span class=\"code-keyword\">var</span> $container = <span class=\"code-keyword\">this</span>.$container;\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>._show) {\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>.rendered) {\n","      <span class=\"code-comment\">// \u663E\u793A</span>\n","      $container.show();\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-comment\">// \u52A0\u5165 DOM \u4E4B\u524D\u5148\u5B9A\u4F4D\u4F4D\u7F6E</span>\n","      <span class=\"code-keyword\">var</span> menuHeight = $menuELem.getSizeData().height || <span class=\"code-number\">0</span>;\n","      <span class=\"code-keyword\">var</span> width = <span class=\"code-keyword\">this</span>.conf.width || <span class=\"code-number\">100</span>; <span class=\"code-comment\">// \u9ED8\u8BA4\u4E3A 100</span>\n","\n","      $container.css(<span class=\"code-string\">'margin-top'</span>, menuHeight + <span class=\"code-string\">'px'</span>).css(<span class=\"code-string\">'width'</span>, width + <span class=\"code-string\">'px'</span>); <span class=\"code-comment\">// \u52A0\u5165\u5230 DOM</span>\n","\n","      $menuELem.append($container);\n","      <span class=\"code-keyword\">this</span>.rendered = <span class=\"code-literal\">true</span>;\n","    } <span class=\"code-comment\">// \u4FEE\u6539\u5C5E\u6027</span>\n","\n","\n","    <span class=\"code-keyword\">this</span>._show = <span class=\"code-literal\">true</span>;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u9690\u85CF DropList\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  DropList.prototype.hide = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span>.showTimeoutId) {\n","      <span class=\"code-comment\">// \u6E05\u9664\u4E4B\u524D\u7684\u5B9A\u65F6\u663E\u793A</span>\n","      clearTimeout(<span class=\"code-keyword\">this</span>.showTimeoutId);\n","    }\n","\n","    <span class=\"code-keyword\">var</span> $container = <span class=\"code-keyword\">this</span>.$container;\n","\n","    <span class=\"code-keyword\">if</span> (!<span class=\"code-keyword\">this</span>._show) {\n","      <span class=\"code-keyword\">return</span>;\n","    } <span class=\"code-comment\">// \u9690\u85CF\u5E76\u9700\u6539\u5C5E\u6027</span>\n","\n","\n","    $container.hide();\n","    <span class=\"code-keyword\">this</span>._show = <span class=\"code-literal\">false</span>;\n","  };\n","\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(DropList.prototype, <span class=\"code-string\">\"isShow\"</span>, {\n","    <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>() {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>._show;\n","    },\n","    enumerable: <span class=\"code-literal\">false</span>,\n","    configurable: <span class=\"code-literal\">true</span>\n","  });\n","  <span class=\"code-keyword\">return</span> DropList;\n","}();\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = DropList;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 126 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u68C0\u67E5\u9009\u533A\u662F\u5426\u5728\u94FE\u63A5\u4E2D\uFF0C\u5373\u83DC\u5355\u662F\u5426\u5E94\u8BE5 active\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isActive</span>(<span class=\"code-params\">editor</span>) </span>{\n","  <span class=\"code-keyword\">var</span> $selectionELem = editor.selection.getSelectionContainerElem();\n","\n","  <span class=\"code-keyword\">if</span> (!$selectionELem) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  }\n","\n","  <span class=\"code-keyword\">if</span> ($selectionELem.getNodeName() === <span class=\"code-string\">'A'</span>) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  } <span class=\"code-keyword\">else</span> {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  }\n","}\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = isActive;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 127 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u68C0\u67E5\u9009\u533A\u662F\u5426\u5728\u4EE3\u7801\u4E2D\uFF0C\u5373\u83DC\u5355\u662F\u5426\u5E94\u8BE5 active\n</span>","<span class=\"code-comment\"> * @author lkw\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">isActive</span>(<span class=\"code-params\">editor</span>) </span>{\n","  <span class=\"code-keyword\">var</span> $selectionELem = editor.selection.getSelectionContainerElem();\n","\n","  <span class=\"code-keyword\">if</span> (!$selectionELem) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  }\n","\n","  <span class=\"code-keyword\">if</span> ($selectionELem.getNodeName() == <span class=\"code-string\">'CODE'</span> || $selectionELem.getNodeName() == <span class=\"code-string\">'PRE'</span> || $selectionELem.parent().getNodeName() == <span class=\"code-string\">'CODE'</span> || $selectionELem.parent().getNodeName() == <span class=\"code-string\">'PRE'</span> || <span class=\"code-regexp\">/hljs/</span>.test($selectionELem.parent().attr(<span class=\"code-string\">'class'</span>))) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  } <span class=\"code-keyword\">else</span> {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  }\n","}\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = isActive;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 128 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _find = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">30</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports.todo = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>;\n","\n","<span class=\"code-keyword\">var</span> dom_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">2</span>));\n","\n","<span class=\"code-keyword\">var</span> todo =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">todo</span>(<span class=\"code-params\">$orginElem</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _a;\n","\n","    <span class=\"code-keyword\">this</span>.template = <span class=\"code-string\">\"&lt;ul class=\\\"w-e-todo\\\"&gt;&lt;li&gt;&lt;span contenteditable=\\\"false\\\"&gt;&lt;input type=\\\"checkbox\\\"&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\"</span>;\n","    <span class=\"code-keyword\">this</span>.checked = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>.$todo = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>.template);\n","    <span class=\"code-keyword\">this</span>.$child = (_a = $orginElem === <span class=\"code-literal\">null</span> || $orginElem === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : $orginElem.childNodes()) === <span class=\"code-literal\">null</span> || _a === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : _a.clone(<span class=\"code-literal\">true</span>);\n","  }\n","\n","  todo.prototype.init = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>;\n","\n","    <span class=\"code-keyword\">var</span> $input = <span class=\"code-keyword\">this</span>.getInput();\n","    <span class=\"code-keyword\">var</span> $child = <span class=\"code-keyword\">this</span>.$child;\n","    <span class=\"code-keyword\">var</span> $inputContainer = <span class=\"code-keyword\">this</span>.getInputContainer();\n","\n","    <span class=\"code-keyword\">if</span> ($child) {\n","      $child.insertAfter($inputContainer);\n","    }\n","\n","    $input.on(<span class=\"code-string\">'click'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">if</span> (_this.checked) {\n","        $input === <span class=\"code-literal\">null</span> || $input === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : $input.removeAttr(<span class=\"code-string\">'checked'</span>);\n","      } <span class=\"code-keyword\">else</span> {\n","        $input === <span class=\"code-literal\">null</span> || $input === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : $input.attr(<span class=\"code-string\">'checked'</span>, <span class=\"code-string\">''</span>);\n","      }\n","\n","      _this.checked = !_this.checked;\n","    });\n","  };\n","\n","  todo.prototype.getInput = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> $todo = <span class=\"code-keyword\">this</span>.$todo;\n","    <span class=\"code-keyword\">var</span> $input = (<span class=\"code-number\">0</span>, _find[<span class=\"code-string\">\"default\"</span>])($todo).call($todo, <span class=\"code-string\">'input'</span>);\n","    <span class=\"code-keyword\">return</span> $input;\n","  };\n","\n","  todo.prototype.getInputContainer = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> $inputContainer = <span class=\"code-keyword\">this</span>.getInput().parent();\n","    <span class=\"code-keyword\">return</span> $inputContainer;\n","  };\n","\n","  todo.prototype.getTodo = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.$todo;\n","  };\n","\n","  <span class=\"code-keyword\">return</span> todo;\n","}();\n","\n","exports.todo = todo;\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">createTodo</span>(<span class=\"code-params\">$orginElem</span>) </span>{\n","  <span class=\"code-keyword\">var</span> t = <span class=\"code-keyword\">new</span> todo($orginElem);\n","  t.init();\n","  <span class=\"code-keyword\">return</span> t;\n","}\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = createTodo;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 129 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u5165\u53E3\u6587\u4EF6\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> _create = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">3</span>));\n","\n","<span class=\"code-keyword\">var</span> __createBinding = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__createBinding || (_create[<span class=\"code-string\">\"default\"</span>] ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">o, m, k, k2</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (k2 === <span class=\"code-literal\">undefined</span>) k2 = k;\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(o, k2, {\n","    enumerable: <span class=\"code-literal\">true</span>,\n","    <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>() {\n","      <span class=\"code-keyword\">return</span> m[k];\n","    }\n","  });\n","} : <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">o, m, k, k2</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (k2 === <span class=\"code-literal\">undefined</span>) k2 = k;\n","  o[k2] = m[k];\n","});\n","\n","<span class=\"code-keyword\">var</span> __exportStar = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__exportStar || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">m, exports</span>) </span>{\n","  <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> p <span class=\"code-keyword\">in</span> m) {\n","    <span class=\"code-keyword\">if</span> (p !== <span class=\"code-string\">\"default\"</span> &amp;&amp; !<span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n","  }\n","};\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","__webpack_require__(<span class=\"code-number\">139</span>);\n","\n","__webpack_require__(<span class=\"code-number\">141</span>);\n","\n","__webpack_require__(<span class=\"code-number\">145</span>);\n","\n","__webpack_require__(<span class=\"code-number\">147</span>);\n","\n","__webpack_require__(<span class=\"code-number\">149</span>);\n","\n","__webpack_require__(<span class=\"code-number\">151</span>);\n","\n","__webpack_require__(<span class=\"code-number\">153</span>);\n","\n","<span class=\"code-keyword\">var</span> index_1 = __importDefault(__webpack_require__(<span class=\"code-number\">177</span>));\n","\n","__exportStar(__webpack_require__(<span class=\"code-number\">416</span>), exports); <span class=\"code-comment\">// \u68C0\u9A8C\u662F\u5426\u6D4F\u89C8\u5668\u73AF\u5883</span>\n","\n","\n","<span class=\"code-keyword\">try</span> {\n","  <span class=\"code-built_in\">document</span>;\n","} <span class=\"code-keyword\">catch</span> (ex) {\n","  <span class=\"code-keyword\">throw</span> <span class=\"code-keyword\">new</span> <span class=\"code-built_in\">Error</span>(<span class=\"code-string\">'\u8BF7\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u4E0B\u8FD0\u884C'</span>);\n","}\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = index_1[<span class=\"code-string\">\"default\"</span>];\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 130 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">131</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 131 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">132</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">Object</span> = path.Object;\n","\n","<span class=\"code-keyword\">var</span> defineProperty = <span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">defineProperty</span>(<span class=\"code-params\">it, key, desc</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>.defineProperty(it, key, desc);\n","};\n","\n","<span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Object</span>.defineProperty.sham) defineProperty.sham = <span class=\"code-literal\">true</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 132 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> objectDefinePropertyModile = __webpack_require__(<span class=\"code-number\">18</span>);\n","\n","<span class=\"code-comment\">// `Object.defineProperty` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.defineproperty</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Object'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !DESCRIPTORS, <span class=\"code-attr\">sham</span>: !DESCRIPTORS }, {\n","  defineProperty: objectDefinePropertyModile.f\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 133 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> g;\n","\n","<span class=\"code-comment\">// This works in non-strict mode</span>\n","g = (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\"></span>) </span>{\n","\t<span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","})();\n","\n","<span class=\"code-keyword\">try</span> {\n","\t<span class=\"code-comment\">// This works if eval is allowed (see CSP)</span>\n","\tg = g || <span class=\"code-keyword\">new</span> <span class=\"code-built_in\">Function</span>(<span class=\"code-string\">\"return this\"</span>)();\n","} <span class=\"code-keyword\">catch</span> (e) {\n","\t<span class=\"code-comment\">// This works if the window reference is available</span>\n","\t<span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> <span class=\"code-built_in\">window</span> === <span class=\"code-string\">\"object\"</span>) g = <span class=\"code-built_in\">window</span>;\n","}\n","\n","<span class=\"code-comment\">// g can still be undefined, but nothing to do about it...</span>\n","<span class=\"code-comment\">// We return undefined, instead of nothing here, so it's</span>\n","<span class=\"code-comment\">// easier to handle this case. if(!global) { ...}</span>\n","\n","<span class=\"code-built_in\">module</span>.exports = g;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 134 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">135</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 135 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">136</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">Object</span> = path.Object;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">create</span>(<span class=\"code-params\">P, D</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>.create(P, D);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 136 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> create = __webpack_require__(<span class=\"code-number\">48</span>);\n","\n","<span class=\"code-comment\">// `Object.create` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.create</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Object'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">sham</span>: !DESCRIPTORS }, {\n","  create: create\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 137 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> definePropertyModule = __webpack_require__(<span class=\"code-number\">18</span>);\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> objectKeys = __webpack_require__(<span class=\"code-number\">57</span>);\n","\n","<span class=\"code-comment\">// `Object.defineProperties` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.defineproperties</span>\n","<span class=\"code-built_in\">module</span>.exports = DESCRIPTORS ? <span class=\"code-built_in\">Object</span>.defineProperties : <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">defineProperties</span>(<span class=\"code-params\">O, Properties</span>) </span>{\n","  anObject(O);\n","  <span class=\"code-keyword\">var</span> keys = objectKeys(Properties);\n","  <span class=\"code-keyword\">var</span> length = keys.length;\n","  <span class=\"code-keyword\">var</span> index = <span class=\"code-number\">0</span>;\n","  <span class=\"code-keyword\">var</span> key;\n","  <span class=\"code-keyword\">while</span> (length &gt; index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n","  <span class=\"code-keyword\">return</span> O;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 138 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, value</span>) </span>{\n","  <span class=\"code-keyword\">try</span> {\n","    createNonEnumerableProperty(global, key, value);\n","  } <span class=\"code-keyword\">catch</span> (error) {\n","    global[key] = value;\n","  } <span class=\"code-keyword\">return</span> value;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 139 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> api = __webpack_require__(<span class=\"code-number\">20</span>);\n","            <span class=\"code-keyword\">var</span> content = __webpack_require__(<span class=\"code-number\">140</span>);\n","\n","            content = content.__esModule ? content.default : content;\n","\n","            <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> content === <span class=\"code-string\">'string'</span>) {\n","              content = [[<span class=\"code-built_in\">module</span>.i, content, <span class=\"code-string\">''</span>]];\n","            }\n","\n","<span class=\"code-keyword\">var</span> options = {};\n","\n","options.insert = <span class=\"code-string\">\"head\"</span>;\n","options.singleton = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">var</span> update = api(content, options);\n","\n","\n","\n","<span class=\"code-built_in\">module</span>.exports = content.locals || {};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 140 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// Imports</span>\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_API_IMPORT___ = __webpack_require__(<span class=\"code-number\">21</span>);\n","exports = ___CSS_LOADER_API_IMPORT___(<span class=\"code-literal\">false</span>);\n","<span class=\"code-comment\">// Module</span>\n","exports.push([<span class=\"code-built_in\">module</span>.i, <span class=\"code-string\">\".w-e-toolbar,\\n.w-e-text-container,\\n.w-e-menu-panel {\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n  background-color: #fff;\\n  /*\u8868\u60C5\u83DC\u5355\u6837\u5F0F*/\\n  /*\u5206\u5272\u7EBF\u6837\u5F0F*/\\n}\\n.w-e-toolbar h1,\\n.w-e-text-container h1,\\n.w-e-menu-panel h1 {\\n  font-size: 2em !important;\\n}\\n.w-e-toolbar h2,\\n.w-e-text-container h2,\\n.w-e-menu-panel h2 {\\n  font-size: 1.5em !important;\\n}\\n.w-e-toolbar h3,\\n.w-e-text-container h3,\\n.w-e-menu-panel h3 {\\n  font-size: 1.17em !important;\\n}\\n.w-e-toolbar h4,\\n.w-e-text-container h4,\\n.w-e-menu-panel h4 {\\n  font-size: 1em !important;\\n}\\n.w-e-toolbar h5,\\n.w-e-text-container h5,\\n.w-e-menu-panel h5 {\\n  font-size: 0.83em !important;\\n}\\n.w-e-toolbar p,\\n.w-e-text-container p,\\n.w-e-menu-panel p {\\n  font-size: 1em !important;\\n}\\n.w-e-toolbar .eleImg,\\n.w-e-text-container .eleImg,\\n.w-e-menu-panel .eleImg {\\n  cursor: pointer;\\n  display: inline-block;\\n  font-size: 18px;\\n  padding: 0 3px;\\n}\\n.w-e-toolbar *,\\n.w-e-text-container *,\\n.w-e-menu-panel * {\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n}\\n.w-e-toolbar hr,\\n.w-e-text-container hr,\\n.w-e-menu-panel hr {\\n  cursor: pointer;\\n  display: block;\\n  height: 0px;\\n  border: 0;\\n  border-top: 3px solid #ccc;\\n  margin: 20px 0;\\n}\\n.w-e-clear-fix:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both;\\n}\\n.w-e-drop-list-item {\\n  position: relative;\\n  top: 1px;\\n  padding-right: 7px;\\n  color: #333 !important;\\n}\\n.w-e-drop-list-tl {\\n  padding-left: 10px;\\n  text-align: left;\\n}\\n\"</span>, <span class=\"code-string\">\"\"</span>]);\n","<span class=\"code-comment\">// Exports</span>\n","<span class=\"code-built_in\">module</span>.exports = exports;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 141 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> api = __webpack_require__(<span class=\"code-number\">20</span>);\n","            <span class=\"code-keyword\">var</span> content = __webpack_require__(<span class=\"code-number\">142</span>);\n","\n","            content = content.__esModule ? content.default : content;\n","\n","            <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> content === <span class=\"code-string\">'string'</span>) {\n","              content = [[<span class=\"code-built_in\">module</span>.i, content, <span class=\"code-string\">''</span>]];\n","            }\n","\n","<span class=\"code-keyword\">var</span> options = {};\n","\n","options.insert = <span class=\"code-string\">\"head\"</span>;\n","options.singleton = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">var</span> update = api(content, options);\n","\n","\n","\n","<span class=\"code-built_in\">module</span>.exports = content.locals || {};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 142 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// Imports</span>\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_API_IMPORT___ = __webpack_require__(<span class=\"code-number\">21</span>);\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_GET_URL_IMPORT___ = __webpack_require__(<span class=\"code-number\">143</span>);\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_URL_IMPORT_0___ = __webpack_require__(<span class=\"code-number\">144</span>);\n","exports = ___CSS_LOADER_API_IMPORT___(<span class=\"code-literal\">false</span>);\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n","<span class=\"code-comment\">// Module</span>\n","exports.push([<span class=\"code-built_in\">module</span>.i, <span class=\"code-string\">\"@font-face {\\n  font-family: 'w-e-icon';\\n  src: url(\"</span> + ___CSS_LOADER_URL_REPLACEMENT_0___ + <span class=\"code-string\">\") format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n[class^=\\\"w-e-icon-\\\"],\\n[class*=\\\" w-e-icon-\\\"] {\\n  /* use !important to prevent issues with browser extensions that change fonts */\\n  font-family: 'w-e-icon' !important;\\n  speak: none;\\n  font-style: normal;\\n  font-weight: normal;\\n  font-variant: normal;\\n  text-transform: none;\\n  line-height: 1;\\n  /* Better Font Rendering =========== */\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.w-e-icon-close:before {\\n  content: \\\"\\\\f00d\\\";\\n}\\n.w-e-icon-upload2:before {\\n  content: \\\"\\\\e9c6\\\";\\n}\\n.w-e-icon-trash-o:before {\\n  content: \\\"\\\\f014\\\";\\n}\\n.w-e-icon-header:before {\\n  content: \\\"\\\\f1dc\\\";\\n}\\n.w-e-icon-pencil2:before {\\n  content: \\\"\\\\e906\\\";\\n}\\n.w-e-icon-paint-brush:before {\\n  content: \\\"\\\\f1fc\\\";\\n}\\n.w-e-icon-image:before {\\n  content: \\\"\\\\e90d\\\";\\n}\\n.w-e-icon-play:before {\\n  content: \\\"\\\\e912\\\";\\n}\\n.w-e-icon-location:before {\\n  content: \\\"\\\\e947\\\";\\n}\\n.w-e-icon-undo:before {\\n  content: \\\"\\\\e965\\\";\\n}\\n.w-e-icon-redo:before {\\n  content: \\\"\\\\e966\\\";\\n}\\n.w-e-icon-quotes-left:before {\\n  content: \\\"\\\\e977\\\";\\n}\\n.w-e-icon-list-numbered:before {\\n  content: \\\"\\\\e9b9\\\";\\n}\\n.w-e-icon-list2:before {\\n  content: \\\"\\\\e9bb\\\";\\n}\\n.w-e-icon-link:before {\\n  content: \\\"\\\\e9cb\\\";\\n}\\n.w-e-icon-happy:before {\\n  content: \\\"\\\\e9df\\\";\\n}\\n.w-e-icon-bold:before {\\n  content: \\\"\\\\ea62\\\";\\n}\\n.w-e-icon-underline:before {\\n  content: \\\"\\\\ea63\\\";\\n}\\n.w-e-icon-italic:before {\\n  content: \\\"\\\\ea64\\\";\\n}\\n.w-e-icon-strikethrough:before {\\n  content: \\\"\\\\ea65\\\";\\n}\\n.w-e-icon-table2:before {\\n  content: \\\"\\\\ea71\\\";\\n}\\n.w-e-icon-paragraph-left:before {\\n  content: \\\"\\\\ea77\\\";\\n}\\n.w-e-icon-paragraph-center:before {\\n  content: \\\"\\\\ea78\\\";\\n}\\n.w-e-icon-paragraph-right:before {\\n  content: \\\"\\\\ea79\\\";\\n}\\n.w-e-icon-paragraph-justify:before {\\n  content: \\\"\\\\ea7a\\\";\\n}\\n.w-e-icon-terminal:before {\\n  content: \\\"\\\\f120\\\";\\n}\\n.w-e-icon-page-break:before {\\n  content: \\\"\\\\ea68\\\";\\n}\\n.w-e-icon-cancel-circle:before {\\n  content: \\\"\\\\ea0d\\\";\\n}\\n.w-e-icon-font:before {\\n  content: \\\"\\\\ea5c\\\";\\n}\\n.w-e-icon-text-heigh:before {\\n  content: \\\"\\\\ea5f\\\";\\n}\\n.w-e-icon-paint-format:before {\\n  content: \\\"\\\\e90c\\\";\\n}\\n.w-e-icon-indent-increase:before {\\n  content: \\\"\\\\ea7b\\\";\\n}\\n.w-e-icon-indent-decrease:before {\\n  content: \\\"\\\\ea7c\\\";\\n}\\n.w-e-icon-row-height:before {\\n  content: \\\"\\\\e9be\\\";\\n}\\n.w-e-icon-fullscreen_exit:before {\\n  content: \\\"\\\\e900\\\";\\n}\\n.w-e-icon-fullscreen:before {\\n  content: \\\"\\\\e901\\\";\\n}\\n.w-e-icon-split-line:before {\\n  content: \\\"\\\\ea0b\\\";\\n}\\n.w-e-icon-checkbox-checked:before {\\n  content: \\\"\\\\ea52\\\";\\n}\\n\"</span>, <span class=\"code-string\">\"\"</span>]);\n","<span class=\"code-comment\">// Exports</span>\n","<span class=\"code-built_in\">module</span>.exports = exports;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 143 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">url, options</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!options) {\n","    <span class=\"code-comment\">// eslint-disable-next-line no-param-reassign</span>\n","    options = {};\n","  } <span class=\"code-comment\">// eslint-disable-next-line no-underscore-dangle, no-param-reassign</span>\n","\n","\n","  url = url &amp;&amp; url.__esModule ? url.default : url;\n","\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> url !== <span class=\"code-string\">'string'</span>) {\n","    <span class=\"code-keyword\">return</span> url;\n","  } <span class=\"code-comment\">// If url is already wrapped in quotes, remove them</span>\n","\n","\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-regexp\">/^['\"].*['\"]$/</span>.test(url)) {\n","    <span class=\"code-comment\">// eslint-disable-next-line no-param-reassign</span>\n","    url = url.slice(<span class=\"code-number\">1</span>, <span class=\"code-number\">-1</span>);\n","  }\n","\n","  <span class=\"code-keyword\">if</span> (options.hash) {\n","    <span class=\"code-comment\">// eslint-disable-next-line no-param-reassign</span>\n","    url += options.hash;\n","  } <span class=\"code-comment\">// Should url be wrapped?</span>\n","  <span class=\"code-comment\">// See https://drafts.csswg.org/css-values-3/#urls</span>\n","\n","\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-regexp\">/[\"'() \\t\\n]/</span>.test(url) || options.needQuotes) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-string\">\"\\\"\"</span>.concat(url.replace(<span class=\"code-regexp\">/\"/g</span>, <span class=\"code-string\">'\\\\\"'</span>).replace(<span class=\"code-regexp\">/\\n/g</span>, <span class=\"code-string\">'\\\\n'</span>), <span class=\"code-string\">\"\\\"\"</span>);\n","  }\n","\n","  <span class=\"code-keyword\">return</span> url;\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 144 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, __webpack_exports__, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","__webpack_require__.r(__webpack_exports__);\n","<span class=\"code-comment\">/* harmony default export */</span> __webpack_exports__[<span class=\"code-string\">\"default\"</span>] = (<span class=\"code-string\">\"data:font/woff;base64,\"</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 145 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> api = __webpack_require__(<span class=\"code-number\">20</span>);\n","            <span class=\"code-keyword\">var</span> content = __webpack_require__(<span class=\"code-number\">146</span>);\n","\n","            content = content.__esModule ? content.default : content;\n","\n","            <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> content === <span class=\"code-string\">'string'</span>) {\n","              content = [[<span class=\"code-built_in\">module</span>.i, content, <span class=\"code-string\">''</span>]];\n","            }\n","\n","<span class=\"code-keyword\">var</span> options = {};\n","\n","options.insert = <span class=\"code-string\">\"head\"</span>;\n","options.singleton = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">var</span> update = api(content, options);\n","\n","\n","\n","<span class=\"code-built_in\">module</span>.exports = content.locals || {};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 146 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// Imports</span>\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_API_IMPORT___ = __webpack_require__(<span class=\"code-number\">21</span>);\n","exports = ___CSS_LOADER_API_IMPORT___(<span class=\"code-literal\">false</span>);\n","<span class=\"code-comment\">// Module</span>\n","exports.push([<span class=\"code-built_in\">module</span>.i, <span class=\"code-string\">\".w-e-toolbar {\\n  display: flex;\\n  padding: 0 6px;\\n  flex-wrap: wrap;\\n  position: relative;\\n  /* \u5355\u4E2A\u83DC\u5355 */\\n}\\n.w-e-toolbar .w-e-menu {\\n  position: relative;\\n  display: flex;\\n  width: 40px;\\n  height: 40px;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n  cursor: pointer;\\n}\\n.w-e-toolbar .w-e-menu i {\\n  color: #999;\\n}\\n.w-e-toolbar .w-e-menu:hover {\\n  background-color: #F6F6F6;\\n}\\n.w-e-toolbar .w-e-menu:hover i {\\n  color: #333;\\n}\\n.w-e-toolbar .w-e-active i {\\n  color: #1e88e5;\\n}\\n.w-e-toolbar .w-e-active:hover i {\\n  color: #1e88e5;\\n}\\n\"</span>, <span class=\"code-string\">\"\"</span>]);\n","<span class=\"code-comment\">// Exports</span>\n","<span class=\"code-built_in\">module</span>.exports = exports;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 147 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> api = __webpack_require__(<span class=\"code-number\">20</span>);\n","            <span class=\"code-keyword\">var</span> content = __webpack_require__(<span class=\"code-number\">148</span>);\n","\n","            content = content.__esModule ? content.default : content;\n","\n","            <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> content === <span class=\"code-string\">'string'</span>) {\n","              content = [[<span class=\"code-built_in\">module</span>.i, content, <span class=\"code-string\">''</span>]];\n","            }\n","\n","<span class=\"code-keyword\">var</span> options = {};\n","\n","options.insert = <span class=\"code-string\">\"head\"</span>;\n","options.singleton = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">var</span> update = api(content, options);\n","\n","\n","\n","<span class=\"code-built_in\">module</span>.exports = content.locals || {};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 148 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// Imports</span>\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_API_IMPORT___ = __webpack_require__(<span class=\"code-number\">21</span>);\n","exports = ___CSS_LOADER_API_IMPORT___(<span class=\"code-literal\">false</span>);\n","<span class=\"code-comment\">// Module</span>\n","exports.push([<span class=\"code-built_in\">module</span>.i, <span class=\"code-string\">\".w-e-text-container {\\n  position: relative;\\n}\\n.w-e-text-container .w-e-progress {\\n  position: absolute;\\n  background-color: #1e88e5;\\n  top: 0;\\n  left: 0;\\n  height: 1px;\\n}\\n.w-e-text-container .placeholder {\\n  color: #D4D4D4;\\n  position: absolute;\\n  font-size: 11pt;\\n  line-height: 22px;\\n  left: 10px;\\n  top: 10px;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  z-index: -1;\\n}\\n.w-e-text {\\n  padding: 0 10px;\\n  overflow-y: auto;\\n}\\n.w-e-text p,\\n.w-e-text h1,\\n.w-e-text h2,\\n.w-e-text h3,\\n.w-e-text h4,\\n.w-e-text h5,\\n.w-e-text table,\\n.w-e-text pre {\\n  margin: 10px 0;\\n  line-height: 1.5;\\n}\\n.w-e-text ul,\\n.w-e-text ol {\\n  margin: 10px 0 10px 20px;\\n}\\n.w-e-text blockquote {\\n  display: block;\\n  border-left: 8px solid #d0e5f2;\\n  padding: 5px 10px;\\n  margin: 10px 0;\\n  line-height: 1.4;\\n  font-size: 100%;\\n  background-color: #f1f1f1;\\n}\\n.w-e-text code {\\n  display: inline-block;\\n  background-color: #f1f1f1;\\n  border-radius: 3px;\\n  padding: 3px 5px;\\n  margin: 0 3px;\\n}\\n.w-e-text pre code {\\n  display: block;\\n}\\n.w-e-text table {\\n  border-top: 1px solid #ccc;\\n  border-left: 1px solid #ccc;\\n}\\n.w-e-text table td,\\n.w-e-text table th {\\n  border-bottom: 1px solid #ccc;\\n  border-right: 1px solid #ccc;\\n  padding: 3px 5px;\\n  min-height: 30px;\\n}\\n.w-e-text table th {\\n  border-bottom: 2px solid #ccc;\\n  text-align: center;\\n  background-color: #f1f1f1;\\n}\\n.w-e-text:focus {\\n  outline: none;\\n}\\n.w-e-text img {\\n  cursor: pointer;\\n}\\n.w-e-text img:hover {\\n  box-shadow: 0 0 5px #333;\\n}\\n.w-e-text .w-e-todo {\\n  margin: 0 0 0 20px;\\n}\\n.w-e-text .w-e-todo li {\\n  list-style: none;\\n  font-size: 1em;\\n}\\n.w-e-text .w-e-todo li span:nth-child(1) {\\n  position: relative;\\n  left: -18px;\\n}\\n.w-e-text .w-e-todo li span:nth-child(1) input {\\n  position: absolute;\\n  top: 0.3em;\\n  margin-right: 3px;\\n}\\n.w-e-tooltip {\\n  position: absolute;\\n  display: flex;\\n  color: #f1f1f1;\\n  background-color: rgba(0, 0, 0, 0.75);\\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.15);\\n  border-radius: 4px;\\n  padding: 4px 5px 6px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.w-e-tooltip-up::after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 100%;\\n  left: 50%;\\n  margin-left: -5px;\\n  border: 5px solid rgba(0, 0, 0, 0);\\n  border-top-color: rgba(0, 0, 0, 0.73);\\n}\\n.w-e-tooltip-down::after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  bottom: 100%;\\n  left: 50%;\\n  margin-left: -5px;\\n  border: 5px solid rgba(0, 0, 0, 0);\\n  border-bottom-color: rgba(0, 0, 0, 0.73);\\n}\\n.w-e-tooltip-item-wrapper {\\n  cursor: pointer;\\n  font-size: 14px;\\n  margin: 0 5px;\\n}\\n.w-e-tooltip-item-wrapper:hover {\\n  color: #ccc;\\n  text-decoration: underline;\\n}\\n.w-e-menu-tooltip {\\n  position: absolute;\\n  display: flex;\\n  color: #f1f1f1;\\n  background-color: rgba(0, 0, 0, 0.75);\\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.15);\\n  border-radius: 4px;\\n  padding: 4px 5px 6px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.w-e-menu-tooltip-up::after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 100%;\\n  left: 50%;\\n  margin-left: -5px;\\n  border: 5px solid rgba(0, 0, 0, 0);\\n  border-top-color: rgba(0, 0, 0, 0.73);\\n}\\n.w-e-menu-tooltip-item-wrapper {\\n  font-size: 14px;\\n  margin: 0 5px;\\n}\\n\"</span>, <span class=\"code-string\">\"\"</span>]);\n","<span class=\"code-comment\">// Exports</span>\n","<span class=\"code-built_in\">module</span>.exports = exports;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 149 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> api = __webpack_require__(<span class=\"code-number\">20</span>);\n","            <span class=\"code-keyword\">var</span> content = __webpack_require__(<span class=\"code-number\">150</span>);\n","\n","            content = content.__esModule ? content.default : content;\n","\n","            <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> content === <span class=\"code-string\">'string'</span>) {\n","              content = [[<span class=\"code-built_in\">module</span>.i, content, <span class=\"code-string\">''</span>]];\n","            }\n","\n","<span class=\"code-keyword\">var</span> options = {};\n","\n","options.insert = <span class=\"code-string\">\"head\"</span>;\n","options.singleton = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">var</span> update = api(content, options);\n","\n","\n","\n","<span class=\"code-built_in\">module</span>.exports = content.locals || {};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 150 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// Imports</span>\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_API_IMPORT___ = __webpack_require__(<span class=\"code-number\">21</span>);\n","exports = ___CSS_LOADER_API_IMPORT___(<span class=\"code-literal\">false</span>);\n","<span class=\"code-comment\">// Module</span>\n","exports.push([<span class=\"code-built_in\">module</span>.i, <span class=\"code-string\">\".w-e-menu .w-e-panel-container {\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  border: 1px solid #ccc;\\n  border-top: 0;\\n  box-shadow: 1px 1px 2px #ccc;\\n  color: #333;\\n  background-color: #fff;\\n  text-align: left;\\n  /* \u4E3A emotion panel \u5B9A\u5236\u7684\u6837\u5F0F */\\n  /* \u4E0A\u4F20\u56FE\u7247\u7684 panel \u5B9A\u5236\u6837\u5F0F */\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-close {\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  padding: 5px;\\n  margin: 2px 5px 0 0;\\n  cursor: pointer;\\n  color: #999;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-close:hover {\\n  color: #333;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-title {\\n  list-style: none;\\n  display: flex;\\n  font-size: 14px;\\n  margin: 2px 10px 0 10px;\\n  border-bottom: 1px solid #f1f1f1;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-title .w-e-item {\\n  padding: 3px 5px;\\n  color: #999;\\n  cursor: pointer;\\n  margin: 0 3px;\\n  position: relative;\\n  top: 1px;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-title .w-e-active {\\n  color: #333;\\n  border-bottom: 1px solid #333;\\n  cursor: default;\\n  font-weight: 700;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content {\\n  padding: 10px 15px 10px 15px;\\n  font-size: 16px;\\n  /* \u8F93\u5165\u6846\u7684\u6837\u5F0F */\\n  /* \u6309\u94AE\u7684\u6837\u5F0F */\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input:focus,\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content textarea:focus,\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content button:focus {\\n  outline: none;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content textarea {\\n  width: 100%;\\n  border: 1px solid #ccc;\\n  padding: 5px;\\n  margin-top: 10px;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content textarea:focus {\\n  border-color: #1e88e5;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text] {\\n  border: none;\\n  border-bottom: 1px solid #ccc;\\n  font-size: 14px;\\n  height: 20px;\\n  color: #333;\\n  text-align: left;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text].small {\\n  width: 30px;\\n  text-align: center;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text].block {\\n  display: block;\\n  width: 100%;\\n  margin: 10px 0;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {\\n  border-bottom: 2px solid #1e88e5;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {\\n  font-size: 14px;\\n  color: #1e88e5;\\n  border: none;\\n  padding: 5px 10px;\\n  background-color: #fff;\\n  cursor: pointer;\\n  border-radius: 3px;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {\\n  float: left;\\n  margin-right: 10px;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {\\n  float: right;\\n  margin-left: 10px;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {\\n  color: #999;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {\\n  color: #c24f4a;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {\\n  background-color: #f1f1f1;\\n}\\n.w-e-menu .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both;\\n}\\n.w-e-menu .w-e-panel-container .w-e-emoticon-container .w-e-item {\\n  cursor: pointer;\\n  font-size: 18px;\\n  padding: 0 3px;\\n  display: inline-block;\\n}\\n.w-e-menu .w-e-panel-container .w-e-up-img-container {\\n  text-align: center;\\n}\\n.w-e-menu .w-e-panel-container .w-e-up-img-container .w-e-up-btn {\\n  display: inline-block;\\n  color: #999;\\n  cursor: pointer;\\n  font-size: 60px;\\n  line-height: 1;\\n}\\n.w-e-menu .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {\\n  color: #333;\\n}\\n\"</span>, <span class=\"code-string\">\"\"</span>]);\n","<span class=\"code-comment\">// Exports</span>\n","<span class=\"code-built_in\">module</span>.exports = exports;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 151 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> api = __webpack_require__(<span class=\"code-number\">20</span>);\n","            <span class=\"code-keyword\">var</span> content = __webpack_require__(<span class=\"code-number\">152</span>);\n","\n","            content = content.__esModule ? content.default : content;\n","\n","            <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> content === <span class=\"code-string\">'string'</span>) {\n","              content = [[<span class=\"code-built_in\">module</span>.i, content, <span class=\"code-string\">''</span>]];\n","            }\n","\n","<span class=\"code-keyword\">var</span> options = {};\n","\n","options.insert = <span class=\"code-string\">\"head\"</span>;\n","options.singleton = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">var</span> update = api(content, options);\n","\n","\n","\n","<span class=\"code-built_in\">module</span>.exports = content.locals || {};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 152 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// Imports</span>\n","<span class=\"code-keyword\">var</span> ___CSS_LOADER_API_IMPORT___ = __webpack_require__(<span class=\"code-number\">21</span>);\n","exports = ___CSS_LOADER_API_IMPORT___(<span class=\"code-literal\">false</span>);\n","<span class=\"code-comment\">// Module</span>\n","exports.push([<span class=\"code-built_in\">module</span>.i, <span class=\"code-string\">\".w-e-toolbar .w-e-droplist {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  background-color: #fff;\\n  border: 1px solid #f1f1f1;\\n  border-right-color: #ccc;\\n  border-bottom-color: #ccc;\\n}\\n.w-e-toolbar .w-e-droplist .w-e-dp-title {\\n  text-align: center;\\n  color: #999;\\n  line-height: 2;\\n  border-bottom: 1px solid #f1f1f1;\\n  font-size: 13px;\\n}\\n.w-e-toolbar .w-e-droplist ul.w-e-list {\\n  list-style: none;\\n  line-height: 1;\\n}\\n.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {\\n  color: #333;\\n  padding: 5px 0;\\n}\\n.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {\\n  background-color: #f1f1f1;\\n}\\n.w-e-toolbar .w-e-droplist ul.w-e-block {\\n  list-style: none;\\n  text-align: left;\\n  padding: 5px;\\n}\\n.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {\\n  display: inline-block;\\n  padding: 3px 5px;\\n}\\n.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {\\n  background-color: #f1f1f1;\\n}\\n\"</span>, <span class=\"code-string\">\"\"</span>]);\n","<span class=\"code-comment\">// Exports</span>\n","<span class=\"code-built_in\">module</span>.exports = exports;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 153 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description polyfill \u3010\u6CE8\u610F\uFF0Cjs \u8BED\u6CD5\u7684\u517C\u5BB9\uFF0C\u90FD\u901A\u8FC7 babel transform runtime \u652F\u6301\u3011\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _promise = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">154</span>));\n","\n","<span class=\"code-keyword\">if</span> (!Element.prototype.matches) {\n","  Element.prototype.matches = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">s</span>) </span>{\n","    <span class=\"code-keyword\">var</span> matches = <span class=\"code-keyword\">this</span>.ownerDocument.querySelectorAll(s);\n","    <span class=\"code-keyword\">var</span> i = matches.length;\n","\n","    <span class=\"code-keyword\">for</span> (i; i &gt;= <span class=\"code-number\">0</span>; i--) {\n","      <span class=\"code-keyword\">if</span> (matches.item(i) === <span class=\"code-keyword\">this</span>) <span class=\"code-keyword\">break</span>;\n","    }\n","\n","    <span class=\"code-keyword\">return</span> i &gt; <span class=\"code-number\">-1</span>;\n","  };\n","} <span class=\"code-comment\">// \u6709\u7684\u7B2C\u4E09\u65B9\u5E93\u9700\u8981\u539F\u751F Promise \uFF0C\u800C IE11 \u53C8\u6CA1\u6709\u539F\u751F Promise \uFF0C\u5C31\u62A5\u9519</span>\n","\n","\n","<span class=\"code-keyword\">if</span> (!<span class=\"code-built_in\">window</span>.Promise) {\n","  <span class=\"code-built_in\">window</span>.Promise = _promise[<span class=\"code-string\">\"default\"</span>];\n","}\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 154 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">155</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 155 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">156</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 156 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">157</span>);\n","__webpack_require__(<span class=\"code-number\">62</span>);\n","__webpack_require__(<span class=\"code-number\">163</span>);\n","__webpack_require__(<span class=\"code-number\">170</span>);\n","__webpack_require__(<span class=\"code-number\">171</span>);\n","__webpack_require__(<span class=\"code-number\">172</span>);\n","__webpack_require__(<span class=\"code-number\">65</span>);\n","__webpack_require__(<span class=\"code-number\">51</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = path.Promise;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 157 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> getPrototypeOf = __webpack_require__(<span class=\"code-number\">76</span>);\n","<span class=\"code-keyword\">var</span> setPrototypeOf = __webpack_require__(<span class=\"code-number\">77</span>);\n","<span class=\"code-keyword\">var</span> create = __webpack_require__(<span class=\"code-number\">48</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> createPropertyDescriptor = __webpack_require__(<span class=\"code-number\">35</span>);\n","<span class=\"code-keyword\">var</span> iterate = __webpack_require__(<span class=\"code-number\">39</span>);\n","\n","<span class=\"code-keyword\">var</span> $AggregateError = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">AggregateError</span>(<span class=\"code-params\">errors, message</span>) </span>{\n","  <span class=\"code-keyword\">var</span> that = <span class=\"code-keyword\">this</span>;\n","  <span class=\"code-keyword\">if</span> (!(that <span class=\"code-keyword\">instanceof</span> $AggregateError)) <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> $AggregateError(errors, message);\n","  <span class=\"code-keyword\">if</span> (setPrototypeOf) {\n","    <span class=\"code-comment\">// eslint-disable-next-line unicorn/error-message</span>\n","    that = setPrototypeOf(<span class=\"code-keyword\">new</span> <span class=\"code-built_in\">Error</span>(<span class=\"code-literal\">undefined</span>), getPrototypeOf(that));\n","  }\n","  <span class=\"code-keyword\">if</span> (message !== <span class=\"code-literal\">undefined</span>) createNonEnumerableProperty(that, <span class=\"code-string\">'message'</span>, <span class=\"code-built_in\">String</span>(message));\n","  <span class=\"code-keyword\">var</span> errorsArray = [];\n","  iterate(errors, errorsArray.push, { <span class=\"code-attr\">that</span>: errorsArray });\n","  createNonEnumerableProperty(that, <span class=\"code-string\">'errors'</span>, errorsArray);\n","  <span class=\"code-keyword\">return</span> that;\n","};\n","\n","$AggregateError.prototype = create(<span class=\"code-built_in\">Error</span>.prototype, {\n","  <span class=\"code-keyword\">constructor</span>: createPropertyDescriptor(5, $AggregateError),\n","  message: createPropertyDescriptor(5, ''),\n","  name: createPropertyDescriptor(5, 'AggregateError')\n","});\n","\n","// `AggregateError` <span class=\"code-keyword\">constructor</span>\n","// https://tc39.es/ecma262/#sec-aggregate-error-<span class=\"code-keyword\">constructor</span>\n","$({ global: <span class=\"code-literal\">true</span> }, {\n","  AggregateError: $AggregateError\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 158 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">F</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> }\n","  F.prototype.constructor = <span class=\"code-literal\">null</span>;\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>.getPrototypeOf(<span class=\"code-keyword\">new</span> F()) !== F.prototype;\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 159 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!isObject(it) &amp;&amp; it !== <span class=\"code-literal\">null</span>) {\n","    <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">\"Can't set \"</span> + <span class=\"code-built_in\">String</span>(it) + <span class=\"code-string\">' as a prototype'</span>);\n","  } <span class=\"code-keyword\">return</span> it;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 160 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> Iterators = __webpack_require__(<span class=\"code-number\">40</span>);\n","\n","<span class=\"code-keyword\">var</span> ITERATOR = wellKnownSymbol(<span class=\"code-string\">'iterator'</span>);\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","\n","<span class=\"code-comment\">// check on default Array iterator</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> it !== <span class=\"code-literal\">undefined</span> &amp;&amp; (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 161 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">61</span>);\n","<span class=\"code-keyword\">var</span> Iterators = __webpack_require__(<span class=\"code-number\">40</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> ITERATOR = wellKnownSymbol(<span class=\"code-string\">'iterator'</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (it != <span class=\"code-literal\">undefined</span>) <span class=\"code-keyword\">return</span> it[ITERATOR]\n","    || it[<span class=\"code-string\">'@@iterator'</span>]\n","    || Iterators[classof(it)];\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 162 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">iterator</span>) </span>{\n","  <span class=\"code-keyword\">var</span> returnMethod = iterator[<span class=\"code-string\">'return'</span>];\n","  <span class=\"code-keyword\">if</span> (returnMethod !== <span class=\"code-literal\">undefined</span>) {\n","    <span class=\"code-keyword\">return</span> anObject(returnMethod.call(iterator)).value;\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 163 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> IS_PURE = __webpack_require__(<span class=\"code-number\">37</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> getBuiltIn = __webpack_require__(<span class=\"code-number\">28</span>);\n","<span class=\"code-keyword\">var</span> NativePromise = __webpack_require__(<span class=\"code-number\">105</span>);\n","<span class=\"code-keyword\">var</span> redefine = __webpack_require__(<span class=\"code-number\">50</span>);\n","<span class=\"code-keyword\">var</span> redefineAll = __webpack_require__(<span class=\"code-number\">106</span>);\n","<span class=\"code-keyword\">var</span> setToStringTag = __webpack_require__(<span class=\"code-number\">41</span>);\n","<span class=\"code-keyword\">var</span> setSpecies = __webpack_require__(<span class=\"code-number\">107</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> aFunction = __webpack_require__(<span class=\"code-number\">32</span>);\n","<span class=\"code-keyword\">var</span> anInstance = __webpack_require__(<span class=\"code-number\">80</span>);\n","<span class=\"code-keyword\">var</span> inspectSource = __webpack_require__(<span class=\"code-number\">108</span>);\n","<span class=\"code-keyword\">var</span> iterate = __webpack_require__(<span class=\"code-number\">39</span>);\n","<span class=\"code-keyword\">var</span> checkCorrectnessOfIteration = __webpack_require__(<span class=\"code-number\">165</span>);\n","<span class=\"code-keyword\">var</span> speciesConstructor = __webpack_require__(<span class=\"code-number\">109</span>);\n","<span class=\"code-keyword\">var</span> task = __webpack_require__(<span class=\"code-number\">110</span>).set;\n","<span class=\"code-keyword\">var</span> microtask = __webpack_require__(<span class=\"code-number\">166</span>);\n","<span class=\"code-keyword\">var</span> promiseResolve = __webpack_require__(<span class=\"code-number\">112</span>);\n","<span class=\"code-keyword\">var</span> hostReportErrors = __webpack_require__(<span class=\"code-number\">168</span>);\n","<span class=\"code-keyword\">var</span> newPromiseCapabilityModule = __webpack_require__(<span class=\"code-number\">64</span>);\n","<span class=\"code-keyword\">var</span> perform = __webpack_require__(<span class=\"code-number\">82</span>);\n","<span class=\"code-keyword\">var</span> InternalStateModule = __webpack_require__(<span class=\"code-number\">42</span>);\n","<span class=\"code-keyword\">var</span> isForced = __webpack_require__(<span class=\"code-number\">101</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> IS_NODE = __webpack_require__(<span class=\"code-number\">81</span>);\n","<span class=\"code-keyword\">var</span> V8_VERSION = __webpack_require__(<span class=\"code-number\">83</span>);\n","\n","<span class=\"code-keyword\">var</span> SPECIES = wellKnownSymbol(<span class=\"code-string\">'species'</span>);\n","<span class=\"code-keyword\">var</span> PROMISE = <span class=\"code-string\">'Promise'</span>;\n","<span class=\"code-keyword\">var</span> getInternalState = InternalStateModule.get;\n","<span class=\"code-keyword\">var</span> setInternalState = InternalStateModule.set;\n","<span class=\"code-keyword\">var</span> getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\n","<span class=\"code-keyword\">var</span> PromiseConstructor = NativePromise;\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">TypeError</span> = global.TypeError;\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">document</span> = global.document;\n","<span class=\"code-keyword\">var</span> process = global.process;\n","<span class=\"code-keyword\">var</span> $fetch = getBuiltIn(<span class=\"code-string\">'fetch'</span>);\n","<span class=\"code-keyword\">var</span> newPromiseCapability = newPromiseCapabilityModule.f;\n","<span class=\"code-keyword\">var</span> newGenericPromiseCapability = newPromiseCapability;\n","<span class=\"code-keyword\">var</span> DISPATCH_EVENT = !!(<span class=\"code-built_in\">document</span> &amp;&amp; <span class=\"code-built_in\">document</span>.createEvent &amp;&amp; global.dispatchEvent);\n","<span class=\"code-keyword\">var</span> NATIVE_REJECTION_EVENT = <span class=\"code-keyword\">typeof</span> PromiseRejectionEvent == <span class=\"code-string\">'function'</span>;\n","<span class=\"code-keyword\">var</span> UNHANDLED_REJECTION = <span class=\"code-string\">'unhandledrejection'</span>;\n","<span class=\"code-keyword\">var</span> REJECTION_HANDLED = <span class=\"code-string\">'rejectionhandled'</span>;\n","<span class=\"code-keyword\">var</span> PENDING = <span class=\"code-number\">0</span>;\n","<span class=\"code-keyword\">var</span> FULFILLED = <span class=\"code-number\">1</span>;\n","<span class=\"code-keyword\">var</span> REJECTED = <span class=\"code-number\">2</span>;\n","<span class=\"code-keyword\">var</span> HANDLED = <span class=\"code-number\">1</span>;\n","<span class=\"code-keyword\">var</span> UNHANDLED = <span class=\"code-number\">2</span>;\n","<span class=\"code-keyword\">var</span> Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n","\n","<span class=\"code-keyword\">var</span> FORCED = isForced(PROMISE, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== <span class=\"code-built_in\">String</span>(PromiseConstructor);\n","  <span class=\"code-keyword\">if</span> (!GLOBAL_CORE_JS_PROMISE) {\n","    <span class=\"code-comment\">// V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables</span>\n","    <span class=\"code-comment\">// https://bugs.chromium.org/p/chromium/issues/detail?id=830565</span>\n","    <span class=\"code-comment\">// We can't detect it synchronously, so just check versions</span>\n","    <span class=\"code-keyword\">if</span> (V8_VERSION === <span class=\"code-number\">66</span>) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","    <span class=\"code-comment\">// Unhandled rejections tracking support, NodeJS Promise without it fails @@species test</span>\n","    <span class=\"code-keyword\">if</span> (!IS_NODE &amp;&amp; !NATIVE_REJECTION_EVENT) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  }\n","  <span class=\"code-comment\">// We need Promise#finally in the pure version for preventing prototype pollution</span>\n","  <span class=\"code-keyword\">if</span> (IS_PURE &amp;&amp; !PromiseConstructor.prototype[<span class=\"code-string\">'finally'</span>]) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  <span class=\"code-comment\">// We can't use @@species feature detection in V8 since it causes</span>\n","  <span class=\"code-comment\">// deoptimization and performance degradation</span>\n","  <span class=\"code-comment\">// https://github.com/zloirock/core-js/issues/679</span>\n","  <span class=\"code-keyword\">if</span> (V8_VERSION &gt;= <span class=\"code-number\">51</span> &amp;&amp; <span class=\"code-regexp\">/native code/</span>.test(PromiseConstructor)) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  <span class=\"code-comment\">// Detect correctness of subclassing with @@species support</span>\n","  <span class=\"code-keyword\">var</span> promise = PromiseConstructor.resolve(<span class=\"code-number\">1</span>);\n","  <span class=\"code-keyword\">var</span> FakePromise = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">exec</span>) </span>{\n","    exec(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> }, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> });\n","  };\n","  <span class=\"code-keyword\">var</span> <span class=\"code-keyword\">constructor</span> = promise.<span class=\"code-keyword\">constructor</span> = {};\n","  <span class=\"code-keyword\">constructor</span>[SPECIES] = FakePromise;\n","  return !(promise.then(function () { <span class=\"code-comment\">/* empty */</span> }) <span class=\"code-keyword\">instanceof</span> FakePromise);\n","});\n","\n","<span class=\"code-keyword\">var</span> INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">iterable</span>) </span>{\n","  PromiseConstructor.all(iterable)[<span class=\"code-string\">'catch'</span>](<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> });\n","});\n","\n","<span class=\"code-comment\">// helpers</span>\n","<span class=\"code-keyword\">var</span> isThenable = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> then;\n","  <span class=\"code-keyword\">return</span> isObject(it) &amp;&amp; <span class=\"code-keyword\">typeof</span> (then = it.then) == <span class=\"code-string\">'function'</span> ? then : <span class=\"code-literal\">false</span>;\n","};\n","\n","<span class=\"code-keyword\">var</span> notify = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">state, isReject</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (state.notified) <span class=\"code-keyword\">return</span>;\n","  state.notified = <span class=\"code-literal\">true</span>;\n","  <span class=\"code-keyword\">var</span> chain = state.reactions;\n","  microtask(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> value = state.value;\n","    <span class=\"code-keyword\">var</span> ok = state.state == FULFILLED;\n","    <span class=\"code-keyword\">var</span> index = <span class=\"code-number\">0</span>;\n","    <span class=\"code-comment\">// variable length - can't use forEach</span>\n","    <span class=\"code-keyword\">while</span> (chain.length &gt; index) {\n","      <span class=\"code-keyword\">var</span> reaction = chain[index++];\n","      <span class=\"code-keyword\">var</span> handler = ok ? reaction.ok : reaction.fail;\n","      <span class=\"code-keyword\">var</span> resolve = reaction.resolve;\n","      <span class=\"code-keyword\">var</span> reject = reaction.reject;\n","      <span class=\"code-keyword\">var</span> domain = reaction.domain;\n","      <span class=\"code-keyword\">var</span> result, then, exited;\n","      <span class=\"code-keyword\">try</span> {\n","        <span class=\"code-keyword\">if</span> (handler) {\n","          <span class=\"code-keyword\">if</span> (!ok) {\n","            <span class=\"code-keyword\">if</span> (state.rejection === UNHANDLED) onHandleUnhandled(state);\n","            state.rejection = HANDLED;\n","          }\n","          <span class=\"code-keyword\">if</span> (handler === <span class=\"code-literal\">true</span>) result = value;\n","          <span class=\"code-keyword\">else</span> {\n","            <span class=\"code-keyword\">if</span> (domain) domain.enter();\n","            result = handler(value); <span class=\"code-comment\">// can throw</span>\n","            <span class=\"code-keyword\">if</span> (domain) {\n","              domain.exit();\n","              exited = <span class=\"code-literal\">true</span>;\n","            }\n","          }\n","          <span class=\"code-keyword\">if</span> (result === reaction.promise) {\n","            reject(<span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">'Promise-chain cycle'</span>));\n","          } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (then = isThenable(result)) {\n","            then.call(result, resolve, reject);\n","          } <span class=\"code-keyword\">else</span> resolve(result);\n","        } <span class=\"code-keyword\">else</span> reject(value);\n","      } <span class=\"code-keyword\">catch</span> (error) {\n","        <span class=\"code-keyword\">if</span> (domain &amp;&amp; !exited) domain.exit();\n","        reject(error);\n","      }\n","    }\n","    state.reactions = [];\n","    state.notified = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">if</span> (isReject &amp;&amp; !state.rejection) onUnhandled(state);\n","  });\n","};\n","\n","<span class=\"code-keyword\">var</span> dispatchEvent = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">name, promise, reason</span>) </span>{\n","  <span class=\"code-keyword\">var</span> event, handler;\n","  <span class=\"code-keyword\">if</span> (DISPATCH_EVENT) {\n","    event = <span class=\"code-built_in\">document</span>.createEvent(<span class=\"code-string\">'Event'</span>);\n","    event.promise = promise;\n","    event.reason = reason;\n","    event.initEvent(name, <span class=\"code-literal\">false</span>, <span class=\"code-literal\">true</span>);\n","    global.dispatchEvent(event);\n","  } <span class=\"code-keyword\">else</span> event = { <span class=\"code-attr\">promise</span>: promise, <span class=\"code-attr\">reason</span>: reason };\n","  <span class=\"code-keyword\">if</span> (!NATIVE_REJECTION_EVENT &amp;&amp; (handler = global[<span class=\"code-string\">'on'</span> + name])) handler(event);\n","  <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (name === UNHANDLED_REJECTION) hostReportErrors(<span class=\"code-string\">'Unhandled promise rejection'</span>, reason);\n","};\n","\n","<span class=\"code-keyword\">var</span> onUnhandled = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">state</span>) </span>{\n","  task.call(global, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> promise = state.facade;\n","    <span class=\"code-keyword\">var</span> value = state.value;\n","    <span class=\"code-keyword\">var</span> IS_UNHANDLED = isUnhandled(state);\n","    <span class=\"code-keyword\">var</span> result;\n","    <span class=\"code-keyword\">if</span> (IS_UNHANDLED) {\n","      result = perform(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        <span class=\"code-keyword\">if</span> (IS_NODE) {\n","          process.emit(<span class=\"code-string\">'unhandledRejection'</span>, value, promise);\n","        } <span class=\"code-keyword\">else</span> dispatchEvent(UNHANDLED_REJECTION, promise, value);\n","      });\n","      <span class=\"code-comment\">// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should</span>\n","      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n","      <span class=\"code-keyword\">if</span> (result.error) <span class=\"code-keyword\">throw</span> result.value;\n","    }\n","  });\n","};\n","\n","<span class=\"code-keyword\">var</span> isUnhandled = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">state</span>) </span>{\n","  <span class=\"code-keyword\">return</span> state.rejection !== HANDLED &amp;&amp; !state.parent;\n","};\n","\n","<span class=\"code-keyword\">var</span> onHandleUnhandled = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">state</span>) </span>{\n","  task.call(global, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> promise = state.facade;\n","    <span class=\"code-keyword\">if</span> (IS_NODE) {\n","      process.emit(<span class=\"code-string\">'rejectionHandled'</span>, promise);\n","    } <span class=\"code-keyword\">else</span> dispatchEvent(REJECTION_HANDLED, promise, state.value);\n","  });\n","};\n","\n","<span class=\"code-keyword\">var</span> bind = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn, state, unwrap</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">value</span>) </span>{\n","    fn(state, value, unwrap);\n","  };\n","};\n","\n","<span class=\"code-keyword\">var</span> internalReject = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">state, value, unwrap</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (state.done) <span class=\"code-keyword\">return</span>;\n","  state.done = <span class=\"code-literal\">true</span>;\n","  <span class=\"code-keyword\">if</span> (unwrap) state = unwrap;\n","  state.value = value;\n","  state.state = REJECTED;\n","  notify(state, <span class=\"code-literal\">true</span>);\n","};\n","\n","<span class=\"code-keyword\">var</span> internalResolve = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">state, value, unwrap</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (state.done) <span class=\"code-keyword\">return</span>;\n","  state.done = <span class=\"code-literal\">true</span>;\n","  <span class=\"code-keyword\">if</span> (unwrap) state = unwrap;\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">if</span> (state.facade === value) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">\"Promise can't be resolved itself\"</span>);\n","    <span class=\"code-keyword\">var</span> then = isThenable(value);\n","    <span class=\"code-keyword\">if</span> (then) {\n","      microtask(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","        <span class=\"code-keyword\">var</span> wrapper = { <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","        <span class=\"code-keyword\">try</span> {\n","          then.call(value,\n","            bind(internalResolve, wrapper, state),\n","            bind(internalReject, wrapper, state)\n","          );\n","        } <span class=\"code-keyword\">catch</span> (error) {\n","          internalReject(wrapper, error, state);\n","        }\n","      });\n","    } <span class=\"code-keyword\">else</span> {\n","      state.value = value;\n","      state.state = FULFILLED;\n","      notify(state, <span class=\"code-literal\">false</span>);\n","    }\n","  } <span class=\"code-keyword\">catch</span> (error) {\n","    internalReject({ <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> }, error, state);\n","  }\n","};\n","\n","<span class=\"code-comment\">// constructor polyfill</span>\n","<span class=\"code-keyword\">if</span> (FORCED) {\n","  <span class=\"code-comment\">// 25.4.3.1 Promise(executor)</span>\n","  PromiseConstructor = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Promise</span>(<span class=\"code-params\">executor</span>) </span>{\n","    anInstance(<span class=\"code-keyword\">this</span>, PromiseConstructor, PROMISE);\n","    aFunction(executor);\n","    Internal.call(<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">var</span> state = getInternalState(<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">try</span> {\n","      executor(bind(internalResolve, state), bind(internalReject, state));\n","    } <span class=\"code-keyword\">catch</span> (error) {\n","      internalReject(state, error);\n","    }\n","  };\n","  <span class=\"code-comment\">// eslint-disable-next-line no-unused-vars</span>\n","  Internal = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Promise</span>(<span class=\"code-params\">executor</span>) </span>{\n","    setInternalState(<span class=\"code-keyword\">this</span>, {\n","      type: PROMISE,\n","      done: <span class=\"code-literal\">false</span>,\n","      notified: <span class=\"code-literal\">false</span>,\n","      parent: <span class=\"code-literal\">false</span>,\n","      reactions: [],\n","      rejection: <span class=\"code-literal\">false</span>,\n","      state: PENDING,\n","      value: <span class=\"code-literal\">undefined</span>\n","    });\n","  };\n","  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n","    <span class=\"code-comment\">// `Promise.prototype.then` method</span>\n","    <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.prototype.then</span>\n","    then: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">then</span>(<span class=\"code-params\">onFulfilled, onRejected</span>) </span>{\n","      <span class=\"code-keyword\">var</span> state = getInternalPromiseState(<span class=\"code-keyword\">this</span>);\n","      <span class=\"code-keyword\">var</span> reaction = newPromiseCapability(speciesConstructor(<span class=\"code-keyword\">this</span>, PromiseConstructor));\n","      reaction.ok = <span class=\"code-keyword\">typeof</span> onFulfilled == <span class=\"code-string\">'function'</span> ? onFulfilled : <span class=\"code-literal\">true</span>;\n","      reaction.fail = <span class=\"code-keyword\">typeof</span> onRejected == <span class=\"code-string\">'function'</span> &amp;&amp; onRejected;\n","      reaction.domain = IS_NODE ? process.domain : <span class=\"code-literal\">undefined</span>;\n","      state.parent = <span class=\"code-literal\">true</span>;\n","      state.reactions.push(reaction);\n","      <span class=\"code-keyword\">if</span> (state.state != PENDING) notify(state, <span class=\"code-literal\">false</span>);\n","      <span class=\"code-keyword\">return</span> reaction.promise;\n","    },\n","    <span class=\"code-comment\">// `Promise.prototype.catch` method</span>\n","    <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.prototype.catch</span>\n","    <span class=\"code-string\">'catch'</span>: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">onRejected</span>) </span>{\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.then(<span class=\"code-literal\">undefined</span>, onRejected);\n","    }\n","  });\n","  OwnPromiseCapability = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> promise = <span class=\"code-keyword\">new</span> Internal();\n","    <span class=\"code-keyword\">var</span> state = getInternalState(promise);\n","    <span class=\"code-keyword\">this</span>.promise = promise;\n","    <span class=\"code-keyword\">this</span>.resolve = bind(internalResolve, state);\n","    <span class=\"code-keyword\">this</span>.reject = bind(internalReject, state);\n","  };\n","  newPromiseCapabilityModule.f = newPromiseCapability = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">C</span>) </span>{\n","    <span class=\"code-keyword\">return</span> C === PromiseConstructor || C === PromiseWrapper\n","      ? <span class=\"code-keyword\">new</span> OwnPromiseCapability(C)\n","      : newGenericPromiseCapability(C);\n","  };\n","\n","  <span class=\"code-keyword\">if</span> (!IS_PURE &amp;&amp; <span class=\"code-keyword\">typeof</span> NativePromise == <span class=\"code-string\">'function'</span>) {\n","    nativeThen = NativePromise.prototype.then;\n","\n","    <span class=\"code-comment\">// wrap native Promise#then for native async functions</span>\n","    redefine(NativePromise.prototype, <span class=\"code-string\">'then'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">then</span>(<span class=\"code-params\">onFulfilled, onRejected</span>) </span>{\n","      <span class=\"code-keyword\">var</span> that = <span class=\"code-keyword\">this</span>;\n","      <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">new</span> PromiseConstructor(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">resolve, reject</span>) </span>{\n","        nativeThen.call(that, resolve, reject);\n","      }).then(onFulfilled, onRejected);\n","    <span class=\"code-comment\">// https://github.com/zloirock/core-js/issues/640</span>\n","    }, { <span class=\"code-attr\">unsafe</span>: <span class=\"code-literal\">true</span> });\n","\n","    <span class=\"code-comment\">// wrap fetch result</span>\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> $fetch == <span class=\"code-string\">'function'</span>) $({ <span class=\"code-attr\">global</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">enumerable</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: <span class=\"code-literal\">true</span> }, {\n","      <span class=\"code-comment\">// eslint-disable-next-line no-unused-vars</span>\n","      fetch: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">fetch</span>(<span class=\"code-params\">input <span class=\"code-regexp\">/* , init */</span></span>) </span>{\n","        <span class=\"code-keyword\">return</span> promiseResolve(PromiseConstructor, $fetch.apply(global, <span class=\"code-built_in\">arguments</span>));\n","      }\n","    });\n","  }\n","}\n","\n","$({ <span class=\"code-attr\">global</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">wrap</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: FORCED }, {\n","  <span class=\"code-built_in\">Promise</span>: PromiseConstructor\n","});\n","\n","setToStringTag(PromiseConstructor, PROMISE, <span class=\"code-literal\">false</span>, <span class=\"code-literal\">true</span>);\n","setSpecies(PROMISE);\n","\n","PromiseWrapper = getBuiltIn(PROMISE);\n","\n","<span class=\"code-comment\">// statics</span>\n","$({ <span class=\"code-attr\">target</span>: PROMISE, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: FORCED }, {\n","  <span class=\"code-comment\">// `Promise.reject` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.reject</span>\n","  reject: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">reject</span>(<span class=\"code-params\">r</span>) </span>{\n","    <span class=\"code-keyword\">var</span> capability = newPromiseCapability(<span class=\"code-keyword\">this</span>);\n","    capability.reject.call(<span class=\"code-literal\">undefined</span>, r);\n","    <span class=\"code-keyword\">return</span> capability.promise;\n","  }\n","});\n","\n","$({ <span class=\"code-attr\">target</span>: PROMISE, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: IS_PURE || FORCED }, {\n","  <span class=\"code-comment\">// `Promise.resolve` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.resolve</span>\n","  resolve: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">resolve</span>(<span class=\"code-params\">x</span>) </span>{\n","    <span class=\"code-keyword\">return</span> promiseResolve(IS_PURE &amp;&amp; <span class=\"code-keyword\">this</span> === PromiseWrapper ? PromiseConstructor : <span class=\"code-keyword\">this</span>, x);\n","  }\n","});\n","\n","$({ <span class=\"code-attr\">target</span>: PROMISE, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: INCORRECT_ITERATION }, {\n","  <span class=\"code-comment\">// `Promise.all` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.all</span>\n","  all: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">all</span>(<span class=\"code-params\">iterable</span>) </span>{\n","    <span class=\"code-keyword\">var</span> C = <span class=\"code-keyword\">this</span>;\n","    <span class=\"code-keyword\">var</span> capability = newPromiseCapability(C);\n","    <span class=\"code-keyword\">var</span> resolve = capability.resolve;\n","    <span class=\"code-keyword\">var</span> reject = capability.reject;\n","    <span class=\"code-keyword\">var</span> result = perform(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">var</span> $promiseResolve = aFunction(C.resolve);\n","      <span class=\"code-keyword\">var</span> values = [];\n","      <span class=\"code-keyword\">var</span> counter = <span class=\"code-number\">0</span>;\n","      <span class=\"code-keyword\">var</span> remaining = <span class=\"code-number\">1</span>;\n","      iterate(iterable, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">promise</span>) </span>{\n","        <span class=\"code-keyword\">var</span> index = counter++;\n","        <span class=\"code-keyword\">var</span> alreadyCalled = <span class=\"code-literal\">false</span>;\n","        values.push(<span class=\"code-literal\">undefined</span>);\n","        remaining++;\n","        $promiseResolve.call(C, promise).then(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">value</span>) </span>{\n","          <span class=\"code-keyword\">if</span> (alreadyCalled) <span class=\"code-keyword\">return</span>;\n","          alreadyCalled = <span class=\"code-literal\">true</span>;\n","          values[index] = value;\n","          --remaining || resolve(values);\n","        }, reject);\n","      });\n","      --remaining || resolve(values);\n","    });\n","    <span class=\"code-keyword\">if</span> (result.error) reject(result.value);\n","    <span class=\"code-keyword\">return</span> capability.promise;\n","  },\n","  <span class=\"code-comment\">// `Promise.race` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.race</span>\n","  race: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">race</span>(<span class=\"code-params\">iterable</span>) </span>{\n","    <span class=\"code-keyword\">var</span> C = <span class=\"code-keyword\">this</span>;\n","    <span class=\"code-keyword\">var</span> capability = newPromiseCapability(C);\n","    <span class=\"code-keyword\">var</span> reject = capability.reject;\n","    <span class=\"code-keyword\">var</span> result = perform(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">var</span> $promiseResolve = aFunction(C.resolve);\n","      iterate(iterable, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">promise</span>) </span>{\n","        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n","      });\n","    });\n","    <span class=\"code-keyword\">if</span> (result.error) reject(result.value);\n","    <span class=\"code-keyword\">return</span> capability.promise;\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 164 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> TO_STRING_TAG_SUPPORT = __webpack_require__(<span class=\"code-number\">79</span>);\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">61</span>);\n","\n","<span class=\"code-comment\">// `Object.prototype.toString` method implementation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.prototype.tostring</span>\n","<span class=\"code-built_in\">module</span>.exports = TO_STRING_TAG_SUPPORT ? {}.toString : <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">toString</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-string\">'[object '</span> + classof(<span class=\"code-keyword\">this</span>) + <span class=\"code-string\">']'</span>;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 165 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> ITERATOR = wellKnownSymbol(<span class=\"code-string\">'iterator'</span>);\n","<span class=\"code-keyword\">var</span> SAFE_CLOSING = <span class=\"code-literal\">false</span>;\n","\n","<span class=\"code-keyword\">try</span> {\n","  <span class=\"code-keyword\">var</span> called = <span class=\"code-number\">0</span>;\n","  <span class=\"code-keyword\">var</span> iteratorWithReturn = {\n","    next: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">done</span>: !!called++ };\n","    },\n","    <span class=\"code-string\">'return'</span>: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      SAFE_CLOSING = <span class=\"code-literal\">true</span>;\n","    }\n","  };\n","  iteratorWithReturn[ITERATOR] = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","  };\n","  <span class=\"code-comment\">// eslint-disable-next-line no-throw-literal</span>\n","  <span class=\"code-built_in\">Array</span>.from(iteratorWithReturn, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">throw</span> <span class=\"code-number\">2</span>; });\n","} <span class=\"code-keyword\">catch</span> (error) { <span class=\"code-comment\">/* empty */</span> }\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">exec, SKIP_CLOSING</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!SKIP_CLOSING &amp;&amp; !SAFE_CLOSING) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">var</span> ITERATION_SUPPORT = <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">var</span> object = {};\n","    object[ITERATOR] = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">return</span> {\n","        next: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","          <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">done</span>: ITERATION_SUPPORT = <span class=\"code-literal\">true</span> };\n","        }\n","      };\n","    };\n","    exec(object);\n","  } <span class=\"code-keyword\">catch</span> (error) { <span class=\"code-comment\">/* empty */</span> }\n","  <span class=\"code-keyword\">return</span> ITERATION_SUPPORT;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 166 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> getOwnPropertyDescriptor = __webpack_require__(<span class=\"code-number\">68</span>).f;\n","<span class=\"code-keyword\">var</span> macrotask = __webpack_require__(<span class=\"code-number\">110</span>).set;\n","<span class=\"code-keyword\">var</span> IS_IOS = __webpack_require__(<span class=\"code-number\">111</span>);\n","<span class=\"code-keyword\">var</span> IS_WEBOS_WEBKIT = __webpack_require__(<span class=\"code-number\">167</span>);\n","<span class=\"code-keyword\">var</span> IS_NODE = __webpack_require__(<span class=\"code-number\">81</span>);\n","\n","<span class=\"code-keyword\">var</span> MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">document</span> = global.document;\n","<span class=\"code-keyword\">var</span> process = global.process;\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">Promise</span> = global.Promise;\n","<span class=\"code-comment\">// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`</span>\n","<span class=\"code-keyword\">var</span> queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, <span class=\"code-string\">'queueMicrotask'</span>);\n","<span class=\"code-keyword\">var</span> queueMicrotask = queueMicrotaskDescriptor &amp;&amp; queueMicrotaskDescriptor.value;\n","\n","<span class=\"code-keyword\">var</span> flush, head, last, notify, toggle, node, promise, then;\n","\n","<span class=\"code-comment\">// modern engines have queueMicrotask method</span>\n","<span class=\"code-keyword\">if</span> (!queueMicrotask) {\n","  flush = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> parent, fn;\n","    <span class=\"code-keyword\">if</span> (IS_NODE &amp;&amp; (parent = process.domain)) parent.exit();\n","    <span class=\"code-keyword\">while</span> (head) {\n","      fn = head.fn;\n","      head = head.next;\n","      <span class=\"code-keyword\">try</span> {\n","        fn();\n","      } <span class=\"code-keyword\">catch</span> (error) {\n","        <span class=\"code-keyword\">if</span> (head) notify();\n","        <span class=\"code-keyword\">else</span> last = <span class=\"code-literal\">undefined</span>;\n","        <span class=\"code-keyword\">throw</span> error;\n","      }\n","    } last = <span class=\"code-literal\">undefined</span>;\n","    <span class=\"code-keyword\">if</span> (parent) parent.enter();\n","  };\n","\n","  <span class=\"code-comment\">// browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339</span>\n","  <span class=\"code-comment\">// also except WebOS Webkit https://github.com/zloirock/core-js/issues/898</span>\n","  <span class=\"code-keyword\">if</span> (!IS_IOS &amp;&amp; !IS_NODE &amp;&amp; !IS_WEBOS_WEBKIT &amp;&amp; MutationObserver &amp;&amp; <span class=\"code-built_in\">document</span>) {\n","    toggle = <span class=\"code-literal\">true</span>;\n","    node = <span class=\"code-built_in\">document</span>.createTextNode(<span class=\"code-string\">''</span>);\n","    <span class=\"code-keyword\">new</span> MutationObserver(flush).observe(node, { <span class=\"code-attr\">characterData</span>: <span class=\"code-literal\">true</span> });\n","    notify = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      node.data = toggle = !toggle;\n","    };\n","  <span class=\"code-comment\">// environments with maybe non-completely correct, but existent Promise</span>\n","  } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">Promise</span> &amp;&amp; <span class=\"code-built_in\">Promise</span>.resolve) {\n","    <span class=\"code-comment\">// Promise.resolve without an argument throws an error in LG WebOS 2</span>\n","    promise = <span class=\"code-built_in\">Promise</span>.resolve(<span class=\"code-literal\">undefined</span>);\n","    then = promise.then;\n","    notify = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      then.call(promise, flush);\n","    };\n","  <span class=\"code-comment\">// Node.js without promises</span>\n","  } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (IS_NODE) {\n","    notify = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      process.nextTick(flush);\n","    };\n","  <span class=\"code-comment\">// for other environments - macrotask based on:</span>\n","  <span class=\"code-comment\">// - setImmediate</span>\n","  <span class=\"code-comment\">// - MessageChannel</span>\n","  <span class=\"code-comment\">// - window.postMessag</span>\n","  <span class=\"code-comment\">// - onreadystatechange</span>\n","  <span class=\"code-comment\">// - setTimeout</span>\n","  } <span class=\"code-keyword\">else</span> {\n","    notify = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-comment\">// strange IE + webpack dev server bug - use .call(global)</span>\n","      macrotask.call(global, flush);\n","    };\n","  }\n","}\n","\n","<span class=\"code-built_in\">module</span>.exports = queueMicrotask || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","  <span class=\"code-keyword\">var</span> task = { <span class=\"code-attr\">fn</span>: fn, <span class=\"code-attr\">next</span>: <span class=\"code-literal\">undefined</span> };\n","  <span class=\"code-keyword\">if</span> (last) last.next = task;\n","  <span class=\"code-keyword\">if</span> (!head) {\n","    head = task;\n","    notify();\n","  } last = task;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 167 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> userAgent = __webpack_require__(<span class=\"code-number\">63</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-regexp\">/web0s(?!.*chrome)/i</span>.test(userAgent);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 168 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">a, b</span>) </span>{\n","  <span class=\"code-keyword\">var</span> <span class=\"code-built_in\">console</span> = global.console;\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-built_in\">console</span> &amp;&amp; <span class=\"code-built_in\">console</span>.error) {\n","    <span class=\"code-built_in\">arguments</span>.length === <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">console</span>.error(a) : <span class=\"code-built_in\">console</span>.error(a, b);\n","  }\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 169 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> inspectSource = __webpack_require__(<span class=\"code-number\">108</span>);\n","\n","<span class=\"code-keyword\">var</span> <span class=\"code-built_in\">WeakMap</span> = global.WeakMap;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-keyword\">typeof</span> <span class=\"code-built_in\">WeakMap</span> === <span class=\"code-string\">'function'</span> &amp;&amp; <span class=\"code-regexp\">/native code/</span>.test(inspectSource(<span class=\"code-built_in\">WeakMap</span>));\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 170 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> aFunction = __webpack_require__(<span class=\"code-number\">32</span>);\n","<span class=\"code-keyword\">var</span> newPromiseCapabilityModule = __webpack_require__(<span class=\"code-number\">64</span>);\n","<span class=\"code-keyword\">var</span> perform = __webpack_require__(<span class=\"code-number\">82</span>);\n","<span class=\"code-keyword\">var</span> iterate = __webpack_require__(<span class=\"code-number\">39</span>);\n","\n","<span class=\"code-comment\">// `Promise.allSettled` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.allsettled</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Promise'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span> }, {\n","  allSettled: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">allSettled</span>(<span class=\"code-params\">iterable</span>) </span>{\n","    <span class=\"code-keyword\">var</span> C = <span class=\"code-keyword\">this</span>;\n","    <span class=\"code-keyword\">var</span> capability = newPromiseCapabilityModule.f(C);\n","    <span class=\"code-keyword\">var</span> resolve = capability.resolve;\n","    <span class=\"code-keyword\">var</span> reject = capability.reject;\n","    <span class=\"code-keyword\">var</span> result = perform(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">var</span> promiseResolve = aFunction(C.resolve);\n","      <span class=\"code-keyword\">var</span> values = [];\n","      <span class=\"code-keyword\">var</span> counter = <span class=\"code-number\">0</span>;\n","      <span class=\"code-keyword\">var</span> remaining = <span class=\"code-number\">1</span>;\n","      iterate(iterable, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">promise</span>) </span>{\n","        <span class=\"code-keyword\">var</span> index = counter++;\n","        <span class=\"code-keyword\">var</span> alreadyCalled = <span class=\"code-literal\">false</span>;\n","        values.push(<span class=\"code-literal\">undefined</span>);\n","        remaining++;\n","        promiseResolve.call(C, promise).then(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">value</span>) </span>{\n","          <span class=\"code-keyword\">if</span> (alreadyCalled) <span class=\"code-keyword\">return</span>;\n","          alreadyCalled = <span class=\"code-literal\">true</span>;\n","          values[index] = { <span class=\"code-attr\">status</span>: <span class=\"code-string\">'fulfilled'</span>, <span class=\"code-attr\">value</span>: value };\n","          --remaining || resolve(values);\n","        }, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">error</span>) </span>{\n","          <span class=\"code-keyword\">if</span> (alreadyCalled) <span class=\"code-keyword\">return</span>;\n","          alreadyCalled = <span class=\"code-literal\">true</span>;\n","          values[index] = { <span class=\"code-attr\">status</span>: <span class=\"code-string\">'rejected'</span>, <span class=\"code-attr\">reason</span>: error };\n","          --remaining || resolve(values);\n","        });\n","      });\n","      --remaining || resolve(values);\n","    });\n","    <span class=\"code-keyword\">if</span> (result.error) reject(result.value);\n","    <span class=\"code-keyword\">return</span> capability.promise;\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 171 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> aFunction = __webpack_require__(<span class=\"code-number\">32</span>);\n","<span class=\"code-keyword\">var</span> getBuiltIn = __webpack_require__(<span class=\"code-number\">28</span>);\n","<span class=\"code-keyword\">var</span> newPromiseCapabilityModule = __webpack_require__(<span class=\"code-number\">64</span>);\n","<span class=\"code-keyword\">var</span> perform = __webpack_require__(<span class=\"code-number\">82</span>);\n","<span class=\"code-keyword\">var</span> iterate = __webpack_require__(<span class=\"code-number\">39</span>);\n","\n","<span class=\"code-keyword\">var</span> PROMISE_ANY_ERROR = <span class=\"code-string\">'No one promise resolved'</span>;\n","\n","<span class=\"code-comment\">// `Promise.any` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.any</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Promise'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span> }, {\n","  any: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">any</span>(<span class=\"code-params\">iterable</span>) </span>{\n","    <span class=\"code-keyword\">var</span> C = <span class=\"code-keyword\">this</span>;\n","    <span class=\"code-keyword\">var</span> capability = newPromiseCapabilityModule.f(C);\n","    <span class=\"code-keyword\">var</span> resolve = capability.resolve;\n","    <span class=\"code-keyword\">var</span> reject = capability.reject;\n","    <span class=\"code-keyword\">var</span> result = perform(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-keyword\">var</span> promiseResolve = aFunction(C.resolve);\n","      <span class=\"code-keyword\">var</span> errors = [];\n","      <span class=\"code-keyword\">var</span> counter = <span class=\"code-number\">0</span>;\n","      <span class=\"code-keyword\">var</span> remaining = <span class=\"code-number\">1</span>;\n","      <span class=\"code-keyword\">var</span> alreadyResolved = <span class=\"code-literal\">false</span>;\n","      iterate(iterable, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">promise</span>) </span>{\n","        <span class=\"code-keyword\">var</span> index = counter++;\n","        <span class=\"code-keyword\">var</span> alreadyRejected = <span class=\"code-literal\">false</span>;\n","        errors.push(<span class=\"code-literal\">undefined</span>);\n","        remaining++;\n","        promiseResolve.call(C, promise).then(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">value</span>) </span>{\n","          <span class=\"code-keyword\">if</span> (alreadyRejected || alreadyResolved) <span class=\"code-keyword\">return</span>;\n","          alreadyResolved = <span class=\"code-literal\">true</span>;\n","          resolve(value);\n","        }, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">error</span>) </span>{\n","          <span class=\"code-keyword\">if</span> (alreadyRejected || alreadyResolved) <span class=\"code-keyword\">return</span>;\n","          alreadyRejected = <span class=\"code-literal\">true</span>;\n","          errors[index] = error;\n","          --remaining || reject(<span class=\"code-keyword\">new</span> (getBuiltIn(<span class=\"code-string\">'AggregateError'</span>))(errors, PROMISE_ANY_ERROR));\n","        });\n","      });\n","      --remaining || reject(<span class=\"code-keyword\">new</span> (getBuiltIn(<span class=\"code-string\">'AggregateError'</span>))(errors, PROMISE_ANY_ERROR));\n","    });\n","    <span class=\"code-keyword\">if</span> (result.error) reject(result.value);\n","    <span class=\"code-keyword\">return</span> capability.promise;\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 172 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> IS_PURE = __webpack_require__(<span class=\"code-number\">37</span>);\n","<span class=\"code-keyword\">var</span> NativePromise = __webpack_require__(<span class=\"code-number\">105</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> getBuiltIn = __webpack_require__(<span class=\"code-number\">28</span>);\n","<span class=\"code-keyword\">var</span> speciesConstructor = __webpack_require__(<span class=\"code-number\">109</span>);\n","<span class=\"code-keyword\">var</span> promiseResolve = __webpack_require__(<span class=\"code-number\">112</span>);\n","<span class=\"code-keyword\">var</span> redefine = __webpack_require__(<span class=\"code-number\">50</span>);\n","\n","<span class=\"code-comment\">// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829</span>\n","<span class=\"code-keyword\">var</span> NON_GENERIC = !!NativePromise &amp;&amp; fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  NativePromise.prototype[<span class=\"code-string\">'finally'</span>].call({ <span class=\"code-attr\">then</span>: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> } }, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-comment\">/* empty */</span> });\n","});\n","\n","<span class=\"code-comment\">// `Promise.prototype.finally` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-promise.prototype.finally</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Promise'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">real</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: NON_GENERIC }, {\n","  <span class=\"code-string\">'finally'</span>: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">onFinally</span>) </span>{\n","    <span class=\"code-keyword\">var</span> C = speciesConstructor(<span class=\"code-keyword\">this</span>, getBuiltIn(<span class=\"code-string\">'Promise'</span>));\n","    <span class=\"code-keyword\">var</span> isFunction = <span class=\"code-keyword\">typeof</span> onFinally == <span class=\"code-string\">'function'</span>;\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>.then(\n","      isFunction ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">x</span>) </span>{\n","        <span class=\"code-keyword\">return</span> promiseResolve(C, onFinally()).then(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> x; });\n","      } : onFinally,\n","      isFunction ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">e</span>) </span>{\n","        <span class=\"code-keyword\">return</span> promiseResolve(C, onFinally()).then(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">throw</span> e; });\n","      } : onFinally\n","    );\n","  }\n","});\n","\n","<span class=\"code-comment\">// patch native Promise.prototype for native async functions</span>\n","<span class=\"code-keyword\">if</span> (!IS_PURE &amp;&amp; <span class=\"code-keyword\">typeof</span> NativePromise == <span class=\"code-string\">'function'</span> &amp;&amp; !NativePromise.prototype[<span class=\"code-string\">'finally'</span>]) {\n","  redefine(NativePromise.prototype, <span class=\"code-string\">'finally'</span>, getBuiltIn(<span class=\"code-string\">'Promise'</span>).prototype[<span class=\"code-string\">'finally'</span>]);\n","}\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 173 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> toInteger = __webpack_require__(<span class=\"code-number\">58</span>);\n","<span class=\"code-keyword\">var</span> requireObjectCoercible = __webpack_require__(<span class=\"code-number\">46</span>);\n","\n","<span class=\"code-comment\">// `String.prototype.{ codePointAt, at }` methods implementation</span>\n","<span class=\"code-keyword\">var</span> createMethod = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">CONVERT_TO_STRING</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$this, pos</span>) </span>{\n","    <span class=\"code-keyword\">var</span> S = <span class=\"code-built_in\">String</span>(requireObjectCoercible($<span class=\"code-keyword\">this</span>));\n","    <span class=\"code-keyword\">var</span> position = toInteger(pos);\n","    <span class=\"code-keyword\">var</span> size = S.length;\n","    <span class=\"code-keyword\">var</span> first, second;\n","    <span class=\"code-keyword\">if</span> (position &lt; <span class=\"code-number\">0</span> || position &gt;= size) <span class=\"code-keyword\">return</span> CONVERT_TO_STRING ? <span class=\"code-string\">''</span> : <span class=\"code-literal\">undefined</span>;\n","    first = S.charCodeAt(position);\n","    <span class=\"code-keyword\">return</span> first &lt; <span class=\"code-number\">0xD800</span> || first &gt; <span class=\"code-number\">0xDBFF</span> || position + <span class=\"code-number\">1</span> === size\n","      || (second = S.charCodeAt(position + <span class=\"code-number\">1</span>)) &lt; <span class=\"code-number\">0xDC00</span> || second &gt; <span class=\"code-number\">0xDFFF</span>\n","        ? CONVERT_TO_STRING ? S.charAt(position) : first\n","        : CONVERT_TO_STRING ? S.slice(position, position + <span class=\"code-number\">2</span>) : (first - <span class=\"code-number\">0xD800</span> &lt;&lt; <span class=\"code-number\">10</span>) + (second - <span class=\"code-number\">0xDC00</span>) + <span class=\"code-number\">0x10000</span>;\n","  };\n","};\n","\n","<span class=\"code-built_in\">module</span>.exports = {\n","  <span class=\"code-comment\">// `String.prototype.codePointAt` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-string.prototype.codepointat</span>\n","  codeAt: createMethod(<span class=\"code-literal\">false</span>),\n","  <span class=\"code-comment\">// `String.prototype.at` method</span>\n","  <span class=\"code-comment\">// https://github.com/mathiasbynens/String.prototype.at</span>\n","  charAt: createMethod(<span class=\"code-literal\">true</span>)\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 174 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> IteratorPrototype = __webpack_require__(<span class=\"code-number\">113</span>).IteratorPrototype;\n","<span class=\"code-keyword\">var</span> create = __webpack_require__(<span class=\"code-number\">48</span>);\n","<span class=\"code-keyword\">var</span> createPropertyDescriptor = __webpack_require__(<span class=\"code-number\">35</span>);\n","<span class=\"code-keyword\">var</span> setToStringTag = __webpack_require__(<span class=\"code-number\">41</span>);\n","<span class=\"code-keyword\">var</span> Iterators = __webpack_require__(<span class=\"code-number\">40</span>);\n","\n","<span class=\"code-keyword\">var</span> returnThis = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>; };\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">IteratorConstructor, NAME, next</span>) </span>{\n","  <span class=\"code-keyword\">var</span> TO_STRING_TAG = NAME + <span class=\"code-string\">' Iterator'</span>;\n","  IteratorConstructor.prototype = create(IteratorPrototype, { <span class=\"code-attr\">next</span>: createPropertyDescriptor(<span class=\"code-number\">1</span>, next) });\n","  setToStringTag(IteratorConstructor, TO_STRING_TAG, <span class=\"code-literal\">false</span>, <span class=\"code-literal\">true</span>);\n","  Iterators[TO_STRING_TAG] = returnThis;\n","  <span class=\"code-keyword\">return</span> IteratorConstructor;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 175 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> toIndexedObject = __webpack_require__(<span class=\"code-number\">27</span>);\n","<span class=\"code-keyword\">var</span> addToUnscopables = __webpack_require__(<span class=\"code-number\">85</span>);\n","<span class=\"code-keyword\">var</span> Iterators = __webpack_require__(<span class=\"code-number\">40</span>);\n","<span class=\"code-keyword\">var</span> InternalStateModule = __webpack_require__(<span class=\"code-number\">42</span>);\n","<span class=\"code-keyword\">var</span> defineIterator = __webpack_require__(<span class=\"code-number\">84</span>);\n","\n","<span class=\"code-keyword\">var</span> ARRAY_ITERATOR = <span class=\"code-string\">'Array Iterator'</span>;\n","<span class=\"code-keyword\">var</span> setInternalState = InternalStateModule.set;\n","<span class=\"code-keyword\">var</span> getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n","\n","<span class=\"code-comment\">// `Array.prototype.entries` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.entries</span>\n","<span class=\"code-comment\">// `Array.prototype.keys` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.keys</span>\n","<span class=\"code-comment\">// `Array.prototype.values` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.values</span>\n","<span class=\"code-comment\">// `Array.prototype[@@iterator]` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype-@@iterator</span>\n","<span class=\"code-comment\">// `CreateArrayIterator` internal method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-createarrayiterator</span>\n","<span class=\"code-built_in\">module</span>.exports = defineIterator(<span class=\"code-built_in\">Array</span>, <span class=\"code-string\">'Array'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">iterated, kind</span>) </span>{\n","  setInternalState(<span class=\"code-keyword\">this</span>, {\n","    type: ARRAY_ITERATOR,\n","    target: toIndexedObject(iterated), <span class=\"code-comment\">// target</span>\n","    index: <span class=\"code-number\">0</span>,                          <span class=\"code-comment\">// next index</span>\n","    kind: kind                         <span class=\"code-comment\">// kind</span>\n","  });\n","<span class=\"code-comment\">// `%ArrayIteratorPrototype%.next` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next</span>\n","}, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> state = getInternalState(<span class=\"code-keyword\">this</span>);\n","  <span class=\"code-keyword\">var</span> target = state.target;\n","  <span class=\"code-keyword\">var</span> kind = state.kind;\n","  <span class=\"code-keyword\">var</span> index = state.index++;\n","  <span class=\"code-keyword\">if</span> (!target || index &gt;= target.length) {\n","    state.target = <span class=\"code-literal\">undefined</span>;\n","    <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: <span class=\"code-literal\">undefined</span>, <span class=\"code-attr\">done</span>: <span class=\"code-literal\">true</span> };\n","  }\n","  <span class=\"code-keyword\">if</span> (kind == <span class=\"code-string\">'keys'</span>) <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: index, <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","  <span class=\"code-keyword\">if</span> (kind == <span class=\"code-string\">'values'</span>) <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: target[index], <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","  <span class=\"code-keyword\">return</span> { <span class=\"code-attr\">value</span>: [index, target[index]], <span class=\"code-attr\">done</span>: <span class=\"code-literal\">false</span> };\n","}, <span class=\"code-string\">'values'</span>);\n","\n","<span class=\"code-comment\">// argumentsList[@@iterator] is %ArrayProto_values%</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-createunmappedargumentsobject</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-createmappedargumentsobject</span>\n","Iterators.Arguments = Iterators.Array;\n","\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables</span>\n","addToUnscopables(<span class=\"code-string\">'keys'</span>);\n","addToUnscopables(<span class=\"code-string\">'values'</span>);\n","addToUnscopables(<span class=\"code-string\">'entries'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 176 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// iterable DOM collections</span>\n","<span class=\"code-comment\">// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods</span>\n","<span class=\"code-built_in\">module</span>.exports = {\n","  CSSRuleList: <span class=\"code-number\">0</span>,\n","  CSSStyleDeclaration: <span class=\"code-number\">0</span>,\n","  CSSValueList: <span class=\"code-number\">0</span>,\n","  ClientRectList: <span class=\"code-number\">0</span>,\n","  DOMRectList: <span class=\"code-number\">0</span>,\n","  DOMStringList: <span class=\"code-number\">0</span>,\n","  DOMTokenList: <span class=\"code-number\">1</span>,\n","  DataTransferItemList: <span class=\"code-number\">0</span>,\n","  FileList: <span class=\"code-number\">0</span>,\n","  HTMLAllCollection: <span class=\"code-number\">0</span>,\n","  HTMLCollection: <span class=\"code-number\">0</span>,\n","  HTMLFormElement: <span class=\"code-number\">0</span>,\n","  HTMLSelectElement: <span class=\"code-number\">0</span>,\n","  MediaList: <span class=\"code-number\">0</span>,\n","  MimeTypeArray: <span class=\"code-number\">0</span>,\n","  NamedNodeMap: <span class=\"code-number\">0</span>,\n","  NodeList: <span class=\"code-number\">1</span>,\n","  PaintRequestList: <span class=\"code-number\">0</span>,\n","  Plugin: <span class=\"code-number\">0</span>,\n","  PluginArray: <span class=\"code-number\">0</span>,\n","  SVGLengthList: <span class=\"code-number\">0</span>,\n","  SVGNumberList: <span class=\"code-number\">0</span>,\n","  SVGPathSegList: <span class=\"code-number\">0</span>,\n","  SVGPointList: <span class=\"code-number\">0</span>,\n","  SVGStringList: <span class=\"code-number\">0</span>,\n","  SVGTransformList: <span class=\"code-number\">0</span>,\n","  SourceBufferList: <span class=\"code-number\">0</span>,\n","  StyleSheetList: <span class=\"code-number\">0</span>,\n","  TextTrackCueList: <span class=\"code-number\">0</span>,\n","  TextTrackList: <span class=\"code-number\">0</span>,\n","  TouchList: <span class=\"code-number\">0</span>\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 177 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u7F16\u8F91\u5668 class\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _forEach = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">5</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> _create = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">3</span>));\n","\n","<span class=\"code-keyword\">var</span> __createBinding = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__createBinding || (_create[<span class=\"code-string\">\"default\"</span>] ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">o, m, k, k2</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (k2 === <span class=\"code-literal\">undefined</span>) k2 = k;\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(o, k2, {\n","    enumerable: <span class=\"code-literal\">true</span>,\n","    <span class=\"code-keyword\">get</span>: function <span class=\"code-keyword\">get</span>() {\n","      <span class=\"code-keyword\">return</span> m[k];\n","    }\n","  });\n","} : <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">o, m, k, k2</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (k2 === <span class=\"code-literal\">undefined</span>) k2 = k;\n","  o[k2] = m[k];\n","});\n","\n","<span class=\"code-keyword\">var</span> __setModuleDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__setModuleDefault || (_create[<span class=\"code-string\">\"default\"</span>] ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">o, v</span>) </span>{\n","  (<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(o, <span class=\"code-string\">\"default\"</span>, {\n","    enumerable: <span class=\"code-literal\">true</span>,\n","    value: v\n","  });\n","} : <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">o, v</span>) </span>{\n","  o[<span class=\"code-string\">\"default\"</span>] = v;\n","});\n","\n","<span class=\"code-keyword\">var</span> __importStar = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importStar || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (mod &amp;&amp; mod.__esModule) <span class=\"code-keyword\">return</span> mod;\n","  <span class=\"code-keyword\">var</span> result = {};\n","  <span class=\"code-keyword\">if</span> (mod != <span class=\"code-literal\">null</span>) <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> k <span class=\"code-keyword\">in</span> mod) {\n","    <span class=\"code-keyword\">if</span> (k !== <span class=\"code-string\">\"default\"</span> &amp;&amp; <span class=\"code-built_in\">Object</span>.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n","  }\n","\n","  __setModuleDefault(result, mod);\n","\n","  <span class=\"code-keyword\">return</span> result;\n","};\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> dom_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">2</span>));\n","\n","<span class=\"code-keyword\">var</span> util_1 = __webpack_require__(<span class=\"code-number\">7</span>);\n","\n","<span class=\"code-keyword\">var</span> config_1 = __importDefault(__webpack_require__(<span class=\"code-number\">266</span>));\n","\n","<span class=\"code-keyword\">var</span> selection_1 = __importDefault(__webpack_require__(<span class=\"code-number\">281</span>));\n","\n","<span class=\"code-keyword\">var</span> command_1 = __importDefault(__webpack_require__(<span class=\"code-number\">283</span>));\n","\n","<span class=\"code-keyword\">var</span> index_1 = __importDefault(__webpack_require__(<span class=\"code-number\">284</span>));\n","\n","<span class=\"code-keyword\">var</span> index_2 = __importDefault(__webpack_require__(<span class=\"code-number\">303</span>));\n","\n","<span class=\"code-keyword\">var</span> init_dom_1 = __importDefault(__webpack_require__(<span class=\"code-number\">387</span>));\n","\n","<span class=\"code-keyword\">var</span> init_selection_1 = __importDefault(__webpack_require__(<span class=\"code-number\">388</span>));\n","\n","<span class=\"code-keyword\">var</span> bind_event_1 = __importDefault(__webpack_require__(<span class=\"code-number\">389</span>));\n","\n","<span class=\"code-keyword\">var</span> i18next_init_1 = __importDefault(__webpack_require__(<span class=\"code-number\">390</span>));\n","\n","<span class=\"code-keyword\">var</span> set_full_screen_1 = __importStar(__webpack_require__(<span class=\"code-number\">391</span>));\n","\n","<span class=\"code-keyword\">var</span> scroll_to_head_1 = __importDefault(__webpack_require__(<span class=\"code-number\">394</span>));\n","\n","<span class=\"code-keyword\">var</span> z_index_1 = __importDefault(__webpack_require__(<span class=\"code-number\">395</span>));\n","\n","<span class=\"code-keyword\">var</span> index_3 = __importDefault(__webpack_require__(<span class=\"code-number\">396</span>));\n","\n","<span class=\"code-keyword\">var</span> index_4 = __importDefault(__webpack_require__(<span class=\"code-number\">398</span>));\n","\n","<span class=\"code-keyword\">var</span> disable_1 = __importDefault(__webpack_require__(<span class=\"code-number\">413</span>)); <span class=\"code-comment\">// \u521B\u5EFA\u83DC\u5355\u7684 class</span>\n","\n","\n","<span class=\"code-keyword\">var</span> BtnMenu_1 = __importDefault(__webpack_require__(<span class=\"code-number\">22</span>));\n","\n","<span class=\"code-keyword\">var</span> DropList_1 = __importDefault(__webpack_require__(<span class=\"code-number\">125</span>));\n","\n","<span class=\"code-keyword\">var</span> DropListMenu_1 = __importDefault(__webpack_require__(<span class=\"code-number\">23</span>));\n","\n","<span class=\"code-keyword\">var</span> Panel_1 = __importDefault(__webpack_require__(<span class=\"code-number\">31</span>));\n","\n","<span class=\"code-keyword\">var</span> PanelMenu_1 = __importDefault(__webpack_require__(<span class=\"code-number\">34</span>));\n","\n","<span class=\"code-keyword\">var</span> Tooltip_1 = __importDefault(__webpack_require__(<span class=\"code-number\">44</span>));\n","\n","<span class=\"code-keyword\">var</span> EDITOR_ID = <span class=\"code-number\">1</span>;\n","\n","<span class=\"code-keyword\">var</span> Editor =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6784\u9020\u51FD\u6570\n</span>","<span class=\"code-comment\">   * @param toolbarSelector \u5DE5\u5177\u680F DOM selector\n</span>","<span class=\"code-comment\">   * @param textSelector \u6587\u672C\u533A\u57DF DOM selector\n</span>","<span class=\"code-comment\">   */</span>\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Editor</span>(<span class=\"code-params\">toolbarSelector, textSelector</span>) </span>{\n","    <span class=\"code-comment\">// \u5B9E\u4F8B\u9500\u6BC1\u524D\u9700\u8981\u6267\u884C\u7684\u94A9\u5B50\u96C6\u5408</span>\n","    <span class=\"code-keyword\">this</span>.beforeDestroyHooks = []; <span class=\"code-comment\">// id\uFF0C\u7528\u4EE5\u533A\u5206\u5355\u4E2A\u9875\u9762\u4E0D\u540C\u7684\u7F16\u8F91\u5668\u5BF9\u8C61</span>\n","\n","    <span class=\"code-keyword\">this</span>.id = <span class=\"code-string\">\"wangEditor-\"</span> + EDITOR_ID++;\n","    <span class=\"code-keyword\">this</span>.toolbarSelector = toolbarSelector;\n","    <span class=\"code-keyword\">this</span>.textSelector = textSelector;\n","\n","    <span class=\"code-keyword\">if</span> (toolbarSelector == <span class=\"code-literal\">null</span>) {\n","      <span class=\"code-keyword\">throw</span> <span class=\"code-keyword\">new</span> <span class=\"code-built_in\">Error</span>(<span class=\"code-string\">'\u9519\u8BEF\uFF1A\u521D\u59CB\u5316\u7F16\u8F91\u5668\u65F6\u5019\u672A\u4F20\u5165\u4EFB\u4F55\u53C2\u6570\uFF0C\u8BF7\u67E5\u9605\u6587\u6863'</span>);\n","    } <span class=\"code-comment\">// \u5C5E\u6027\u7684\u9ED8\u8BA4\u503C\uFF0C\u540E\u9762\u53EF\u80FD\u4F1A\u518D\u4FEE\u6539</span>\n","    <span class=\"code-comment\">// \u9ED8\u8BA4\u914D\u7F6E - \u5F53\u4E00\u4E2A\u9875\u9762\u6709\u591A\u4E2A\u7F16\u8F91\u5668\u7684\u65F6\u5019\uFF0C\u56E0\u4E3A JS \u7684\u7279\u6027(\u5F15\u7528\u7C7B\u578B)\u4F1A\u5BFC\u81F4\u591A\u4E2A\u7F16\u8F91\u5668\u7684 config \u5F15\u7528\u662F\u540C\u4E00\u4E2A\uFF0C\u6240\u4EE5\u9700\u8981 \u6DF1\u5EA6\u514B\u9686 \u65AD\u6389\u5F15\u7528</span>\n","\n","\n","    <span class=\"code-keyword\">this</span>.config = util_1.deepClone(config_1[<span class=\"code-string\">\"default\"</span>]);\n","    <span class=\"code-keyword\">this</span>.$toolbarElem = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div&gt;&lt;/div&gt;'</span>);\n","    <span class=\"code-keyword\">this</span>.$textContainerElem = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div&gt;&lt;/div&gt;'</span>);\n","    <span class=\"code-keyword\">this</span>.$textElem = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;div&gt;&lt;/div&gt;'</span>);\n","    <span class=\"code-keyword\">this</span>.toolbarElemId = <span class=\"code-string\">''</span>;\n","    <span class=\"code-keyword\">this</span>.textElemId = <span class=\"code-string\">''</span>;\n","    <span class=\"code-keyword\">this</span>.isFocus = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>.isComposing = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>.isCompatibleMode = <span class=\"code-literal\">false</span>;\n","    <span class=\"code-keyword\">this</span>.selection = <span class=\"code-keyword\">new</span> selection_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">this</span>.cmd = <span class=\"code-keyword\">new</span> command_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">this</span>.txt = <span class=\"code-keyword\">new</span> index_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">this</span>.menus = <span class=\"code-keyword\">new</span> index_2[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">this</span>.zIndex = <span class=\"code-keyword\">new</span> z_index_1[<span class=\"code-string\">\"default\"</span>]();\n","    <span class=\"code-keyword\">this</span>.change = <span class=\"code-keyword\">new</span> index_3[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">this</span>.history = <span class=\"code-keyword\">new</span> index_4[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>);\n","\n","    <span class=\"code-keyword\">var</span> _a = disable_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>),\n","        disable = _a.disable,\n","        enable = _a.enable;\n","\n","    <span class=\"code-keyword\">this</span>.disable = disable;\n","    <span class=\"code-keyword\">this</span>.enable = enable;\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u521D\u59CB\u5316\u9009\u533A\n</span>","<span class=\"code-comment\">   * @param newLine \u65B0\u5EFA\u4E00\u884C\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Editor.prototype.initSelection = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">newLine</span>) </span>{\n","    init_selection_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>, newLine);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u521B\u5EFA\u7F16\u8F91\u5668\u5B9E\u4F8B\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Editor.prototype.create = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-comment\">// \u521D\u59CB\u5316 ZIndex</span>\n","    <span class=\"code-keyword\">this</span>.zIndex.init(<span class=\"code-keyword\">this</span>); <span class=\"code-comment\">// \u786E\u5B9A\u5F53\u524D\u7684\u5386\u53F2\u8BB0\u5F55\u6A21\u5F0F</span>\n","\n","    <span class=\"code-keyword\">this</span>.isCompatibleMode = <span class=\"code-keyword\">this</span>.config.compatibleMode(); <span class=\"code-comment\">// \u6807\u51C6\u6A21\u5F0F\u4E0B\uFF0C\u91CD\u7F6E\u5EF6\u8FDF\u65F6\u95F4</span>\n","\n","    <span class=\"code-keyword\">if</span> (!<span class=\"code-keyword\">this</span>.isCompatibleMode) {\n","      <span class=\"code-keyword\">this</span>.config.onchangeTimeout = <span class=\"code-number\">30</span>;\n","    } <span class=\"code-comment\">// \u56FD\u9645\u5316 \u56E0\u4E3A\u8981\u5728\u521B\u5EFA\u83DC\u5355\u524D\u4F7F\u7528 \u6240\u4EE5\u8981\u6700\u5148 \u521D\u59CB\u5316</span>\n","\n","\n","    i18next_init_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>); <span class=\"code-comment\">// \u521D\u59CB\u5316 DOM</span>\n","\n","    init_dom_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>); <span class=\"code-comment\">// \u521D\u59CB\u5316 text</span>\n","\n","    <span class=\"code-keyword\">this</span>.txt.init(); <span class=\"code-comment\">// \u521D\u59CB\u5316\u83DC\u5355</span>\n","\n","    <span class=\"code-keyword\">this</span>.menus.init(); <span class=\"code-comment\">// \u521D\u59CB\u5316\u5168\u5C4F\u529F\u80FD</span>\n","\n","    set_full_screen_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>); <span class=\"code-comment\">// \u521D\u59CB\u5316\u9009\u533A\uFF0C\u5C06\u5149\u6807\u5B9A\u4F4D\u5230\u5185\u5BB9\u5C3E\u90E8</span>\n","\n","    <span class=\"code-keyword\">this</span>.initSelection(<span class=\"code-literal\">true</span>); <span class=\"code-comment\">// \u7ED1\u5B9A\u4E8B\u4EF6</span>\n","\n","    bind_event_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>); <span class=\"code-comment\">// \u7ED1\u5B9A\u76D1\u542C\u7684\u76EE\u6807\u8282\u70B9</span>\n","\n","    <span class=\"code-keyword\">this</span>.change.observe();\n","    <span class=\"code-keyword\">this</span>.history.observe();\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u63D0\u4F9B\u7ED9\u7528\u6237\u6DFB\u52A0\u9500\u6BC1\u524D\u7684\u94A9\u5B50\u51FD\u6570\n</span>","<span class=\"code-comment\">   * @param fn \u94A9\u5B50\u51FD\u6570\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Editor.prototype.beforeDestroy = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","    <span class=\"code-keyword\">this</span>.beforeDestroyHooks.push(fn);\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u9500\u6BC1\u5F53\u524D\u7F16\u8F91\u5668\u5B9E\u4F8B\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Editor.prototype.destroy = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> _context;\n","\n","    <span class=\"code-keyword\">var</span> _this = <span class=\"code-keyword\">this</span>; <span class=\"code-comment\">// \u8C03\u7528\u94A9\u5B50\u51FD\u6570</span>\n","\n","\n","    (<span class=\"code-number\">0</span>, _forEach[<span class=\"code-string\">\"default\"</span>])(_context = <span class=\"code-keyword\">this</span>.beforeDestroyHooks).call(_context, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">fn</span>) </span>{\n","      <span class=\"code-keyword\">return</span> fn.call(_this);\n","    }); <span class=\"code-comment\">// \u9500\u6BC1 DOM \u8282\u70B9</span>\n","\n","    <span class=\"code-keyword\">this</span>.$toolbarElem.remove();\n","    <span class=\"code-keyword\">this</span>.$textContainerElem.remove();\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5C06\u7F16\u8F91\u5668\u8BBE\u7F6E\u4E3A\u5168\u5C4F\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Editor.prototype.fullScreen = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    set_full_screen_1.setFullScreen(<span class=\"code-keyword\">this</span>);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u5C06\u7F16\u8F91\u5668\u9000\u51FA\u5168\u5C4F\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Editor.prototype.unFullScreen = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    set_full_screen_1.setUnFullScreen(<span class=\"code-keyword\">this</span>);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6EDA\u52A8\u5230\u6307\u5B9A\u6807\u9898\u951A\u70B9\n</span>","<span class=\"code-comment\">   * @param id \u6807\u9898\u951A\u70B9id\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  Editor.prototype.scrollToHead = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">id</span>) </span>{\n","    scroll_to_head_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-keyword\">this</span>, id);\n","  }; <span class=\"code-comment\">// \u66B4\u9732 $</span>\n","\n","\n","  Editor.$ = dom_core_1[<span class=\"code-string\">\"default\"</span>];\n","  Editor.BtnMenu = BtnMenu_1[<span class=\"code-string\">\"default\"</span>];\n","  Editor.DropList = DropList_1[<span class=\"code-string\">\"default\"</span>];\n","  Editor.DropListMenu = DropListMenu_1[<span class=\"code-string\">\"default\"</span>];\n","  Editor.Panel = Panel_1[<span class=\"code-string\">\"default\"</span>];\n","  Editor.PanelMenu = PanelMenu_1[<span class=\"code-string\">\"default\"</span>];\n","  Editor.Tooltip = Tooltip_1[<span class=\"code-string\">\"default\"</span>];\n","  <span class=\"code-keyword\">return</span> Editor;\n","}();\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = Editor;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 178 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">51</span>);\n","<span class=\"code-keyword\">var</span> forEach = __webpack_require__(<span class=\"code-number\">179</span>);\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">61</span>);\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","\n","<span class=\"code-keyword\">var</span> DOMIterables = {\n","  DOMTokenList: <span class=\"code-literal\">true</span>,\n","  NodeList: <span class=\"code-literal\">true</span>\n","};\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.forEach;\n","  <span class=\"code-keyword\">return</span> it === ArrayPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; own === ArrayPrototype.forEach)\n","    <span class=\"code-comment\">// eslint-disable-next-line no-prototype-builtins</span>\n","    || DOMIterables.hasOwnProperty(classof(it)) ? forEach : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 179 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">180</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 180 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">181</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Array'</span>).forEach;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 181 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> forEach = __webpack_require__(<span class=\"code-number\">182</span>);\n","\n","<span class=\"code-comment\">// `Array.prototype.forEach` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.foreach</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: [].forEach != forEach }, {\n","  forEach: forEach\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 182 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $forEach = __webpack_require__(<span class=\"code-number\">33</span>).forEach;\n","<span class=\"code-keyword\">var</span> arrayMethodIsStrict = __webpack_require__(<span class=\"code-number\">87</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodUsesToLength = __webpack_require__(<span class=\"code-number\">25</span>);\n","\n","<span class=\"code-keyword\">var</span> STRICT_METHOD = arrayMethodIsStrict(<span class=\"code-string\">'forEach'</span>);\n","<span class=\"code-keyword\">var</span> USES_TO_LENGTH = arrayMethodUsesToLength(<span class=\"code-string\">'forEach'</span>);\n","\n","<span class=\"code-comment\">// `Array.prototype.forEach` method implementation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.foreach</span>\n","<span class=\"code-built_in\">module</span>.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">forEach</span>(<span class=\"code-params\">callbackfn <span class=\"code-regexp\">/* , thisArg */</span></span>) </span>{\n","  <span class=\"code-keyword\">return</span> $forEach(<span class=\"code-keyword\">this</span>, callbackfn, <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>);\n","} : [].forEach;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 183 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">184</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 184 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> bind = __webpack_require__(<span class=\"code-number\">185</span>);\n","\n","<span class=\"code-keyword\">var</span> FunctionPrototype = <span class=\"code-built_in\">Function</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.bind;\n","  <span class=\"code-keyword\">return</span> it === FunctionPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Function</span> &amp;&amp; own === FunctionPrototype.bind) ? bind : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 185 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">186</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Function'</span>).bind;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 186 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> bind = __webpack_require__(<span class=\"code-number\">187</span>);\n","\n","<span class=\"code-comment\">// `Function.prototype.bind` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-function.prototype.bind</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Function'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span> }, {\n","  bind: bind\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 187 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> aFunction = __webpack_require__(<span class=\"code-number\">32</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","\n","<span class=\"code-keyword\">var</span> slice = [].slice;\n","<span class=\"code-keyword\">var</span> factories = {};\n","\n","<span class=\"code-keyword\">var</span> construct = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">C, argsLength, args</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!(argsLength <span class=\"code-keyword\">in</span> factories)) {\n","    <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">var</span> list = [], i = <span class=\"code-number\">0</span>; i &lt; argsLength; i++) list[i] = <span class=\"code-string\">'a['</span> + i + <span class=\"code-string\">']'</span>;\n","    <span class=\"code-comment\">// eslint-disable-next-line no-new-func</span>\n","    factories[argsLength] = <span class=\"code-built_in\">Function</span>(<span class=\"code-string\">'C,a'</span>, <span class=\"code-string\">'return new C('</span> + list.join(<span class=\"code-string\">','</span>) + <span class=\"code-string\">')'</span>);\n","  } <span class=\"code-keyword\">return</span> factories[argsLength](C, args);\n","};\n","\n","<span class=\"code-comment\">// `Function.prototype.bind` method implementation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-function.prototype.bind</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-built_in\">Function</span>.bind || <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">bind</span>(<span class=\"code-params\">that <span class=\"code-regexp\">/* , ...args */</span></span>) </span>{\n","  <span class=\"code-keyword\">var</span> fn = aFunction(<span class=\"code-keyword\">this</span>);\n","  <span class=\"code-keyword\">var</span> partArgs = slice.call(<span class=\"code-built_in\">arguments</span>, <span class=\"code-number\">1</span>);\n","  <span class=\"code-keyword\">var</span> boundFunction = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">bound</span>(<span class=\"code-params\"><span class=\"code-regexp\">/* args... */</span></span>) </span>{\n","    <span class=\"code-keyword\">var</span> args = partArgs.concat(slice.call(<span class=\"code-built_in\">arguments</span>));\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span> <span class=\"code-keyword\">instanceof</span> boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\n","  };\n","  <span class=\"code-keyword\">if</span> (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\n","  <span class=\"code-keyword\">return</span> boundFunction;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 188 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">189</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 189 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> arrayIncludes = __webpack_require__(<span class=\"code-number\">190</span>);\n","<span class=\"code-keyword\">var</span> stringIncludes = __webpack_require__(<span class=\"code-number\">192</span>);\n","\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","<span class=\"code-keyword\">var</span> StringPrototype = <span class=\"code-built_in\">String</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.includes;\n","  <span class=\"code-keyword\">if</span> (it === ArrayPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; own === ArrayPrototype.includes)) <span class=\"code-keyword\">return</span> arrayIncludes;\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> it === <span class=\"code-string\">'string'</span> || it === StringPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">String</span> &amp;&amp; own === StringPrototype.includes)) {\n","    <span class=\"code-keyword\">return</span> stringIncludes;\n","  } <span class=\"code-keyword\">return</span> own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 190 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">191</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Array'</span>).includes;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 191 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> $includes = __webpack_require__(<span class=\"code-number\">71</span>).includes;\n","<span class=\"code-keyword\">var</span> addToUnscopables = __webpack_require__(<span class=\"code-number\">85</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodUsesToLength = __webpack_require__(<span class=\"code-number\">25</span>);\n","\n","<span class=\"code-keyword\">var</span> USES_TO_LENGTH = arrayMethodUsesToLength(<span class=\"code-string\">'indexOf'</span>, { <span class=\"code-attr\">ACCESSORS</span>: <span class=\"code-literal\">true</span>, <span class=\"code-number\">1</span>: <span class=\"code-number\">0</span> });\n","\n","<span class=\"code-comment\">// `Array.prototype.includes` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.includes</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !USES_TO_LENGTH }, {\n","  includes: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">includes</span>(<span class=\"code-params\">el <span class=\"code-regexp\">/* , fromIndex = 0 */</span></span>) </span>{\n","    <span class=\"code-keyword\">return</span> $includes(<span class=\"code-keyword\">this</span>, el, <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>);\n","  }\n","});\n","\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables</span>\n","addToUnscopables(<span class=\"code-string\">'includes'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 192 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">193</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'String'</span>).includes;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 193 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> notARegExp = __webpack_require__(<span class=\"code-number\">194</span>);\n","<span class=\"code-keyword\">var</span> requireObjectCoercible = __webpack_require__(<span class=\"code-number\">46</span>);\n","<span class=\"code-keyword\">var</span> correctIsRegExpLogic = __webpack_require__(<span class=\"code-number\">196</span>);\n","\n","<span class=\"code-comment\">// `String.prototype.includes` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-string.prototype.includes</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'String'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !correctIsRegExpLogic(<span class=\"code-string\">'includes'</span>) }, {\n","  includes: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">includes</span>(<span class=\"code-params\">searchString <span class=\"code-regexp\">/* , position = 0 */</span></span>) </span>{\n","    <span class=\"code-keyword\">return</span> !!~<span class=\"code-built_in\">String</span>(requireObjectCoercible(<span class=\"code-keyword\">this</span>))\n","      .indexOf(notARegExp(searchString), <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>);\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 194 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> isRegExp = __webpack_require__(<span class=\"code-number\">195</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (isRegExp(it)) {\n","    <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">\"The method doesn't accept regular expressions\"</span>);\n","  } <span class=\"code-keyword\">return</span> it;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 195 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> classof = __webpack_require__(<span class=\"code-number\">45</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> MATCH = wellKnownSymbol(<span class=\"code-string\">'match'</span>);\n","\n","<span class=\"code-comment\">// `IsRegExp` abstract operation</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-isregexp</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> isRegExp;\n","  <span class=\"code-keyword\">return</span> isObject(it) &amp;&amp; ((isRegExp = it[MATCH]) !== <span class=\"code-literal\">undefined</span> ? !!isRegExp : classof(it) == <span class=\"code-string\">'RegExp'</span>);\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 196 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","\n","<span class=\"code-keyword\">var</span> MATCH = wellKnownSymbol(<span class=\"code-string\">'match'</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">METHOD_NAME</span>) </span>{\n","  <span class=\"code-keyword\">var</span> regexp = <span class=\"code-regexp\">/./</span>;\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-string\">'/./'</span>[METHOD_NAME](regexp);\n","  } <span class=\"code-keyword\">catch</span> (error1) {\n","    <span class=\"code-keyword\">try</span> {\n","      regexp[MATCH] = <span class=\"code-literal\">false</span>;\n","      <span class=\"code-keyword\">return</span> <span class=\"code-string\">'/./'</span>[METHOD_NAME](regexp);\n","    } <span class=\"code-keyword\">catch</span> (error2) { <span class=\"code-comment\">/* empty */</span> }\n","  } <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 197 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">198</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 198 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> filter = __webpack_require__(<span class=\"code-number\">199</span>);\n","\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.filter;\n","  <span class=\"code-keyword\">return</span> it === ArrayPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; own === ArrayPrototype.filter) ? filter : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 199 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">200</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Array'</span>).filter;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 200 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> $filter = __webpack_require__(<span class=\"code-number\">33</span>).filter;\n","<span class=\"code-keyword\">var</span> arrayMethodHasSpeciesSupport = __webpack_require__(<span class=\"code-number\">53</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodUsesToLength = __webpack_require__(<span class=\"code-number\">25</span>);\n","\n","<span class=\"code-keyword\">var</span> HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport(<span class=\"code-string\">'filter'</span>);\n","<span class=\"code-comment\">// Edge 14- issue</span>\n","<span class=\"code-keyword\">var</span> USES_TO_LENGTH = arrayMethodUsesToLength(<span class=\"code-string\">'filter'</span>);\n","\n","<span class=\"code-comment\">// `Array.prototype.filter` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.filter</span>\n","<span class=\"code-comment\">// with adding support of @@species</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n","  filter: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">filter</span>(<span class=\"code-params\">callbackfn <span class=\"code-regexp\">/* , thisArg */</span></span>) </span>{\n","    <span class=\"code-keyword\">return</span> $filter(<span class=\"code-keyword\">this</span>, callbackfn, <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>);\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 201 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">202</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 202 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> splice = __webpack_require__(<span class=\"code-number\">203</span>);\n","\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.splice;\n","  <span class=\"code-keyword\">return</span> it === ArrayPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; own === ArrayPrototype.splice) ? splice : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 203 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">204</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Array'</span>).splice;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 204 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> toAbsoluteIndex = __webpack_require__(<span class=\"code-number\">72</span>);\n","<span class=\"code-keyword\">var</span> toInteger = __webpack_require__(<span class=\"code-number\">58</span>);\n","<span class=\"code-keyword\">var</span> toLength = __webpack_require__(<span class=\"code-number\">36</span>);\n","<span class=\"code-keyword\">var</span> toObject = __webpack_require__(<span class=\"code-number\">38</span>);\n","<span class=\"code-keyword\">var</span> arraySpeciesCreate = __webpack_require__(<span class=\"code-number\">86</span>);\n","<span class=\"code-keyword\">var</span> createProperty = __webpack_require__(<span class=\"code-number\">91</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodHasSpeciesSupport = __webpack_require__(<span class=\"code-number\">53</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodUsesToLength = __webpack_require__(<span class=\"code-number\">25</span>);\n","\n","<span class=\"code-keyword\">var</span> HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport(<span class=\"code-string\">'splice'</span>);\n","<span class=\"code-keyword\">var</span> USES_TO_LENGTH = arrayMethodUsesToLength(<span class=\"code-string\">'splice'</span>, { <span class=\"code-attr\">ACCESSORS</span>: <span class=\"code-literal\">true</span>, <span class=\"code-number\">0</span>: <span class=\"code-number\">0</span>, <span class=\"code-number\">1</span>: <span class=\"code-number\">2</span> });\n","\n","<span class=\"code-keyword\">var</span> max = <span class=\"code-built_in\">Math</span>.max;\n","<span class=\"code-keyword\">var</span> min = <span class=\"code-built_in\">Math</span>.min;\n","<span class=\"code-keyword\">var</span> MAX_SAFE_INTEGER = <span class=\"code-number\">0x1FFFFFFFFFFFFF</span>;\n","<span class=\"code-keyword\">var</span> MAXIMUM_ALLOWED_LENGTH_EXCEEDED = <span class=\"code-string\">'Maximum allowed length exceeded'</span>;\n","\n","<span class=\"code-comment\">// `Array.prototype.splice` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.splice</span>\n","<span class=\"code-comment\">// with adding support of @@species</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n","  splice: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">splice</span>(<span class=\"code-params\">start, deleteCount <span class=\"code-regexp\">/* , ...items */</span></span>) </span>{\n","    <span class=\"code-keyword\">var</span> O = toObject(<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">var</span> len = toLength(O.length);\n","    <span class=\"code-keyword\">var</span> actualStart = toAbsoluteIndex(start, len);\n","    <span class=\"code-keyword\">var</span> argumentsLength = <span class=\"code-built_in\">arguments</span>.length;\n","    <span class=\"code-keyword\">var</span> insertCount, actualDeleteCount, A, k, <span class=\"code-keyword\">from</span>, to;\n","    <span class=\"code-keyword\">if</span> (argumentsLength === <span class=\"code-number\">0</span>) {\n","      insertCount = actualDeleteCount = <span class=\"code-number\">0</span>;\n","    } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (argumentsLength === <span class=\"code-number\">1</span>) {\n","      insertCount = <span class=\"code-number\">0</span>;\n","      actualDeleteCount = len - actualStart;\n","    } <span class=\"code-keyword\">else</span> {\n","      insertCount = argumentsLength - <span class=\"code-number\">2</span>;\n","      actualDeleteCount = min(max(toInteger(deleteCount), <span class=\"code-number\">0</span>), len - actualStart);\n","    }\n","    <span class=\"code-keyword\">if</span> (len + insertCount - actualDeleteCount &gt; MAX_SAFE_INTEGER) {\n","      <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n","    }\n","    A = arraySpeciesCreate(O, actualDeleteCount);\n","    <span class=\"code-keyword\">for</span> (k = <span class=\"code-number\">0</span>; k &lt; actualDeleteCount; k++) {\n","      <span class=\"code-keyword\">from</span> = actualStart + k;\n","      <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">from</span> <span class=\"code-keyword\">in</span> O) createProperty(A, k, O[<span class=\"code-keyword\">from</span>]);\n","    }\n","    A.length = actualDeleteCount;\n","    <span class=\"code-keyword\">if</span> (insertCount &lt; actualDeleteCount) {\n","      <span class=\"code-keyword\">for</span> (k = actualStart; k &lt; len - actualDeleteCount; k++) {\n","        <span class=\"code-keyword\">from</span> = k + actualDeleteCount;\n","        to = k + insertCount;\n","        <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">from</span> <span class=\"code-keyword\">in</span> O) O[to] = O[<span class=\"code-keyword\">from</span>];\n","        <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">delete</span> O[to];\n","      }\n","      <span class=\"code-keyword\">for</span> (k = len; k &gt; len - actualDeleteCount + insertCount; k--) <span class=\"code-keyword\">delete</span> O[k - <span class=\"code-number\">1</span>];\n","    } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (insertCount &gt; actualDeleteCount) {\n","      <span class=\"code-keyword\">for</span> (k = len - actualDeleteCount; k &gt; actualStart; k--) {\n","        <span class=\"code-keyword\">from</span> = k + actualDeleteCount - <span class=\"code-number\">1</span>;\n","        to = k + insertCount - <span class=\"code-number\">1</span>;\n","        <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">from</span> <span class=\"code-keyword\">in</span> O) O[to] = O[<span class=\"code-keyword\">from</span>];\n","        <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">delete</span> O[to];\n","      }\n","    }\n","    <span class=\"code-keyword\">for</span> (k = <span class=\"code-number\">0</span>; k &lt; insertCount; k++) {\n","      O[k + actualStart] = <span class=\"code-built_in\">arguments</span>[k + <span class=\"code-number\">2</span>];\n","    }\n","    O.length = len - actualDeleteCount + insertCount;\n","    <span class=\"code-keyword\">return</span> A;\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 205 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">206</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 206 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> indexOf = __webpack_require__(<span class=\"code-number\">207</span>);\n","\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.indexOf;\n","  <span class=\"code-keyword\">return</span> it === ArrayPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; own === ArrayPrototype.indexOf) ? indexOf : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 207 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">208</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Array'</span>).indexOf;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 208 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> $indexOf = __webpack_require__(<span class=\"code-number\">71</span>).indexOf;\n","<span class=\"code-keyword\">var</span> arrayMethodIsStrict = __webpack_require__(<span class=\"code-number\">87</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodUsesToLength = __webpack_require__(<span class=\"code-number\">25</span>);\n","\n","<span class=\"code-keyword\">var</span> nativeIndexOf = [].indexOf;\n","\n","<span class=\"code-keyword\">var</span> NEGATIVE_ZERO = !!nativeIndexOf &amp;&amp; <span class=\"code-number\">1</span> / [<span class=\"code-number\">1</span>].indexOf(<span class=\"code-number\">1</span>, <span class=\"code-number\">-0</span>) &lt; <span class=\"code-number\">0</span>;\n","<span class=\"code-keyword\">var</span> STRICT_METHOD = arrayMethodIsStrict(<span class=\"code-string\">'indexOf'</span>);\n","<span class=\"code-keyword\">var</span> USES_TO_LENGTH = arrayMethodUsesToLength(<span class=\"code-string\">'indexOf'</span>, { <span class=\"code-attr\">ACCESSORS</span>: <span class=\"code-literal\">true</span>, <span class=\"code-number\">1</span>: <span class=\"code-number\">0</span> });\n","\n","<span class=\"code-comment\">// `Array.prototype.indexOf` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.indexof</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n","  indexOf: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">indexOf</span>(<span class=\"code-params\">searchElement <span class=\"code-regexp\">/* , fromIndex = 0 */</span></span>) </span>{\n","    <span class=\"code-keyword\">return</span> NEGATIVE_ZERO\n","      <span class=\"code-comment\">// convert -0 to +0</span>\n","      ? nativeIndexOf.apply(<span class=\"code-keyword\">this</span>, <span class=\"code-built_in\">arguments</span>) || <span class=\"code-number\">0</span>\n","      : $indexOf(<span class=\"code-keyword\">this</span>, searchElement, <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>);\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 209 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">210</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 210 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">211</span>);\n","__webpack_require__(<span class=\"code-number\">62</span>);\n","__webpack_require__(<span class=\"code-number\">65</span>);\n","__webpack_require__(<span class=\"code-number\">51</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = path.Map;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 211 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> collection = __webpack_require__(<span class=\"code-number\">115</span>);\n","<span class=\"code-keyword\">var</span> collectionStrong = __webpack_require__(<span class=\"code-number\">117</span>);\n","\n","<span class=\"code-comment\">// `Map` constructor</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-map-objects</span>\n","<span class=\"code-built_in\">module</span>.exports = collection(<span class=\"code-string\">'Map'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">init</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Map</span>(<span class=\"code-params\"></span>) </span>{ <span class=\"code-keyword\">return</span> init(<span class=\"code-keyword\">this</span>, <span class=\"code-built_in\">arguments</span>.length ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">0</span>] : <span class=\"code-literal\">undefined</span>); };\n","}, collectionStrong);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 212 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>.isExtensible(<span class=\"code-built_in\">Object</span>.preventExtensions({}));\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 213 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">214</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 214 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> trim = __webpack_require__(<span class=\"code-number\">215</span>);\n","\n","<span class=\"code-keyword\">var</span> StringPrototype = <span class=\"code-built_in\">String</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.trim;\n","  <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">typeof</span> it === <span class=\"code-string\">'string'</span> || it === StringPrototype\n","    || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">String</span> &amp;&amp; own === StringPrototype.trim) ? trim : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 215 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">216</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'String'</span>).trim;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 216 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> $trim = __webpack_require__(<span class=\"code-number\">92</span>).trim;\n","<span class=\"code-keyword\">var</span> forcedStringTrimMethod = __webpack_require__(<span class=\"code-number\">217</span>);\n","\n","<span class=\"code-comment\">// `String.prototype.trim` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-string.prototype.trim</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'String'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: forcedStringTrimMethod(<span class=\"code-string\">'trim'</span>) }, {\n","  trim: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">trim</span>(<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> $trim(<span class=\"code-keyword\">this</span>);\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 217 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> whitespaces = __webpack_require__(<span class=\"code-number\">67</span>);\n","\n","<span class=\"code-keyword\">var</span> non = <span class=\"code-string\">'\\u200B\\u0085\\u180E'</span>;\n","\n","<span class=\"code-comment\">// check that a method works with the correct list</span>\n","<span class=\"code-comment\">// of whitespaces and has a correct name</span>\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">METHOD_NAME</span>) </span>{\n","  <span class=\"code-keyword\">return</span> fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n","  });\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 218 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">219</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 219 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> map = __webpack_require__(<span class=\"code-number\">220</span>);\n","\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.map;\n","  <span class=\"code-keyword\">return</span> it === ArrayPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; own === ArrayPrototype.map) ? map : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 220 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">221</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Array'</span>).map;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 221 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> $map = __webpack_require__(<span class=\"code-number\">33</span>).map;\n","<span class=\"code-keyword\">var</span> arrayMethodHasSpeciesSupport = __webpack_require__(<span class=\"code-number\">53</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodUsesToLength = __webpack_require__(<span class=\"code-number\">25</span>);\n","\n","<span class=\"code-keyword\">var</span> HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport(<span class=\"code-string\">'map'</span>);\n","<span class=\"code-comment\">// FF49- issue</span>\n","<span class=\"code-keyword\">var</span> USES_TO_LENGTH = arrayMethodUsesToLength(<span class=\"code-string\">'map'</span>);\n","\n","<span class=\"code-comment\">// `Array.prototype.map` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.map</span>\n","<span class=\"code-comment\">// with adding support of @@species</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n","  map: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">map</span>(<span class=\"code-params\">callbackfn <span class=\"code-regexp\">/* , thisArg */</span></span>) </span>{\n","    <span class=\"code-keyword\">return</span> $map(<span class=\"code-keyword\">this</span>, callbackfn, <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">1</span> ? <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">1</span>] : <span class=\"code-literal\">undefined</span>);\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 222 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">223</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 223 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">224</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = path.Array.isArray;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 224 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> isArray = __webpack_require__(<span class=\"code-number\">52</span>);\n","\n","<span class=\"code-comment\">// `Array.isArray` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.isarray</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span> }, {\n","  isArray: isArray\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 225 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">226</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 226 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">227</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 227 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">118</span>);\n","__webpack_require__(<span class=\"code-number\">65</span>);\n","__webpack_require__(<span class=\"code-number\">51</span>);\n","<span class=\"code-keyword\">var</span> WrappedWellKnownSymbolModule = __webpack_require__(<span class=\"code-number\">95</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = WrappedWellKnownSymbolModule.f(<span class=\"code-string\">'iterator'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 228 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">229</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 229 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">230</span>);\n","__webpack_require__(<span class=\"code-number\">250</span>);\n","__webpack_require__(<span class=\"code-number\">251</span>);\n","__webpack_require__(<span class=\"code-number\">252</span>);\n","__webpack_require__(<span class=\"code-number\">253</span>);\n","<span class=\"code-comment\">// <span class=\"code-doctag\">TODO:</span> Remove from `core-js@4`</span>\n","__webpack_require__(<span class=\"code-number\">254</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 230 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">231</span>);\n","__webpack_require__(<span class=\"code-number\">62</span>);\n","__webpack_require__(<span class=\"code-number\">232</span>);\n","__webpack_require__(<span class=\"code-number\">234</span>);\n","__webpack_require__(<span class=\"code-number\">235</span>);\n","__webpack_require__(<span class=\"code-number\">236</span>);\n","__webpack_require__(<span class=\"code-number\">237</span>);\n","__webpack_require__(<span class=\"code-number\">118</span>);\n","__webpack_require__(<span class=\"code-number\">238</span>);\n","__webpack_require__(<span class=\"code-number\">239</span>);\n","__webpack_require__(<span class=\"code-number\">240</span>);\n","__webpack_require__(<span class=\"code-number\">241</span>);\n","__webpack_require__(<span class=\"code-number\">242</span>);\n","__webpack_require__(<span class=\"code-number\">243</span>);\n","__webpack_require__(<span class=\"code-number\">244</span>);\n","__webpack_require__(<span class=\"code-number\">245</span>);\n","__webpack_require__(<span class=\"code-number\">246</span>);\n","__webpack_require__(<span class=\"code-number\">247</span>);\n","__webpack_require__(<span class=\"code-number\">248</span>);\n","__webpack_require__(<span class=\"code-number\">249</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = path.Symbol;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 231 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> isArray = __webpack_require__(<span class=\"code-number\">52</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> toObject = __webpack_require__(<span class=\"code-number\">38</span>);\n","<span class=\"code-keyword\">var</span> toLength = __webpack_require__(<span class=\"code-number\">36</span>);\n","<span class=\"code-keyword\">var</span> createProperty = __webpack_require__(<span class=\"code-number\">91</span>);\n","<span class=\"code-keyword\">var</span> arraySpeciesCreate = __webpack_require__(<span class=\"code-number\">86</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodHasSpeciesSupport = __webpack_require__(<span class=\"code-number\">53</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> V8_VERSION = __webpack_require__(<span class=\"code-number\">83</span>);\n","\n","<span class=\"code-keyword\">var</span> IS_CONCAT_SPREADABLE = wellKnownSymbol(<span class=\"code-string\">'isConcatSpreadable'</span>);\n","<span class=\"code-keyword\">var</span> MAX_SAFE_INTEGER = <span class=\"code-number\">0x1FFFFFFFFFFFFF</span>;\n","<span class=\"code-keyword\">var</span> MAXIMUM_ALLOWED_INDEX_EXCEEDED = <span class=\"code-string\">'Maximum allowed index exceeded'</span>;\n","\n","<span class=\"code-comment\">// We can't use this feature detection in V8 since it causes</span>\n","<span class=\"code-comment\">// deoptimization and serious performance degradation</span>\n","<span class=\"code-comment\">// https://github.com/zloirock/core-js/issues/679</span>\n","<span class=\"code-keyword\">var</span> IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION &gt;= <span class=\"code-number\">51</span> || !fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">var</span> array = [];\n","  array[IS_CONCAT_SPREADABLE] = <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">return</span> array.concat()[<span class=\"code-number\">0</span>] !== array;\n","});\n","\n","<span class=\"code-keyword\">var</span> SPECIES_SUPPORT = arrayMethodHasSpeciesSupport(<span class=\"code-string\">'concat'</span>);\n","\n","<span class=\"code-keyword\">var</span> isConcatSpreadable = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">O</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (!isObject(O)) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">var</span> spreadable = O[IS_CONCAT_SPREADABLE];\n","  <span class=\"code-keyword\">return</span> spreadable !== <span class=\"code-literal\">undefined</span> ? !!spreadable : isArray(O);\n","};\n","\n","<span class=\"code-keyword\">var</span> FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n","\n","<span class=\"code-comment\">// `Array.prototype.concat` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.concat</span>\n","<span class=\"code-comment\">// with adding support of @@isConcatSpreadable and @@species</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: FORCED }, {\n","  concat: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">concat</span>(<span class=\"code-params\">arg</span>) </span>{ <span class=\"code-comment\">// eslint-disable-line no-unused-vars</span>\n","    <span class=\"code-keyword\">var</span> O = toObject(<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">var</span> A = arraySpeciesCreate(O, <span class=\"code-number\">0</span>);\n","    <span class=\"code-keyword\">var</span> n = <span class=\"code-number\">0</span>;\n","    <span class=\"code-keyword\">var</span> i, k, length, len, E;\n","    <span class=\"code-keyword\">for</span> (i = <span class=\"code-number\">-1</span>, length = <span class=\"code-built_in\">arguments</span>.length; i &lt; length; i++) {\n","      E = i === <span class=\"code-number\">-1</span> ? O : <span class=\"code-built_in\">arguments</span>[i];\n","      <span class=\"code-keyword\">if</span> (isConcatSpreadable(E)) {\n","        len = toLength(E.length);\n","        <span class=\"code-keyword\">if</span> (n + len &gt; MAX_SAFE_INTEGER) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n","        <span class=\"code-keyword\">for</span> (k = <span class=\"code-number\">0</span>; k &lt; len; k++, n++) <span class=\"code-keyword\">if</span> (k <span class=\"code-keyword\">in</span> E) createProperty(A, n, E[k]);\n","      } <span class=\"code-keyword\">else</span> {\n","        <span class=\"code-keyword\">if</span> (n &gt;= MAX_SAFE_INTEGER) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n","        createProperty(A, n++, E);\n","      }\n","    }\n","    A.length = n;\n","    <span class=\"code-keyword\">return</span> A;\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 232 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> getBuiltIn = __webpack_require__(<span class=\"code-number\">28</span>);\n","<span class=\"code-keyword\">var</span> IS_PURE = __webpack_require__(<span class=\"code-number\">37</span>);\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> NATIVE_SYMBOL = __webpack_require__(<span class=\"code-number\">78</span>);\n","<span class=\"code-keyword\">var</span> USE_SYMBOL_AS_UID = __webpack_require__(<span class=\"code-number\">104</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> has = __webpack_require__(<span class=\"code-number\">15</span>);\n","<span class=\"code-keyword\">var</span> isArray = __webpack_require__(<span class=\"code-number\">52</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> anObject = __webpack_require__(<span class=\"code-number\">24</span>);\n","<span class=\"code-keyword\">var</span> toObject = __webpack_require__(<span class=\"code-number\">38</span>);\n","<span class=\"code-keyword\">var</span> toIndexedObject = __webpack_require__(<span class=\"code-number\">27</span>);\n","<span class=\"code-keyword\">var</span> toPrimitive = __webpack_require__(<span class=\"code-number\">56</span>);\n","<span class=\"code-keyword\">var</span> createPropertyDescriptor = __webpack_require__(<span class=\"code-number\">35</span>);\n","<span class=\"code-keyword\">var</span> nativeObjectCreate = __webpack_require__(<span class=\"code-number\">48</span>);\n","<span class=\"code-keyword\">var</span> objectKeys = __webpack_require__(<span class=\"code-number\">57</span>);\n","<span class=\"code-keyword\">var</span> getOwnPropertyNamesModule = __webpack_require__(<span class=\"code-number\">119</span>);\n","<span class=\"code-keyword\">var</span> getOwnPropertyNamesExternal = __webpack_require__(<span class=\"code-number\">233</span>);\n","<span class=\"code-keyword\">var</span> getOwnPropertySymbolsModule = __webpack_require__(<span class=\"code-number\">120</span>);\n","<span class=\"code-keyword\">var</span> getOwnPropertyDescriptorModule = __webpack_require__(<span class=\"code-number\">68</span>);\n","<span class=\"code-keyword\">var</span> definePropertyModule = __webpack_require__(<span class=\"code-number\">18</span>);\n","<span class=\"code-keyword\">var</span> propertyIsEnumerableModule = __webpack_require__(<span class=\"code-number\">55</span>);\n","<span class=\"code-keyword\">var</span> createNonEnumerableProperty = __webpack_require__(<span class=\"code-number\">17</span>);\n","<span class=\"code-keyword\">var</span> redefine = __webpack_require__(<span class=\"code-number\">50</span>);\n","<span class=\"code-keyword\">var</span> shared = __webpack_require__(<span class=\"code-number\">74</span>);\n","<span class=\"code-keyword\">var</span> sharedKey = __webpack_require__(<span class=\"code-number\">59</span>);\n","<span class=\"code-keyword\">var</span> hiddenKeys = __webpack_require__(<span class=\"code-number\">49</span>);\n","<span class=\"code-keyword\">var</span> uid = __webpack_require__(<span class=\"code-number\">60</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> wrappedWellKnownSymbolModule = __webpack_require__(<span class=\"code-number\">95</span>);\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","<span class=\"code-keyword\">var</span> setToStringTag = __webpack_require__(<span class=\"code-number\">41</span>);\n","<span class=\"code-keyword\">var</span> InternalStateModule = __webpack_require__(<span class=\"code-number\">42</span>);\n","<span class=\"code-keyword\">var</span> $forEach = __webpack_require__(<span class=\"code-number\">33</span>).forEach;\n","\n","<span class=\"code-keyword\">var</span> HIDDEN = sharedKey(<span class=\"code-string\">'hidden'</span>);\n","<span class=\"code-keyword\">var</span> SYMBOL = <span class=\"code-string\">'Symbol'</span>;\n","<span class=\"code-keyword\">var</span> PROTOTYPE = <span class=\"code-string\">'prototype'</span>;\n","<span class=\"code-keyword\">var</span> TO_PRIMITIVE = wellKnownSymbol(<span class=\"code-string\">'toPrimitive'</span>);\n","<span class=\"code-keyword\">var</span> setInternalState = InternalStateModule.set;\n","<span class=\"code-keyword\">var</span> getInternalState = InternalStateModule.getterFor(SYMBOL);\n","<span class=\"code-keyword\">var</span> ObjectPrototype = <span class=\"code-built_in\">Object</span>[PROTOTYPE];\n","<span class=\"code-keyword\">var</span> $<span class=\"code-built_in\">Symbol</span> = global.Symbol;\n","<span class=\"code-keyword\">var</span> $stringify = getBuiltIn(<span class=\"code-string\">'JSON'</span>, <span class=\"code-string\">'stringify'</span>);\n","<span class=\"code-keyword\">var</span> nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n","<span class=\"code-keyword\">var</span> nativeDefineProperty = definePropertyModule.f;\n","<span class=\"code-keyword\">var</span> nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\n","<span class=\"code-keyword\">var</span> nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\n","<span class=\"code-keyword\">var</span> AllSymbols = shared(<span class=\"code-string\">'symbols'</span>);\n","<span class=\"code-keyword\">var</span> ObjectPrototypeSymbols = shared(<span class=\"code-string\">'op-symbols'</span>);\n","<span class=\"code-keyword\">var</span> StringToSymbolRegistry = shared(<span class=\"code-string\">'string-to-symbol-registry'</span>);\n","<span class=\"code-keyword\">var</span> SymbolToStringRegistry = shared(<span class=\"code-string\">'symbol-to-string-registry'</span>);\n","<span class=\"code-keyword\">var</span> WellKnownSymbolsStore = shared(<span class=\"code-string\">'wks'</span>);\n","<span class=\"code-keyword\">var</span> QObject = global.QObject;\n","<span class=\"code-comment\">// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173</span>\n","<span class=\"code-keyword\">var</span> USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n","\n","<span class=\"code-comment\">// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687</span>\n","<span class=\"code-keyword\">var</span> setSymbolDescriptor = DESCRIPTORS &amp;&amp; fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">return</span> nativeObjectCreate(nativeDefineProperty({}, <span class=\"code-string\">'a'</span>, {\n","    <span class=\"code-keyword\">get</span>: function () { <span class=\"code-keyword\">return</span> nativeDefineProperty(<span class=\"code-keyword\">this</span>, <span class=\"code-string\">'a'</span>, { <span class=\"code-attr\">value</span>: <span class=\"code-number\">7</span> }).a; }\n","  })).a != <span class=\"code-number\">7</span>;\n","}) ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">O, P, Attributes</span>) </span>{\n","  <span class=\"code-keyword\">var</span> ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n","  <span class=\"code-keyword\">if</span> (ObjectPrototypeDescriptor) <span class=\"code-keyword\">delete</span> ObjectPrototype[P];\n","  nativeDefineProperty(O, P, Attributes);\n","  <span class=\"code-keyword\">if</span> (ObjectPrototypeDescriptor &amp;&amp; O !== ObjectPrototype) {\n","    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n","  }\n","} : nativeDefineProperty;\n","\n","<span class=\"code-keyword\">var</span> wrap = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">tag, description</span>) </span>{\n","  <span class=\"code-keyword\">var</span> symbol = AllSymbols[tag] = nativeObjectCreate($<span class=\"code-built_in\">Symbol</span>[PROTOTYPE]);\n","  setInternalState(symbol, {\n","    type: SYMBOL,\n","    tag: tag,\n","    description: description\n","  });\n","  <span class=\"code-keyword\">if</span> (!DESCRIPTORS) symbol.description = description;\n","  <span class=\"code-keyword\">return</span> symbol;\n","};\n","\n","<span class=\"code-keyword\">var</span> isSymbol = USE_SYMBOL_AS_UID ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">typeof</span> it == <span class=\"code-string\">'symbol'</span>;\n","} : <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-built_in\">Object</span>(it) <span class=\"code-keyword\">instanceof</span> $<span class=\"code-built_in\">Symbol</span>;\n","};\n","\n","<span class=\"code-keyword\">var</span> $defineProperty = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">defineProperty</span>(<span class=\"code-params\">O, P, Attributes</span>) </span>{\n","  <span class=\"code-keyword\">if</span> (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n","  anObject(O);\n","  <span class=\"code-keyword\">var</span> key = toPrimitive(P, <span class=\"code-literal\">true</span>);\n","  anObject(Attributes);\n","  <span class=\"code-keyword\">if</span> (has(AllSymbols, key)) {\n","    <span class=\"code-keyword\">if</span> (!Attributes.enumerable) {\n","      <span class=\"code-keyword\">if</span> (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(<span class=\"code-number\">1</span>, {}));\n","      O[HIDDEN][key] = <span class=\"code-literal\">true</span>;\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-keyword\">if</span> (has(O, HIDDEN) &amp;&amp; O[HIDDEN][key]) O[HIDDEN][key] = <span class=\"code-literal\">false</span>;\n","      Attributes = nativeObjectCreate(Attributes, { <span class=\"code-attr\">enumerable</span>: createPropertyDescriptor(<span class=\"code-number\">0</span>, <span class=\"code-literal\">false</span>) });\n","    } <span class=\"code-keyword\">return</span> setSymbolDescriptor(O, key, Attributes);\n","  } <span class=\"code-keyword\">return</span> nativeDefineProperty(O, key, Attributes);\n","};\n","\n","<span class=\"code-keyword\">var</span> $defineProperties = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">defineProperties</span>(<span class=\"code-params\">O, Properties</span>) </span>{\n","  anObject(O);\n","  <span class=\"code-keyword\">var</span> properties = toIndexedObject(Properties);\n","  <span class=\"code-keyword\">var</span> keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n","  $forEach(keys, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n","  });\n","  <span class=\"code-keyword\">return</span> O;\n","};\n","\n","<span class=\"code-keyword\">var</span> $create = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">create</span>(<span class=\"code-params\">O, Properties</span>) </span>{\n","  <span class=\"code-keyword\">return</span> Properties === <span class=\"code-literal\">undefined</span> ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n","};\n","\n","<span class=\"code-keyword\">var</span> $propertyIsEnumerable = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">propertyIsEnumerable</span>(<span class=\"code-params\">V</span>) </span>{\n","  <span class=\"code-keyword\">var</span> P = toPrimitive(V, <span class=\"code-literal\">true</span>);\n","  <span class=\"code-keyword\">var</span> enumerable = nativePropertyIsEnumerable.call(<span class=\"code-keyword\">this</span>, P);\n","  <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span> === ObjectPrototype &amp;&amp; has(AllSymbols, P) &amp;&amp; !has(ObjectPrototypeSymbols, P)) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  <span class=\"code-keyword\">return</span> enumerable || !has(<span class=\"code-keyword\">this</span>, P) || !has(AllSymbols, P) || has(<span class=\"code-keyword\">this</span>, HIDDEN) &amp;&amp; <span class=\"code-keyword\">this</span>[HIDDEN][P] ? enumerable : <span class=\"code-literal\">true</span>;\n","};\n","\n","<span class=\"code-keyword\">var</span> $getOwnPropertyDescriptor = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getOwnPropertyDescriptor</span>(<span class=\"code-params\">O, P</span>) </span>{\n","  <span class=\"code-keyword\">var</span> it = toIndexedObject(O);\n","  <span class=\"code-keyword\">var</span> key = toPrimitive(P, <span class=\"code-literal\">true</span>);\n","  <span class=\"code-keyword\">if</span> (it === ObjectPrototype &amp;&amp; has(AllSymbols, key) &amp;&amp; !has(ObjectPrototypeSymbols, key)) <span class=\"code-keyword\">return</span>;\n","  <span class=\"code-keyword\">var</span> descriptor = nativeGetOwnPropertyDescriptor(it, key);\n","  <span class=\"code-keyword\">if</span> (descriptor &amp;&amp; has(AllSymbols, key) &amp;&amp; !(has(it, HIDDEN) &amp;&amp; it[HIDDEN][key])) {\n","    descriptor.enumerable = <span class=\"code-literal\">true</span>;\n","  }\n","  <span class=\"code-keyword\">return</span> descriptor;\n","};\n","\n","<span class=\"code-keyword\">var</span> $getOwnPropertyNames = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getOwnPropertyNames</span>(<span class=\"code-params\">O</span>) </span>{\n","  <span class=\"code-keyword\">var</span> names = nativeGetOwnPropertyNames(toIndexedObject(O));\n","  <span class=\"code-keyword\">var</span> result = [];\n","  $forEach(names, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (!has(AllSymbols, key) &amp;&amp; !has(hiddenKeys, key)) result.push(key);\n","  });\n","  <span class=\"code-keyword\">return</span> result;\n","};\n","\n","<span class=\"code-keyword\">var</span> $getOwnPropertySymbols = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getOwnPropertySymbols</span>(<span class=\"code-params\">O</span>) </span>{\n","  <span class=\"code-keyword\">var</span> IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n","  <span class=\"code-keyword\">var</span> names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n","  <span class=\"code-keyword\">var</span> result = [];\n","  $forEach(names, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (has(AllSymbols, key) &amp;&amp; (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n","      result.push(AllSymbols[key]);\n","    }\n","  });\n","  <span class=\"code-keyword\">return</span> result;\n","};\n","\n","<span class=\"code-comment\">// `Symbol` constructor</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol-constructor</span>\n","<span class=\"code-keyword\">if</span> (!NATIVE_SYMBOL) {\n","  $<span class=\"code-built_in\">Symbol</span> = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">Symbol</span>(<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span> <span class=\"code-keyword\">instanceof</span> $<span class=\"code-built_in\">Symbol</span>) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(<span class=\"code-string\">'Symbol is not a constructor'</span>);\n","    <span class=\"code-keyword\">var</span> description = !<span class=\"code-built_in\">arguments</span>.length || <span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">0</span>] === <span class=\"code-literal\">undefined</span> ? <span class=\"code-literal\">undefined</span> : <span class=\"code-built_in\">String</span>(<span class=\"code-built_in\">arguments</span>[<span class=\"code-number\">0</span>]);\n","    <span class=\"code-keyword\">var</span> tag = uid(description);\n","    <span class=\"code-keyword\">var</span> setter = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">value</span>) </span>{\n","      <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">this</span> === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n","      <span class=\"code-keyword\">if</span> (has(<span class=\"code-keyword\">this</span>, HIDDEN) &amp;&amp; has(<span class=\"code-keyword\">this</span>[HIDDEN], tag)) <span class=\"code-keyword\">this</span>[HIDDEN][tag] = <span class=\"code-literal\">false</span>;\n","      setSymbolDescriptor(<span class=\"code-keyword\">this</span>, tag, createPropertyDescriptor(<span class=\"code-number\">1</span>, value));\n","    };\n","    <span class=\"code-keyword\">if</span> (DESCRIPTORS &amp;&amp; USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { <span class=\"code-attr\">configurable</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">set</span>: setter });\n","    <span class=\"code-keyword\">return</span> wrap(tag, description);\n","  };\n","\n","  redefine($<span class=\"code-built_in\">Symbol</span>[PROTOTYPE], <span class=\"code-string\">'toString'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">toString</span>(<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> getInternalState(<span class=\"code-keyword\">this</span>).tag;\n","  });\n","\n","  redefine($<span class=\"code-built_in\">Symbol</span>, <span class=\"code-string\">'withoutSetter'</span>, <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">description</span>) </span>{\n","    <span class=\"code-keyword\">return</span> wrap(uid(description), description);\n","  });\n","\n","  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n","  definePropertyModule.f = $defineProperty;\n","  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n","  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n","  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n","\n","  wrappedWellKnownSymbolModule.f = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">name</span>) </span>{\n","    <span class=\"code-keyword\">return</span> wrap(wellKnownSymbol(name), name);\n","  };\n","\n","  <span class=\"code-keyword\">if</span> (DESCRIPTORS) {\n","    <span class=\"code-comment\">// https://github.com/tc39/proposal-Symbol-description</span>\n","    nativeDefineProperty($<span class=\"code-built_in\">Symbol</span>[PROTOTYPE], <span class=\"code-string\">'description'</span>, {\n","      configurable: <span class=\"code-literal\">true</span>,\n","      <span class=\"code-keyword\">get</span>: function description() {\n","        <span class=\"code-keyword\">return</span> getInternalState(<span class=\"code-keyword\">this</span>).description;\n","      }\n","    });\n","    <span class=\"code-keyword\">if</span> (!IS_PURE) {\n","      redefine(ObjectPrototype, <span class=\"code-string\">'propertyIsEnumerable'</span>, $propertyIsEnumerable, { <span class=\"code-attr\">unsafe</span>: <span class=\"code-literal\">true</span> });\n","    }\n","  }\n","}\n","\n","$({ <span class=\"code-attr\">global</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">wrap</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !NATIVE_SYMBOL, <span class=\"code-attr\">sham</span>: !NATIVE_SYMBOL }, {\n","  <span class=\"code-built_in\">Symbol</span>: $<span class=\"code-built_in\">Symbol</span>\n","});\n","\n","$forEach(objectKeys(WellKnownSymbolsStore), <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">name</span>) </span>{\n","  defineWellKnownSymbol(name);\n","});\n","\n","$({ <span class=\"code-attr\">target</span>: SYMBOL, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !NATIVE_SYMBOL }, {\n","  <span class=\"code-comment\">// `Symbol.for` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.for</span>\n","  <span class=\"code-string\">'for'</span>: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key</span>) </span>{\n","    <span class=\"code-keyword\">var</span> string = <span class=\"code-built_in\">String</span>(key);\n","    <span class=\"code-keyword\">if</span> (has(StringToSymbolRegistry, string)) <span class=\"code-keyword\">return</span> StringToSymbolRegistry[string];\n","    <span class=\"code-keyword\">var</span> symbol = $<span class=\"code-built_in\">Symbol</span>(string);\n","    StringToSymbolRegistry[string] = symbol;\n","    SymbolToStringRegistry[symbol] = string;\n","    <span class=\"code-keyword\">return</span> symbol;\n","  },\n","  <span class=\"code-comment\">// `Symbol.keyFor` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.keyfor</span>\n","  keyFor: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">keyFor</span>(<span class=\"code-params\">sym</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (!isSymbol(sym)) <span class=\"code-keyword\">throw</span> <span class=\"code-built_in\">TypeError</span>(sym + <span class=\"code-string\">' is not a symbol'</span>);\n","    <span class=\"code-keyword\">if</span> (has(SymbolToStringRegistry, sym)) <span class=\"code-keyword\">return</span> SymbolToStringRegistry[sym];\n","  },\n","  useSetter: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ USE_SETTER = <span class=\"code-literal\">true</span>; },\n","  useSimple: <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ USE_SETTER = <span class=\"code-literal\">false</span>; }\n","});\n","\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Object'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !NATIVE_SYMBOL, <span class=\"code-attr\">sham</span>: !DESCRIPTORS }, {\n","  <span class=\"code-comment\">// `Object.create` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.create</span>\n","  create: $create,\n","  <span class=\"code-comment\">// `Object.defineProperty` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.defineproperty</span>\n","  defineProperty: $defineProperty,\n","  <span class=\"code-comment\">// `Object.defineProperties` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.defineproperties</span>\n","  defineProperties: $defineProperties,\n","  <span class=\"code-comment\">// `Object.getOwnPropertyDescriptor` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors</span>\n","  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n","});\n","\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Object'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !NATIVE_SYMBOL }, {\n","  <span class=\"code-comment\">// `Object.getOwnPropertyNames` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.getownpropertynames</span>\n","  getOwnPropertyNames: $getOwnPropertyNames,\n","  <span class=\"code-comment\">// `Object.getOwnPropertySymbols` method</span>\n","  <span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.getownpropertysymbols</span>\n","  getOwnPropertySymbols: $getOwnPropertySymbols\n","});\n","\n","<span class=\"code-comment\">// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives</span>\n","<span class=\"code-comment\">// https://bugs.chromium.org/p/v8/issues/detail?id=3443</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Object'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{ getOwnPropertySymbolsModule.f(<span class=\"code-number\">1</span>); }) }, {\n","  getOwnPropertySymbols: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getOwnPropertySymbols</span>(<span class=\"code-params\">it</span>) </span>{\n","    <span class=\"code-keyword\">return</span> getOwnPropertySymbolsModule.f(toObject(it));\n","  }\n","});\n","\n","<span class=\"code-comment\">// `JSON.stringify` method behavior with symbols</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-json.stringify</span>\n","<span class=\"code-keyword\">if</span> ($stringify) {\n","  <span class=\"code-keyword\">var</span> FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> symbol = $<span class=\"code-built_in\">Symbol</span>();\n","    <span class=\"code-comment\">// MS Edge converts symbol values to JSON as {}</span>\n","    <span class=\"code-keyword\">return</span> $stringify([symbol]) != <span class=\"code-string\">'[null]'</span>\n","      <span class=\"code-comment\">// WebKit converts symbol values to JSON as null</span>\n","      || $stringify({ <span class=\"code-attr\">a</span>: symbol }) != <span class=\"code-string\">'{}'</span>\n","      <span class=\"code-comment\">// V8 throws on boxed symbols</span>\n","      || $stringify(<span class=\"code-built_in\">Object</span>(symbol)) != <span class=\"code-string\">'{}'</span>;\n","  });\n","\n","  $({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'JSON'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: FORCED_JSON_STRINGIFY }, {\n","    <span class=\"code-comment\">// eslint-disable-next-line no-unused-vars</span>\n","    stringify: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">stringify</span>(<span class=\"code-params\">it, replacer, space</span>) </span>{\n","      <span class=\"code-keyword\">var</span> args = [it];\n","      <span class=\"code-keyword\">var</span> index = <span class=\"code-number\">1</span>;\n","      <span class=\"code-keyword\">var</span> $replacer;\n","      <span class=\"code-keyword\">while</span> (<span class=\"code-built_in\">arguments</span>.length &gt; index) args.push(<span class=\"code-built_in\">arguments</span>[index++]);\n","      $replacer = replacer;\n","      <span class=\"code-keyword\">if</span> (!isObject(replacer) &amp;&amp; it === <span class=\"code-literal\">undefined</span> || isSymbol(it)) <span class=\"code-keyword\">return</span>; <span class=\"code-comment\">// IE8 returns string on undefined</span>\n","      <span class=\"code-keyword\">if</span> (!isArray(replacer)) replacer = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">key, value</span>) </span>{\n","        <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> $replacer == <span class=\"code-string\">'function'</span>) value = $replacer.call(<span class=\"code-keyword\">this</span>, key, value);\n","        <span class=\"code-keyword\">if</span> (!isSymbol(value)) <span class=\"code-keyword\">return</span> value;\n","      };\n","      args[<span class=\"code-number\">1</span>] = replacer;\n","      <span class=\"code-keyword\">return</span> $stringify.apply(<span class=\"code-literal\">null</span>, args);\n","    }\n","  });\n","}\n","\n","<span class=\"code-comment\">// `Symbol.prototype[@@toPrimitive]` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive</span>\n","<span class=\"code-keyword\">if</span> (!$<span class=\"code-built_in\">Symbol</span>[PROTOTYPE][TO_PRIMITIVE]) {\n","  createNonEnumerableProperty($<span class=\"code-built_in\">Symbol</span>[PROTOTYPE], TO_PRIMITIVE, $<span class=\"code-built_in\">Symbol</span>[PROTOTYPE].valueOf);\n","}\n","<span class=\"code-comment\">// `Symbol.prototype[@@toStringTag]` property</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag</span>\n","setToStringTag($<span class=\"code-built_in\">Symbol</span>, SYMBOL);\n","\n","hiddenKeys[HIDDEN] = <span class=\"code-literal\">true</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 233 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> toIndexedObject = __webpack_require__(<span class=\"code-number\">27</span>);\n","<span class=\"code-keyword\">var</span> nativeGetOwnPropertyNames = __webpack_require__(<span class=\"code-number\">119</span>).f;\n","\n","<span class=\"code-keyword\">var</span> toString = {}.toString;\n","\n","<span class=\"code-keyword\">var</span> windowNames = <span class=\"code-keyword\">typeof</span> <span class=\"code-built_in\">window</span> == <span class=\"code-string\">'object'</span> &amp;&amp; <span class=\"code-built_in\">window</span> &amp;&amp; <span class=\"code-built_in\">Object</span>.getOwnPropertyNames\n","  ? <span class=\"code-built_in\">Object</span>.getOwnPropertyNames(<span class=\"code-built_in\">window</span>) : [];\n","\n","<span class=\"code-keyword\">var</span> getWindowNames = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">try</span> {\n","    <span class=\"code-keyword\">return</span> nativeGetOwnPropertyNames(it);\n","  } <span class=\"code-keyword\">catch</span> (error) {\n","    <span class=\"code-keyword\">return</span> windowNames.slice();\n","  }\n","};\n","\n","<span class=\"code-comment\">// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window</span>\n","<span class=\"code-built_in\">module</span>.exports.f = <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">getOwnPropertyNames</span>(<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">return</span> windowNames &amp;&amp; toString.call(it) == <span class=\"code-string\">'[object Window]'</span>\n","    ? getWindowNames(it)\n","    : nativeGetOwnPropertyNames(toIndexedObject(it));\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 234 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.asyncIterator` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.asynciterator</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'asyncIterator'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 235 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// empty</span>\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 236 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.hasInstance` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.hasinstance</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'hasInstance'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 237 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.isConcatSpreadable` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'isConcatSpreadable'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 238 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.match` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.match</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'match'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 239 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.matchAll` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.matchall</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'matchAll'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 240 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.replace` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.replace</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'replace'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 241 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.search` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.search</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'search'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 242 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.species` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.species</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'species'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 243 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.split` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.split</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'split'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 244 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.toPrimitive` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.toprimitive</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'toPrimitive'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 245 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.toStringTag` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.tostringtag</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'toStringTag'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 246 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.unscopables` well-known symbol</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-symbol.unscopables</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'unscopables'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 247 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> setToStringTag = __webpack_require__(<span class=\"code-number\">41</span>);\n","\n","<span class=\"code-comment\">// JSON[@@toStringTag] property</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-json-@@tostringtag</span>\n","setToStringTag(global.JSON, <span class=\"code-string\">'JSON'</span>, <span class=\"code-literal\">true</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 248 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// empty</span>\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 249 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports</span>) </span>{\n","\n","<span class=\"code-comment\">// empty</span>\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 250 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.asyncDispose` well-known symbol</span>\n","<span class=\"code-comment\">// https://github.com/tc39/proposal-using-statement</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'asyncDispose'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 251 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.dispose` well-known symbol</span>\n","<span class=\"code-comment\">// https://github.com/tc39/proposal-using-statement</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'dispose'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 252 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.observable` well-known symbol</span>\n","<span class=\"code-comment\">// https://github.com/tc39/proposal-observable</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'observable'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 253 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","<span class=\"code-comment\">// `Symbol.patternMatch` well-known symbol</span>\n","<span class=\"code-comment\">// https://github.com/tc39/proposal-pattern-matching</span>\n","defineWellKnownSymbol(<span class=\"code-string\">'patternMatch'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 254 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-comment\">// <span class=\"code-doctag\">TODO:</span> remove from `core-js@4`</span>\n","<span class=\"code-keyword\">var</span> defineWellKnownSymbol = __webpack_require__(<span class=\"code-number\">11</span>);\n","\n","defineWellKnownSymbol(<span class=\"code-string\">'replaceAll'</span>);\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 255 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">256</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = path.setTimeout;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 256 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> userAgent = __webpack_require__(<span class=\"code-number\">63</span>);\n","\n","<span class=\"code-keyword\">var</span> slice = [].slice;\n","<span class=\"code-keyword\">var</span> MSIE = <span class=\"code-regexp\">/MSIE .\\./</span>.test(userAgent); <span class=\"code-comment\">// &lt;- dirty ie9- check</span>\n","\n","<span class=\"code-keyword\">var</span> wrap = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">scheduler</span>) </span>{\n","  <span class=\"code-keyword\">return</span> <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">handler, timeout <span class=\"code-regexp\">/* , ...arguments */</span></span>) </span>{\n","    <span class=\"code-keyword\">var</span> boundArgs = <span class=\"code-built_in\">arguments</span>.length &gt; <span class=\"code-number\">2</span>;\n","    <span class=\"code-keyword\">var</span> args = boundArgs ? slice.call(<span class=\"code-built_in\">arguments</span>, <span class=\"code-number\">2</span>) : <span class=\"code-literal\">undefined</span>;\n","    <span class=\"code-keyword\">return</span> scheduler(boundArgs ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","      <span class=\"code-comment\">// eslint-disable-next-line no-new-func</span>\n","      (<span class=\"code-keyword\">typeof</span> handler == <span class=\"code-string\">'function'</span> ? handler : <span class=\"code-built_in\">Function</span>(handler)).apply(<span class=\"code-keyword\">this</span>, args);\n","    } : handler, timeout);\n","  };\n","};\n","\n","<span class=\"code-comment\">// ie9- setTimeout &amp; setInterval additional parameters fix</span>\n","<span class=\"code-comment\">// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers</span>\n","$({ <span class=\"code-attr\">global</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">bind</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: MSIE }, {\n","  <span class=\"code-comment\">// `setTimeout` method</span>\n","  <span class=\"code-comment\">// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout</span>\n","  setTimeout: wrap(global.setTimeout),\n","  <span class=\"code-comment\">// `setInterval` method</span>\n","  <span class=\"code-comment\">// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval</span>\n","  setInterval: wrap(global.setInterval)\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 257 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">258</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 258 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> slice = __webpack_require__(<span class=\"code-number\">259</span>);\n","\n","<span class=\"code-keyword\">var</span> ArrayPrototype = <span class=\"code-built_in\">Array</span>.prototype;\n","\n","<span class=\"code-built_in\">module</span>.exports = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">it</span>) </span>{\n","  <span class=\"code-keyword\">var</span> own = it.slice;\n","  <span class=\"code-keyword\">return</span> it === ArrayPrototype || (it <span class=\"code-keyword\">instanceof</span> <span class=\"code-built_in\">Array</span> &amp;&amp; own === ArrayPrototype.slice) ? slice : own;\n","};\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 259 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">260</span>);\n","<span class=\"code-keyword\">var</span> entryVirtual = __webpack_require__(<span class=\"code-number\">16</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = entryVirtual(<span class=\"code-string\">'Array'</span>).slice;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 260 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> isObject = __webpack_require__(<span class=\"code-number\">13</span>);\n","<span class=\"code-keyword\">var</span> isArray = __webpack_require__(<span class=\"code-number\">52</span>);\n","<span class=\"code-keyword\">var</span> toAbsoluteIndex = __webpack_require__(<span class=\"code-number\">72</span>);\n","<span class=\"code-keyword\">var</span> toLength = __webpack_require__(<span class=\"code-number\">36</span>);\n","<span class=\"code-keyword\">var</span> toIndexedObject = __webpack_require__(<span class=\"code-number\">27</span>);\n","<span class=\"code-keyword\">var</span> createProperty = __webpack_require__(<span class=\"code-number\">91</span>);\n","<span class=\"code-keyword\">var</span> wellKnownSymbol = __webpack_require__(<span class=\"code-number\">9</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodHasSpeciesSupport = __webpack_require__(<span class=\"code-number\">53</span>);\n","<span class=\"code-keyword\">var</span> arrayMethodUsesToLength = __webpack_require__(<span class=\"code-number\">25</span>);\n","\n","<span class=\"code-keyword\">var</span> HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport(<span class=\"code-string\">'slice'</span>);\n","<span class=\"code-keyword\">var</span> USES_TO_LENGTH = arrayMethodUsesToLength(<span class=\"code-string\">'slice'</span>, { <span class=\"code-attr\">ACCESSORS</span>: <span class=\"code-literal\">true</span>, <span class=\"code-number\">0</span>: <span class=\"code-number\">0</span>, <span class=\"code-number\">1</span>: <span class=\"code-number\">2</span> });\n","\n","<span class=\"code-keyword\">var</span> SPECIES = wellKnownSymbol(<span class=\"code-string\">'species'</span>);\n","<span class=\"code-keyword\">var</span> nativeSlice = [].slice;\n","<span class=\"code-keyword\">var</span> max = <span class=\"code-built_in\">Math</span>.max;\n","\n","<span class=\"code-comment\">// `Array.prototype.slice` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-array.prototype.slice</span>\n","<span class=\"code-comment\">// fallback for not array-like ES3 strings and DOM objects</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Array'</span>, <span class=\"code-attr\">proto</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n","  slice: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">slice</span>(<span class=\"code-params\">start, end</span>) </span>{\n","    <span class=\"code-keyword\">var</span> O = toIndexedObject(<span class=\"code-keyword\">this</span>);\n","    <span class=\"code-keyword\">var</span> length = toLength(O.length);\n","    <span class=\"code-keyword\">var</span> k = toAbsoluteIndex(start, length);\n","    <span class=\"code-keyword\">var</span> fin = toAbsoluteIndex(end === <span class=\"code-literal\">undefined</span> ? length : end, length);\n","    <span class=\"code-comment\">// inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible</span>\n","    <span class=\"code-keyword\">var</span> Constructor, result, n;\n","    <span class=\"code-keyword\">if</span> (isArray(O)) {\n","      Constructor = O.constructor;\n","      <span class=\"code-comment\">// cross-realm fallback</span>\n","      <span class=\"code-keyword\">if</span> (<span class=\"code-keyword\">typeof</span> Constructor == <span class=\"code-string\">'function'</span> &amp;&amp; (Constructor === <span class=\"code-built_in\">Array</span> || isArray(Constructor.prototype))) {\n","        Constructor = <span class=\"code-literal\">undefined</span>;\n","      } <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> (isObject(Constructor)) {\n","        Constructor = Constructor[SPECIES];\n","        <span class=\"code-keyword\">if</span> (Constructor === <span class=\"code-literal\">null</span>) Constructor = <span class=\"code-literal\">undefined</span>;\n","      }\n","      <span class=\"code-keyword\">if</span> (Constructor === <span class=\"code-built_in\">Array</span> || Constructor === <span class=\"code-literal\">undefined</span>) {\n","        <span class=\"code-keyword\">return</span> nativeSlice.call(O, k, fin);\n","      }\n","    }\n","    result = <span class=\"code-keyword\">new</span> (Constructor === <span class=\"code-literal\">undefined</span> ? <span class=\"code-built_in\">Array</span> : Constructor)(max(fin - k, <span class=\"code-number\">0</span>));\n","    <span class=\"code-keyword\">for</span> (n = <span class=\"code-number\">0</span>; k &lt; fin; k++, n++) <span class=\"code-keyword\">if</span> (k <span class=\"code-keyword\">in</span> O) createProperty(result, n, O[k]);\n","    result.length = n;\n","    <span class=\"code-keyword\">return</span> result;\n","  }\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 261 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">262</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 262 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">263</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 263 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">264</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = path.parseInt;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 264 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> parseIntImplementation = __webpack_require__(<span class=\"code-number\">265</span>);\n","\n","<span class=\"code-comment\">// `parseInt` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-parseint-string-radix</span>\n","$({ <span class=\"code-attr\">global</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: <span class=\"code-built_in\">parseInt</span> != parseIntImplementation }, {\n","  <span class=\"code-built_in\">parseInt</span>: parseIntImplementation\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 265 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> global = __webpack_require__(<span class=\"code-number\">8</span>);\n","<span class=\"code-keyword\">var</span> trim = __webpack_require__(<span class=\"code-number\">92</span>).trim;\n","<span class=\"code-keyword\">var</span> whitespaces = __webpack_require__(<span class=\"code-number\">67</span>);\n","\n","<span class=\"code-keyword\">var</span> $<span class=\"code-built_in\">parseInt</span> = global.parseInt;\n","<span class=\"code-keyword\">var</span> hex = <span class=\"code-regexp\">/^[+-]?0[Xx]/</span>;\n","<span class=\"code-keyword\">var</span> FORCED = $<span class=\"code-built_in\">parseInt</span>(whitespaces + <span class=\"code-string\">'08'</span>) !== <span class=\"code-number\">8</span> || $<span class=\"code-built_in\">parseInt</span>(whitespaces + <span class=\"code-string\">'0x16'</span>) !== <span class=\"code-number\">22</span>;\n","\n","<span class=\"code-comment\">// `parseInt` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-parseint-string-radix</span>\n","<span class=\"code-built_in\">module</span>.exports = FORCED ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">parseInt</span>(<span class=\"code-params\">string, radix</span>) </span>{\n","  <span class=\"code-keyword\">var</span> S = trim(<span class=\"code-built_in\">String</span>(string));\n","  <span class=\"code-keyword\">return</span> $<span class=\"code-built_in\">parseInt</span>(S, (radix &gt;&gt;&gt; <span class=\"code-number\">0</span>) || (hex.test(S) ? <span class=\"code-number\">16</span> : <span class=\"code-number\">10</span>));\n","} : $<span class=\"code-built_in\">parseInt</span>;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 266 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u7F16\u8F91\u5668\u914D\u7F6E\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _assign = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">267</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> menus_1 = __importDefault(__webpack_require__(<span class=\"code-number\">272</span>));\n","\n","<span class=\"code-keyword\">var</span> events_1 = __importDefault(__webpack_require__(<span class=\"code-number\">273</span>));\n","\n","<span class=\"code-keyword\">var</span> style_1 = __importDefault(__webpack_require__(<span class=\"code-number\">122</span>));\n","\n","<span class=\"code-keyword\">var</span> paste_1 = __importDefault(__webpack_require__(<span class=\"code-number\">274</span>));\n","\n","<span class=\"code-keyword\">var</span> cmd_1 = __importDefault(__webpack_require__(<span class=\"code-number\">275</span>));\n","\n","<span class=\"code-keyword\">var</span> image_1 = __importDefault(__webpack_require__(<span class=\"code-number\">276</span>));\n","\n","<span class=\"code-keyword\">var</span> text_1 = __importDefault(__webpack_require__(<span class=\"code-number\">277</span>));\n","\n","<span class=\"code-keyword\">var</span> lang_1 = __importDefault(__webpack_require__(<span class=\"code-number\">278</span>));\n","\n","<span class=\"code-keyword\">var</span> history_1 = __importDefault(__webpack_require__(<span class=\"code-number\">279</span>));\n","\n","<span class=\"code-keyword\">var</span> video_1 = __importDefault(__webpack_require__(<span class=\"code-number\">280</span>)); <span class=\"code-comment\">// \u5408\u5E76\u6240\u6709\u7684\u914D\u7F6E\u4FE1\u606F</span>\n","\n","\n","<span class=\"code-keyword\">var</span> defaultConfig = (<span class=\"code-number\">0</span>, _assign[<span class=\"code-string\">\"default\"</span>])({}, menus_1[<span class=\"code-string\">\"default\"</span>], events_1[<span class=\"code-string\">\"default\"</span>], style_1[<span class=\"code-string\">\"default\"</span>], cmd_1[<span class=\"code-string\">\"default\"</span>], paste_1[<span class=\"code-string\">\"default\"</span>], image_1[<span class=\"code-string\">\"default\"</span>], text_1[<span class=\"code-string\">\"default\"</span>], lang_1[<span class=\"code-string\">\"default\"</span>], history_1[<span class=\"code-string\">\"default\"</span>], video_1[<span class=\"code-string\">\"default\"</span>], <span class=\"code-comment\">//\u94FE\u63A5\u6821\u9A8C\u7684\u914D\u7F6E\u51FD\u6570</span>\n","{\n","  linkCheck: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">linkCheck</span>(<span class=\"code-params\">text, link</span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  }\n","}, <span class=\"code-comment\">//\u7F51\u7EDC\u56FE\u7247\u6821\u9A8C\u7684\u914D\u7F6E\u51FD\u6570</span>\n","{\n","  linkImgCheck: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">linkImgCheck</span>(<span class=\"code-params\">src</span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  }\n","});\n","exports[<span class=\"code-string\">\"default\"</span>] = defaultConfig;\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 267 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-built_in\">module</span>.exports = __webpack_require__(<span class=\"code-number\">268</span>);\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 268 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> parent = __webpack_require__(<span class=\"code-number\">269</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = parent;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 269 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","__webpack_require__(<span class=\"code-number\">270</span>);\n","<span class=\"code-keyword\">var</span> path = __webpack_require__(<span class=\"code-number\">10</span>);\n","\n","<span class=\"code-built_in\">module</span>.exports = path.Object.assign;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 270 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-keyword\">var</span> $ = __webpack_require__(<span class=\"code-number\">4</span>);\n","<span class=\"code-keyword\">var</span> assign = __webpack_require__(<span class=\"code-number\">271</span>);\n","\n","<span class=\"code-comment\">// `Object.assign` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.assign</span>\n","$({ <span class=\"code-attr\">target</span>: <span class=\"code-string\">'Object'</span>, <span class=\"code-attr\">stat</span>: <span class=\"code-literal\">true</span>, <span class=\"code-attr\">forced</span>: <span class=\"code-built_in\">Object</span>.assign !== assign }, {\n","  assign: assign\n","});\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 271 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-keyword\">var</span> DESCRIPTORS = __webpack_require__(<span class=\"code-number\">14</span>);\n","<span class=\"code-keyword\">var</span> fails = __webpack_require__(<span class=\"code-number\">12</span>);\n","<span class=\"code-keyword\">var</span> objectKeys = __webpack_require__(<span class=\"code-number\">57</span>);\n","<span class=\"code-keyword\">var</span> getOwnPropertySymbolsModule = __webpack_require__(<span class=\"code-number\">120</span>);\n","<span class=\"code-keyword\">var</span> propertyIsEnumerableModule = __webpack_require__(<span class=\"code-number\">55</span>);\n","<span class=\"code-keyword\">var</span> toObject = __webpack_require__(<span class=\"code-number\">38</span>);\n","<span class=\"code-keyword\">var</span> IndexedObject = __webpack_require__(<span class=\"code-number\">69</span>);\n","\n","<span class=\"code-keyword\">var</span> nativeAssign = <span class=\"code-built_in\">Object</span>.assign;\n","<span class=\"code-keyword\">var</span> defineProperty = <span class=\"code-built_in\">Object</span>.defineProperty;\n","\n","<span class=\"code-comment\">// `Object.assign` method</span>\n","<span class=\"code-comment\">// https://tc39.es/ecma262/#sec-object.assign</span>\n","<span class=\"code-built_in\">module</span>.exports = !nativeAssign || fails(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-comment\">// should have correct order of operations (Edge bug)</span>\n","  <span class=\"code-keyword\">if</span> (DESCRIPTORS &amp;&amp; nativeAssign({ <span class=\"code-attr\">b</span>: <span class=\"code-number\">1</span> }, nativeAssign(defineProperty({}, <span class=\"code-string\">'a'</span>, {\n","    enumerable: <span class=\"code-literal\">true</span>,\n","    <span class=\"code-keyword\">get</span>: function () {\n","      defineProperty(<span class=\"code-keyword\">this</span>, <span class=\"code-string\">'b'</span>, {\n","        value: <span class=\"code-number\">3</span>,\n","        enumerable: <span class=\"code-literal\">false</span>\n","      });\n","    }\n","  }), { <span class=\"code-attr\">b</span>: <span class=\"code-number\">2</span> })).b !== <span class=\"code-number\">1</span>) <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  <span class=\"code-comment\">// should work with symbols and should have deterministic property order (V8 bug)</span>\n","  <span class=\"code-keyword\">var</span> A = {};\n","  <span class=\"code-keyword\">var</span> B = {};\n","  <span class=\"code-comment\">// eslint-disable-next-line no-undef</span>\n","  <span class=\"code-keyword\">var</span> symbol = <span class=\"code-built_in\">Symbol</span>();\n","  <span class=\"code-keyword\">var</span> alphabet = <span class=\"code-string\">'abcdefghijklmnopqrst'</span>;\n","  A[symbol] = <span class=\"code-number\">7</span>;\n","  alphabet.split(<span class=\"code-string\">''</span>).forEach(<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">chr</span>) </span>{ B[chr] = chr; });\n","  <span class=\"code-keyword\">return</span> nativeAssign({}, A)[symbol] != <span class=\"code-number\">7</span> || objectKeys(nativeAssign({}, B)).join(<span class=\"code-string\">''</span>) != alphabet;\n","}) ? <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">assign</span>(<span class=\"code-params\">target, source</span>) </span>{ <span class=\"code-comment\">// eslint-disable-line no-unused-vars</span>\n","  <span class=\"code-keyword\">var</span> T = toObject(target);\n","  <span class=\"code-keyword\">var</span> argumentsLength = <span class=\"code-built_in\">arguments</span>.length;\n","  <span class=\"code-keyword\">var</span> index = <span class=\"code-number\">1</span>;\n","  <span class=\"code-keyword\">var</span> getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n","  <span class=\"code-keyword\">var</span> propertyIsEnumerable = propertyIsEnumerableModule.f;\n","  <span class=\"code-keyword\">while</span> (argumentsLength &gt; index) {\n","    <span class=\"code-keyword\">var</span> S = IndexedObject(<span class=\"code-built_in\">arguments</span>[index++]);\n","    <span class=\"code-keyword\">var</span> keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n","    <span class=\"code-keyword\">var</span> length = keys.length;\n","    <span class=\"code-keyword\">var</span> j = <span class=\"code-number\">0</span>;\n","    <span class=\"code-keyword\">var</span> key;\n","    <span class=\"code-keyword\">while</span> (length &gt; j) {\n","      key = keys[j++];\n","      <span class=\"code-keyword\">if</span> (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n","    }\n","  } <span class=\"code-keyword\">return</span> T;\n","} : nativeAssign;\n","\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 272 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u83DC\u5355\u914D\u7F6E\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","<span class=\"code-keyword\">var</span> SINA_PATH1 = <span class=\"code-string\">'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal'</span>;\n","<span class=\"code-keyword\">var</span> SINA_PATH2 = <span class=\"code-string\">'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal'</span>;\n","<span class=\"code-comment\">/*\u8868\u60C5\u83DC\u5355\u6570\u636E\u7ED3\u6784\u7C7B\u578BEND*/</span>\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  menus: [<span class=\"code-string\">'head'</span>, <span class=\"code-string\">'bold'</span>, <span class=\"code-string\">'fontSize'</span>, <span class=\"code-comment\">// 'customFontSize',</span>\n","  <span class=\"code-string\">'fontName'</span>, <span class=\"code-string\">'italic'</span>, <span class=\"code-string\">'underline'</span>, <span class=\"code-string\">'strikeThrough'</span>, <span class=\"code-string\">'indent'</span>, <span class=\"code-string\">'lineHeight'</span>, <span class=\"code-string\">'foreColor'</span>, <span class=\"code-string\">'backColor'</span>, <span class=\"code-string\">'link'</span>, <span class=\"code-string\">'list'</span>, <span class=\"code-string\">'todo'</span>, <span class=\"code-string\">'justify'</span>, <span class=\"code-string\">'quote'</span>, <span class=\"code-string\">'emoticon'</span>, <span class=\"code-string\">'image'</span>, <span class=\"code-string\">'video'</span>, <span class=\"code-string\">'table'</span>, <span class=\"code-string\">'code'</span>, <span class=\"code-string\">'splitLine'</span>, <span class=\"code-string\">'undo'</span>, <span class=\"code-string\">'redo'</span>],\n","  fontNames: [<span class=\"code-string\">'\u9ED1\u4F53'</span>, <span class=\"code-string\">'\u4EFF\u5B8B'</span>, <span class=\"code-string\">'\u6977\u4F53'</span>, <span class=\"code-string\">'\u6807\u6977\u4F53'</span>, <span class=\"code-string\">'\u534E\u6587\u4EFF\u5B8B'</span>, <span class=\"code-string\">'\u534E\u6587\u6977\u4F53'</span>, <span class=\"code-string\">'\u5B8B\u4F53'</span>, <span class=\"code-string\">'\u5FAE\u8F6F\u96C5\u9ED1'</span>, <span class=\"code-string\">'Arial'</span>, <span class=\"code-string\">'Tahoma'</span>, <span class=\"code-string\">'Verdana'</span>, <span class=\"code-string\">'Times New Roman'</span>, <span class=\"code-string\">'Courier New'</span>],\n","  fontSizes: {\n","    <span class=\"code-string\">'x-small'</span>: {\n","      name: <span class=\"code-string\">'10px'</span>,\n","      value: <span class=\"code-string\">'1'</span>\n","    },\n","    small: {\n","      name: <span class=\"code-string\">'13px'</span>,\n","      value: <span class=\"code-string\">'2'</span>\n","    },\n","    normal: {\n","      name: <span class=\"code-string\">'16px'</span>,\n","      value: <span class=\"code-string\">'3'</span>\n","    },\n","    large: {\n","      name: <span class=\"code-string\">'18px'</span>,\n","      value: <span class=\"code-string\">'4'</span>\n","    },\n","    <span class=\"code-string\">'x-large'</span>: {\n","      name: <span class=\"code-string\">'24px'</span>,\n","      value: <span class=\"code-string\">'5'</span>\n","    },\n","    <span class=\"code-string\">'xx-large'</span>: {\n","      name: <span class=\"code-string\">'32px'</span>,\n","      value: <span class=\"code-string\">'6'</span>\n","    },\n","    <span class=\"code-string\">'xxx-large'</span>: {\n","      name: <span class=\"code-string\">'48px'</span>,\n","      value: <span class=\"code-string\">'7'</span>\n","    }\n","  },\n","  <span class=\"code-comment\">// customFontSize: [ // \u8BE5\u83DC\u5355\u6682\u65F6\u4E0D\u7528 - \u738B\u798F\u670B 20200924</span>\n","  <span class=\"code-comment\">//     { value: '9px', text: '9' },</span>\n","  <span class=\"code-comment\">//     { value: '10px', text: '10' },</span>\n","  <span class=\"code-comment\">//     { value: '12px', text: '12' },</span>\n","  <span class=\"code-comment\">//     { value: '14px', text: '14' },</span>\n","  <span class=\"code-comment\">//     { value: '16px', text: '16' },</span>\n","  <span class=\"code-comment\">//     { value: '20px', text: '20' },</span>\n","  <span class=\"code-comment\">//     { value: '42px', text: '42' },</span>\n","  <span class=\"code-comment\">//     { value: '72px', text: '72' },</span>\n","  <span class=\"code-comment\">// ],</span>\n","  colors: [<span class=\"code-string\">'#000000'</span>, <span class=\"code-string\">'#eeece0'</span>, <span class=\"code-string\">'#1c487f'</span>, <span class=\"code-string\">'#4d80bf'</span>, <span class=\"code-string\">'#c24f4a'</span>, <span class=\"code-string\">'#8baa4a'</span>, <span class=\"code-string\">'#7b5ba1'</span>, <span class=\"code-string\">'#46acc8'</span>, <span class=\"code-string\">'#f9963b'</span>, <span class=\"code-string\">'#ffffff'</span>],\n","  <span class=\"code-comment\">//\u63D2\u5165\u4EE3\u7801\u8BED\u8A00\u914D\u7F6E</span>\n","  languageType: [<span class=\"code-string\">'Bash'</span>, <span class=\"code-string\">'C'</span>, <span class=\"code-string\">'C#'</span>, <span class=\"code-string\">'C++'</span>, <span class=\"code-string\">'CSS'</span>, <span class=\"code-string\">'Java'</span>, <span class=\"code-string\">'JavaScript'</span>, <span class=\"code-string\">'JSON'</span>, <span class=\"code-string\">'TypeScript'</span>, <span class=\"code-string\">'Plain text'</span>, <span class=\"code-string\">'Html'</span>, <span class=\"code-string\">'XML'</span>, <span class=\"code-string\">'SQL'</span>, <span class=\"code-string\">'Go'</span>, <span class=\"code-string\">'Kotlin'</span>, <span class=\"code-string\">'Lua'</span>, <span class=\"code-string\">'Markdown'</span>, <span class=\"code-string\">'PHP'</span>, <span class=\"code-string\">'Python'</span>, <span class=\"code-string\">'Shell Session'</span>, <span class=\"code-string\">'Ruby'</span>],\n","  languageTab: <span class=\"code-string\">'\u3000\u3000\u3000\u3000'</span>,\n","\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u8868\u60C5\u914D\u7F6E\u83DC\u5355\n</span>","<span class=\"code-comment\">   * \u5982\u679C\u4E3Aemoji\u8868\u60C5\u76F4\u63A5\u4F5C\u4E3A\u5143\u7D20\u63D2\u5165\n</span>","<span class=\"code-comment\">   * emoticon:Array&lt;EmotionsType&gt;\n</span>","<span class=\"code-comment\">   */</span>\n","  emotions: [{\n","    <span class=\"code-comment\">// tab \u7684\u6807\u9898</span>\n","    title: <span class=\"code-string\">'\u9ED8\u8BA4'</span>,\n","    <span class=\"code-comment\">// type -&gt; 'emoji' / 'image'</span>\n","    type: <span class=\"code-string\">'image'</span>,\n","    <span class=\"code-comment\">// content -&gt; \u6570\u7EC4</span>\n","    content: [{\n","      alt: <span class=\"code-string\">'[\u574F\u7B11]'</span>,\n","      src: SINA_PATH1 + <span class=\"code-string\">\"/50/pcmoren_huaixiao_org.png\"</span>\n","    }, {\n","      alt: <span class=\"code-string\">'[\u8214\u5C4F]'</span>,\n","      src: SINA_PATH1 + <span class=\"code-string\">\"/40/pcmoren_tian_org.png\"</span>\n","    }, {\n","      alt: <span class=\"code-string\">'[\u6C61]'</span>,\n","      src: SINA_PATH1 + <span class=\"code-string\">\"/3c/pcmoren_wu_org.png\"</span>\n","    }]\n","  }, {\n","    <span class=\"code-comment\">// tab \u7684\u6807\u9898</span>\n","    title: <span class=\"code-string\">'\u65B0\u6D6A'</span>,\n","    <span class=\"code-comment\">// type -&gt; 'emoji' / 'image'</span>\n","    type: <span class=\"code-string\">'image'</span>,\n","    <span class=\"code-comment\">// content -&gt; \u6570\u7EC4</span>\n","    content: [{\n","      src: SINA_PATH2 + <span class=\"code-string\">\"/7a/shenshou_thumb.gif\"</span>,\n","      alt: <span class=\"code-string\">'[\u8349\u6CE5\u9A6C]'</span>\n","    }, {\n","      src: SINA_PATH2 + <span class=\"code-string\">\"/60/horse2_thumb.gif\"</span>,\n","      alt: <span class=\"code-string\">'[\u795E\u9A6C]'</span>\n","    }, {\n","      src: SINA_PATH2 + <span class=\"code-string\">\"/bc/fuyun_thumb.gif\"</span>,\n","      alt: <span class=\"code-string\">'[\u6D6E\u4E91]'</span>\n","    }]\n","  }, {\n","    <span class=\"code-comment\">// tab \u7684\u6807\u9898</span>\n","    title: <span class=\"code-string\">'emoji'</span>,\n","    <span class=\"code-comment\">// type -&gt; 'emoji' / 'image'</span>\n","    type: <span class=\"code-string\">'emoji'</span>,\n","    <span class=\"code-comment\">// content -&gt; \u6570\u7EC4</span>\n","    content: <span class=\"code-string\">'\uD83D\uDE00 \uD83D\uDE03 \uD83D\uDE04 \uD83D\uDE01 \uD83D\uDE06 \uD83D\uDE05 \uD83D\uDE02 \uD83D\uDE0A \uD83D\uDE07 \uD83D\uDE42 \uD83D\uDE43 \uD83D\uDE09 \uD83D\uDE13 \uD83D\uDE2A \uD83D\uDE34 \uD83D\uDE44 \uD83E\uDD14 \uD83D\uDE2C \uD83E\uDD10'</span>.split(<span class=\"code-regexp\">/\\s/</span>)\n","  }, {\n","    <span class=\"code-comment\">// tab \u7684\u6807\u9898</span>\n","    title: <span class=\"code-string\">'\u624B\u52BF'</span>,\n","    <span class=\"code-comment\">// type -&gt; 'emoji' / 'image'</span>\n","    type: <span class=\"code-string\">'emoji'</span>,\n","    <span class=\"code-comment\">// content -&gt; \u6570\u7EC4</span>\n","    content: [<span class=\"code-string\">'\uD83D\uDE4C'</span>, <span class=\"code-string\">'\uD83D\uDC4F'</span>, <span class=\"code-string\">'\uD83D\uDC4B'</span>, <span class=\"code-string\">'\uD83D\uDC4D'</span>, <span class=\"code-string\">'\uD83D\uDC4E'</span>, <span class=\"code-string\">'\uD83D\uDC4A'</span>, <span class=\"code-string\">'\u270A'</span>, <span class=\"code-string\">'\uFE0F\uD83D\uDC4C'</span>, <span class=\"code-string\">'\u270B'</span>, <span class=\"code-string\">'\uD83D\uDC50'</span>, <span class=\"code-string\">'\uD83D\uDCAA'</span>, <span class=\"code-string\">'\uD83D\uDE4F'</span>, <span class=\"code-string\">'\uFE0F\uD83D\uDC46'</span>, <span class=\"code-string\">'\uD83D\uDC47'</span>, <span class=\"code-string\">'\uD83D\uDC48'</span>, <span class=\"code-string\">'\uD83D\uDC49'</span>, <span class=\"code-string\">'\uD83D\uDD95'</span>, <span class=\"code-string\">'\uD83D\uDD90'</span>, <span class=\"code-string\">'\uD83E\uDD18'</span>]\n","  }],\n","  lineHeights: [<span class=\"code-string\">'1'</span>, <span class=\"code-string\">'1.15'</span>, <span class=\"code-string\">'1.6'</span>, <span class=\"code-string\">'2'</span>, <span class=\"code-string\">'2.5'</span>, <span class=\"code-string\">'3'</span>],\n","  undoLimit: <span class=\"code-number\">20</span>,\n","  indentation: <span class=\"code-string\">'2em'</span>\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 273 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u4E8B\u4EF6\u914D\u7F6E\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> const_1 = __webpack_require__(<span class=\"code-number\">26</span>);\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u63D0\u793A\u4FE1\u606F\n</span>","<span class=\"code-comment\"> * @param alertInfo alert info\n</span>","<span class=\"code-comment\"> * @param alertType \u9519\u8BEF\u63D0\u793A\u7C7B\u578B\n</span>","<span class=\"code-comment\"> * @param debugInfo debug info\n</span>","<span class=\"code-comment\"> */</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">customAlert</span>(<span class=\"code-params\">alertInfo, alertType, debugInfo</span>) </span>{\n","  <span class=\"code-built_in\">window</span>.alert(alertInfo);\n","\n","  <span class=\"code-keyword\">if</span> (debugInfo) {\n","    <span class=\"code-built_in\">console</span>.error(<span class=\"code-string\">'wangEditor: '</span> + debugInfo);\n","  }\n","}\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  onchangeTimeout: <span class=\"code-number\">200</span>,\n","  onchange: const_1.EMPTY_FN,\n","  onfocus: const_1.EMPTY_FN,\n","  onblur: const_1.EMPTY_FN,\n","  onCatalogChange: <span class=\"code-literal\">null</span>,\n","  customAlert: customAlert\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 274 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u7C98\u8D34\uFF0C\u914D\u7F6E\u6587\u4EF6\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  <span class=\"code-comment\">// \u7C98\u8D34\u8FC7\u6EE4\u6837\u5F0F\uFF0C\u9ED8\u8BA4\u5F00\u542F</span>\n","  pasteFilterStyle: <span class=\"code-literal\">true</span>,\n","  <span class=\"code-comment\">// \u7C98\u8D34\u5185\u5BB9\u65F6\uFF0C\u5FFD\u7565\u56FE\u7247\u3002\u9ED8\u8BA4\u5173\u95ED</span>\n","  pasteIgnoreImg: <span class=\"code-literal\">false</span>,\n","  <span class=\"code-comment\">// \u5BF9\u7C98\u8D34\u7684\u6587\u5B57\u8FDB\u884C\u81EA\u5B9A\u4E49\u5904\u7406\uFF0C\u8FD4\u56DE\u5904\u7406\u540E\u7684\u7ED3\u679C\u3002\u7F16\u8F91\u5668\u4F1A\u5C06\u5904\u7406\u540E\u7684\u7ED3\u679C\u7C98\u8D34\u5230\u7F16\u8F91\u533A\u57DF\u4E2D\u3002</span>\n","  <span class=\"code-comment\">// IE \u6682\u65F6\u4E0D\u652F\u6301</span>\n","  pasteTextHandle: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">pasteTextHandle</span>(<span class=\"code-params\">content</span>) </span>{\n","    <span class=\"code-comment\">// content \u5373\u7C98\u8D34\u8FC7\u6765\u7684\u5185\u5BB9\uFF08html \u6216 \u7EAF\u6587\u672C\uFF09\uFF0C\u53EF\u8FDB\u884C\u81EA\u5B9A\u4E49\u5904\u7406\u7136\u540E\u8FD4\u56DE</span>\n","    <span class=\"code-keyword\">return</span> content;\n","  }\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 275 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u547D\u4EE4\u914D\u7F6E\u9879\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  styleWithCSS: <span class=\"code-literal\">false</span>\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 276 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u56FE\u7247\u76F8\u5173\u7684\u914D\u7F6E\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> const_1 = __webpack_require__(<span class=\"code-number\">26</span>);\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  <span class=\"code-comment\">// \u663E\u793A\u201C\u63D2\u5165\u7F51\u7EDC\u56FE\u7247\u201D</span>\n","  showLinkImg: <span class=\"code-literal\">true</span>,\n","  <span class=\"code-comment\">// \u63D2\u5165\u56FE\u7247\u6210\u529F\u4E4B\u540E\u7684\u56DE\u8C03\u51FD\u6570</span>\n","  linkImgCallback: const_1.EMPTY_FN,\n","  <span class=\"code-comment\">// accept</span>\n","  uploadImgAccept: [<span class=\"code-string\">'jpg'</span>, <span class=\"code-string\">'jpeg'</span>, <span class=\"code-string\">'png'</span>, <span class=\"code-string\">'gif'</span>, <span class=\"code-string\">'bmp'</span>],\n","  <span class=\"code-comment\">// \u670D\u52A1\u7AEF\u5730\u5740</span>\n","  uploadImgServer: <span class=\"code-string\">''</span>,\n","  <span class=\"code-comment\">// \u4F7F\u7528 base64 \u5B58\u50A8\u56FE\u7247</span>\n","  uploadImgShowBase64: <span class=\"code-literal\">false</span>,\n","  <span class=\"code-comment\">// \u4E0A\u4F20\u56FE\u7247\u7684\u6700\u5927\u4F53\u79EF\uFF0C\u9ED8\u8BA4 5M</span>\n","  uploadImgMaxSize: <span class=\"code-number\">5</span> * <span class=\"code-number\">1024</span> * <span class=\"code-number\">1024</span>,\n","  <span class=\"code-comment\">// \u4E00\u6B21\u6700\u591A\u4E0A\u4F20\u591A\u5C11\u4E2A\u56FE\u7247</span>\n","  uploadImgMaxLength: <span class=\"code-number\">100</span>,\n","  <span class=\"code-comment\">// \u81EA\u5B9A\u4E49\u4E0A\u4F20\u56FE\u7247\u7684\u540D\u79F0</span>\n","  uploadFileName: <span class=\"code-string\">''</span>,\n","  <span class=\"code-comment\">// \u4E0A\u4F20\u56FE\u7247\u81EA\u5B9A\u4E49\u53C2\u6570</span>\n","  uploadImgParams: {},\n","  <span class=\"code-comment\">// \u81EA\u5B9A\u4E49\u53C2\u6570\u62FC\u63A5\u5230 url \u4E2D</span>\n","  uploadImgParamsWithUrl: <span class=\"code-literal\">false</span>,\n","  <span class=\"code-comment\">// \u4E0A\u4F20\u56FE\u7247\u81EA\u5B9A\u4E49 header</span>\n","  uploadImgHeaders: {},\n","  <span class=\"code-comment\">// \u94A9\u5B50\u51FD\u6570</span>\n","  uploadImgHooks: {},\n","  <span class=\"code-comment\">// \u4E0A\u4F20\u56FE\u7247\u8D85\u65F6\u65F6\u95F4 ms</span>\n","  uploadImgTimeout: <span class=\"code-number\">10</span> * <span class=\"code-number\">1000</span>,\n","  <span class=\"code-comment\">// \u8DE8\u57DF\u5E26 cookie</span>\n","  withCredentials: <span class=\"code-literal\">false</span>,\n","  <span class=\"code-comment\">// \u81EA\u5B9A\u4E49\u4E0A\u4F20</span>\n","  customUploadImg: <span class=\"code-literal\">null</span>\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 277 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u9ED8\u8BA4\u5E38\u91CF\u914D\u7F6E\n</span>","<span class=\"code-comment\"> * @author xiaokyo\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  focus: <span class=\"code-literal\">true</span>,\n","  height: <span class=\"code-number\">300</span>,\n","  placeholder: <span class=\"code-string\">'\u8BF7\u8F93\u5165\u6B63\u6587'</span>,\n","  zIndexFullScreen: <span class=\"code-number\">10002</span>,\n","  showFullScreen: <span class=\"code-literal\">true</span>\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 278 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  lang: <span class=\"code-string\">'zh-CN'</span>,\n","  languages: {\n","    <span class=\"code-string\">'zh-CN'</span>: {\n","      wangEditor: {\n","        \u91CD\u7F6E: <span class=\"code-string\">'\u91CD\u7F6E'</span>,\n","        \u63D2\u5165: <span class=\"code-string\">'\u63D2\u5165'</span>,\n","        \u9ED8\u8BA4: <span class=\"code-string\">'\u9ED8\u8BA4'</span>,\n","        \u521B\u5EFA: <span class=\"code-string\">'\u521B\u5EFA'</span>,\n","        \u4FEE\u6539: <span class=\"code-string\">'\u4FEE\u6539'</span>,\n","        \u5982: <span class=\"code-string\">'\u5982'</span>,\n","        \u8BF7\u8F93\u5165\u6B63\u6587: <span class=\"code-string\">'\u8BF7\u8F93\u5165\u6B63\u6587'</span>,\n","        menus: {\n","          title: {\n","            \u6807\u9898: <span class=\"code-string\">'\u6807\u9898'</span>,\n","            \u52A0\u7C97: <span class=\"code-string\">'\u52A0\u7C97'</span>,\n","            \u5B57\u53F7: <span class=\"code-string\">'\u5B57\u53F7'</span>,\n","            \u5B57\u4F53: <span class=\"code-string\">'\u5B57\u4F53'</span>,\n","            \u659C\u4F53: <span class=\"code-string\">'\u659C\u4F53'</span>,\n","            \u4E0B\u5212\u7EBF: <span class=\"code-string\">'\u4E0B\u5212\u7EBF'</span>,\n","            \u5220\u9664\u7EBF: <span class=\"code-string\">'\u5220\u9664\u7EBF'</span>,\n","            \u7F29\u8FDB: <span class=\"code-string\">'\u7F29\u8FDB'</span>,\n","            \u884C\u9AD8: <span class=\"code-string\">'\u884C\u9AD8'</span>,\n","            \u6587\u5B57\u989C\u8272: <span class=\"code-string\">'\u6587\u5B57\u989C\u8272'</span>,\n","            \u80CC\u666F\u8272: <span class=\"code-string\">'\u80CC\u666F\u8272'</span>,\n","            \u94FE\u63A5: <span class=\"code-string\">'\u94FE\u63A5'</span>,\n","            \u5E8F\u5217: <span class=\"code-string\">'\u5E8F\u5217'</span>,\n","            \u5BF9\u9F50: <span class=\"code-string\">'\u5BF9\u9F50'</span>,\n","            \u5F15\u7528: <span class=\"code-string\">'\u5F15\u7528'</span>,\n","            \u8868\u60C5: <span class=\"code-string\">'\u8868\u60C5'</span>,\n","            \u56FE\u7247: <span class=\"code-string\">'\u56FE\u7247'</span>,\n","            \u89C6\u9891: <span class=\"code-string\">'\u89C6\u9891'</span>,\n","            \u8868\u683C: <span class=\"code-string\">'\u8868\u683C'</span>,\n","            \u4EE3\u7801: <span class=\"code-string\">'\u4EE3\u7801'</span>,\n","            \u5206\u5272\u7EBF: <span class=\"code-string\">'\u5206\u5272\u7EBF'</span>,\n","            \u6062\u590D: <span class=\"code-string\">'\u6062\u590D'</span>,\n","            \u64A4\u9500: <span class=\"code-string\">'\u64A4\u9500'</span>,\n","            \u5168\u5C4F: <span class=\"code-string\">'\u5168\u5C4F'</span>,\n","            \u4EE3\u529E\u4E8B\u9879: <span class=\"code-string\">'\u4EE3\u529E\u4E8B\u9879'</span>\n","          },\n","          dropListMenu: {\n","            \u8BBE\u7F6E\u6807\u9898: <span class=\"code-string\">'\u8BBE\u7F6E\u6807\u9898'</span>,\n","            \u80CC\u666F\u989C\u8272: <span class=\"code-string\">'\u80CC\u666F\u989C\u8272'</span>,\n","            \u6587\u5B57\u989C\u8272: <span class=\"code-string\">'\u6587\u5B57\u989C\u8272'</span>,\n","            \u8BBE\u7F6E\u5B57\u53F7: <span class=\"code-string\">'\u8BBE\u7F6E\u5B57\u53F7'</span>,\n","            \u8BBE\u7F6E\u5B57\u4F53: <span class=\"code-string\">'\u8BBE\u7F6E\u5B57\u4F53'</span>,\n","            \u8BBE\u7F6E\u7F29\u8FDB: <span class=\"code-string\">'\u8BBE\u7F6E\u7F29\u8FDB'</span>,\n","            \u5BF9\u9F50\u65B9\u5F0F: <span class=\"code-string\">'\u5BF9\u9F50\u65B9\u5F0F'</span>,\n","            \u8BBE\u7F6E\u884C\u9AD8: <span class=\"code-string\">'\u8BBE\u7F6E\u884C\u9AD8'</span>,\n","            \u5E8F\u5217: <span class=\"code-string\">'\u5E8F\u5217'</span>,\n","            head: {\n","              \u6B63\u6587: <span class=\"code-string\">'\u6B63\u6587'</span>\n","            },\n","            indent: {\n","              \u589E\u52A0\u7F29\u8FDB: <span class=\"code-string\">'\u589E\u52A0\u7F29\u8FDB'</span>,\n","              \u51CF\u5C11\u7F29\u8FDB: <span class=\"code-string\">'\u51CF\u5C11\u7F29\u8FDB'</span>\n","            },\n","            justify: {\n","              \u9760\u5DE6: <span class=\"code-string\">'\u9760\u5DE6'</span>,\n","              \u5C45\u4E2D: <span class=\"code-string\">'\u5C45\u4E2D'</span>,\n","              \u9760\u53F3: <span class=\"code-string\">'\u9760\u53F3'</span>,\n","              \u4E24\u7AEF: <span class=\"code-string\">'\u4E24\u7AEF'</span>\n","            },\n","            list: {\n","              \u65E0\u5E8F\u5217\u8868: <span class=\"code-string\">'\u65E0\u5E8F\u5217\u8868'</span>,\n","              \u6709\u5E8F\u5217\u8868: <span class=\"code-string\">'\u6709\u5E8F\u5217\u8868'</span>\n","            }\n","          },\n","          panelMenus: {\n","            emoticon: {\n","              \u9ED8\u8BA4: <span class=\"code-string\">'\u9ED8\u8BA4'</span>,\n","              \u65B0\u6D6A: <span class=\"code-string\">'\u65B0\u6D6A'</span>,\n","              emoji: <span class=\"code-string\">'emoji'</span>,\n","              \u624B\u52BF: <span class=\"code-string\">'\u624B\u52BF'</span>\n","            },\n","            image: {\n","              \u56FE\u7247\u94FE\u63A5: <span class=\"code-string\">'\u56FE\u7247\u94FE\u63A5'</span>,\n","              \u4E0A\u4F20\u56FE\u7247: <span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247'</span>,\n","              \u7F51\u7EDC\u56FE\u7247: <span class=\"code-string\">'\u7F51\u7EDC\u56FE\u7247'</span>\n","            },\n","            link: {\n","              \u94FE\u63A5: <span class=\"code-string\">'\u94FE\u63A5'</span>,\n","              \u94FE\u63A5\u6587\u5B57: <span class=\"code-string\">'\u94FE\u63A5\u6587\u5B57'</span>,\n","              \u53D6\u6D88\u94FE\u63A5: <span class=\"code-string\">'\u53D6\u6D88\u94FE\u63A5'</span>,\n","              \u67E5\u770B\u94FE\u63A5: <span class=\"code-string\">'\u67E5\u770B\u94FE\u63A5'</span>\n","            },\n","            video: {\n","              \u63D2\u5165\u89C6\u9891: <span class=\"code-string\">'\u63D2\u5165\u89C6\u9891'</span>\n","            },\n","            table: {\n","              \u884C: <span class=\"code-string\">'\u884C'</span>,\n","              \u5217: <span class=\"code-string\">'\u5217'</span>,\n","              \u7684: <span class=\"code-string\">'\u7684'</span>,\n","              \u8868\u683C: <span class=\"code-string\">'\u8868\u683C'</span>,\n","              \u6DFB\u52A0\u884C: <span class=\"code-string\">'\u6DFB\u52A0\u884C'</span>,\n","              \u5220\u9664\u884C: <span class=\"code-string\">'\u5220\u9664\u884C'</span>,\n","              \u6DFB\u52A0\u5217: <span class=\"code-string\">'\u6DFB\u52A0\u5217'</span>,\n","              \u5220\u9664\u5217: <span class=\"code-string\">'\u5220\u9664\u5217'</span>,\n","              \u8BBE\u7F6E\u8868\u5934: <span class=\"code-string\">'\u8BBE\u7F6E\u8868\u5934'</span>,\n","              \u53D6\u6D88\u8868\u5934: <span class=\"code-string\">'\u53D6\u6D88\u8868\u5934'</span>,\n","              \u63D2\u5165\u8868\u683C: <span class=\"code-string\">'\u63D2\u5165\u8868\u683C'</span>,\n","              \u5220\u9664\u8868\u683C: <span class=\"code-string\">'\u5220\u9664\u8868\u683C'</span>\n","            },\n","            code: {\n","              \u5220\u9664\u4EE3\u7801: <span class=\"code-string\">'\u5220\u9664\u4EE3\u7801'</span>,\n","              \u4FEE\u6539\u4EE3\u7801: <span class=\"code-string\">'\u4FEE\u6539\u4EE3\u7801'</span>,\n","              \u63D2\u5165\u4EE3\u7801: <span class=\"code-string\">'\u63D2\u5165\u4EE3\u7801'</span>\n","            }\n","          }\n","        },\n","        validate: {\n","          \u5F20\u56FE\u7247: <span class=\"code-string\">'\u5F20\u56FE\u7247'</span>,\n","          \u5927\u4E8E: <span class=\"code-string\">'\u5927\u4E8E'</span>,\n","          \u56FE\u7247\u94FE\u63A5: <span class=\"code-string\">'\u56FE\u7247\u94FE\u63A5'</span>,\n","          \u4E0D\u662F\u56FE\u7247: <span class=\"code-string\">'\u4E0D\u662F\u56FE\u7247'</span>,\n","          \u8FD4\u56DE\u7ED3\u679C: <span class=\"code-string\">'\u8FD4\u56DE\u7ED3\u679C'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u8D85\u65F6: <span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u8D85\u65F6'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u9519\u8BEF: <span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u9519\u8BEF'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u5931\u8D25: <span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u5931\u8D25'</span>,\n","          \u63D2\u5165\u56FE\u7247\u9519\u8BEF: <span class=\"code-string\">'\u63D2\u5165\u56FE\u7247\u9519\u8BEF'</span>,\n","          \u4E00\u6B21\u6700\u591A\u4E0A\u4F20: <span class=\"code-string\">'\u4E00\u6B21\u6700\u591A\u4E0A\u4F20'</span>,\n","          \u4E0B\u8F7D\u94FE\u63A5\u5931\u8D25: <span class=\"code-string\">'\u4E0B\u8F7D\u94FE\u63A5\u5931\u8D25'</span>,\n","          \u56FE\u7247\u9A8C\u8BC1\u672A\u901A\u8FC7: <span class=\"code-string\">'\u56FE\u7247\u9A8C\u8BC1\u672A\u901A\u8FC7'</span>,\n","          \u670D\u52A1\u5668\u8FD4\u56DE\u72B6\u6001: <span class=\"code-string\">'\u670D\u52A1\u5668\u8FD4\u56DE\u72B6\u6001'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u8FD4\u56DE\u7ED3\u679C\u9519\u8BEF: <span class=\"code-string\">'\u4E0A\u4F20\u56FE\u7247\u8FD4\u56DE\u7ED3\u679C\u9519\u8BEF'</span>,\n","          \u8BF7\u66FF\u6362\u4E3A\u652F\u6301\u7684\u56FE\u7247\u7C7B\u578B: <span class=\"code-string\">'\u8BF7\u66FF\u6362\u4E3A\u652F\u6301\u7684\u56FE\u7247\u7C7B\u578B'</span>,\n","          \u60A8\u63D2\u5165\u7684\u7F51\u7EDC\u56FE\u7247\u65E0\u6CD5\u8BC6\u522B: <span class=\"code-string\">'\u60A8\u63D2\u5165\u7684\u7F51\u7EDC\u56FE\u7247\u65E0\u6CD5\u8BC6\u522B'</span>,\n","          \u60A8\u521A\u624D\u63D2\u5165\u7684\u56FE\u7247\u94FE\u63A5\u672A\u901A\u8FC7\u7F16\u8F91\u5668\u6821\u9A8C: <span class=\"code-string\">'\u60A8\u521A\u624D\u63D2\u5165\u7684\u56FE\u7247\u94FE\u63A5\u672A\u901A\u8FC7\u7F16\u8F91\u5668\u6821\u9A8C'</span>\n","        }\n","      }\n","    },\n","    en: {\n","      wangEditor: {\n","        \u91CD\u7F6E: <span class=\"code-string\">'reset'</span>,\n","        \u63D2\u5165: <span class=\"code-string\">'insert'</span>,\n","        \u9ED8\u8BA4: <span class=\"code-string\">'default'</span>,\n","        \u521B\u5EFA: <span class=\"code-string\">'create'</span>,\n","        \u4FEE\u6539: <span class=\"code-string\">'edit'</span>,\n","        \u5982: <span class=\"code-string\">'like'</span>,\n","        \u8BF7\u8F93\u5165\u6B63\u6587: <span class=\"code-string\">'please enter the text'</span>,\n","        menus: {\n","          title: {\n","            \u6807\u9898: <span class=\"code-string\">'head'</span>,\n","            \u52A0\u7C97: <span class=\"code-string\">'bold'</span>,\n","            \u5B57\u53F7: <span class=\"code-string\">'font size'</span>,\n","            \u5B57\u4F53: <span class=\"code-string\">'font family'</span>,\n","            \u659C\u4F53: <span class=\"code-string\">'italic'</span>,\n","            \u4E0B\u5212\u7EBF: <span class=\"code-string\">'underline'</span>,\n","            \u5220\u9664\u7EBF: <span class=\"code-string\">'strikethrough'</span>,\n","            \u7F29\u8FDB: <span class=\"code-string\">'indent'</span>,\n","            \u884C\u9AD8: <span class=\"code-string\">'line heihgt'</span>,\n","            \u6587\u5B57\u989C\u8272: <span class=\"code-string\">'font color'</span>,\n","            \u80CC\u666F\u8272: <span class=\"code-string\">'background'</span>,\n","            \u94FE\u63A5: <span class=\"code-string\">'link'</span>,\n","            \u5E8F\u5217: <span class=\"code-string\">'numbered list'</span>,\n","            \u5BF9\u9F50: <span class=\"code-string\">'align'</span>,\n","            \u5F15\u7528: <span class=\"code-string\">'quote'</span>,\n","            \u8868\u60C5: <span class=\"code-string\">'emoticons'</span>,\n","            \u56FE\u7247: <span class=\"code-string\">'image'</span>,\n","            \u89C6\u9891: <span class=\"code-string\">'media'</span>,\n","            \u8868\u683C: <span class=\"code-string\">'table'</span>,\n","            \u4EE3\u7801: <span class=\"code-string\">'code'</span>,\n","            \u5206\u5272\u7EBF: <span class=\"code-string\">'split line'</span>,\n","            \u6062\u590D: <span class=\"code-string\">'undo'</span>,\n","            \u64A4\u9500: <span class=\"code-string\">'redo'</span>,\n","            \u5168\u5C4F: <span class=\"code-string\">'fullscreen'</span>,\n","            \u4EE3\u529E\u4E8B\u9879: <span class=\"code-string\">'todo'</span>\n","          },\n","          dropListMenu: {\n","            \u8BBE\u7F6E\u6807\u9898: <span class=\"code-string\">'title'</span>,\n","            \u80CC\u666F\u989C\u8272: <span class=\"code-string\">'background'</span>,\n","            \u6587\u5B57\u989C\u8272: <span class=\"code-string\">'font color'</span>,\n","            \u8BBE\u7F6E\u5B57\u53F7: <span class=\"code-string\">'font size'</span>,\n","            \u8BBE\u7F6E\u5B57\u4F53: <span class=\"code-string\">'font family'</span>,\n","            \u8BBE\u7F6E\u7F29\u8FDB: <span class=\"code-string\">'indent'</span>,\n","            \u5BF9\u9F50\u65B9\u5F0F: <span class=\"code-string\">'align'</span>,\n","            \u8BBE\u7F6E\u884C\u9AD8: <span class=\"code-string\">'line heihgt'</span>,\n","            \u5E8F\u5217: <span class=\"code-string\">'list'</span>,\n","            head: {\n","              \u6B63\u6587: <span class=\"code-string\">'text'</span>\n","            },\n","            indent: {\n","              \u589E\u52A0\u7F29\u8FDB: <span class=\"code-string\">'indent'</span>,\n","              \u51CF\u5C11\u7F29\u8FDB: <span class=\"code-string\">'outdent'</span>\n","            },\n","            justify: {\n","              \u9760\u5DE6: <span class=\"code-string\">'left'</span>,\n","              \u5C45\u4E2D: <span class=\"code-string\">'center'</span>,\n","              \u9760\u53F3: <span class=\"code-string\">'right'</span>,\n","              \u4E24\u7AEF: <span class=\"code-string\">'justify'</span>\n","            },\n","            list: {\n","              \u65E0\u5E8F\u5217\u8868: <span class=\"code-string\">'unordered'</span>,\n","              \u6709\u5E8F\u5217\u8868: <span class=\"code-string\">'ordered'</span>\n","            }\n","          },\n","          panelMenus: {\n","            emoticon: {\n","              \u9ED8\u8BA4: <span class=\"code-string\">'default'</span>,\n","              \u65B0\u6D6A: <span class=\"code-string\">'sina'</span>,\n","              emoji: <span class=\"code-string\">'emoji'</span>,\n","              \u624B\u52BF: <span class=\"code-string\">'gesture'</span>\n","            },\n","            image: {\n","              \u56FE\u7247\u94FE\u63A5: <span class=\"code-string\">'image link'</span>,\n","              \u4E0A\u4F20\u56FE\u7247: <span class=\"code-string\">'upload image'</span>,\n","              \u7F51\u7EDC\u56FE\u7247: <span class=\"code-string\">'network image'</span>\n","            },\n","            link: {\n","              \u94FE\u63A5: <span class=\"code-string\">'link'</span>,\n","              \u94FE\u63A5\u6587\u5B57: <span class=\"code-string\">'link text'</span>,\n","              \u53D6\u6D88\u94FE\u63A5: <span class=\"code-string\">'unlink'</span>,\n","              \u67E5\u770B\u94FE\u63A5: <span class=\"code-string\">'view links'</span>\n","            },\n","            video: {\n","              \u63D2\u5165\u89C6\u9891: <span class=\"code-string\">'insert video'</span>\n","            },\n","            table: {\n","              \u884C: <span class=\"code-string\">'rows'</span>,\n","              \u5217: <span class=\"code-string\">'columns'</span>,\n","              \u7684: <span class=\"code-string\">' '</span>,\n","              \u8868\u683C: <span class=\"code-string\">'table'</span>,\n","              \u6DFB\u52A0\u884C: <span class=\"code-string\">'insert row'</span>,\n","              \u5220\u9664\u884C: <span class=\"code-string\">'delete row'</span>,\n","              \u6DFB\u52A0\u5217: <span class=\"code-string\">'insert column'</span>,\n","              \u5220\u9664\u5217: <span class=\"code-string\">'delete column'</span>,\n","              \u8BBE\u7F6E\u8868\u5934: <span class=\"code-string\">'set header'</span>,\n","              \u53D6\u6D88\u8868\u5934: <span class=\"code-string\">'cancel header'</span>,\n","              \u63D2\u5165\u8868\u683C: <span class=\"code-string\">'insert table'</span>,\n","              \u5220\u9664\u8868\u683C: <span class=\"code-string\">'delete table'</span>\n","            },\n","            code: {\n","              \u5220\u9664\u4EE3\u7801: <span class=\"code-string\">'delete code'</span>,\n","              \u4FEE\u6539\u4EE3\u7801: <span class=\"code-string\">'edit code'</span>,\n","              \u63D2\u5165\u4EE3\u7801: <span class=\"code-string\">'insert code'</span>\n","            }\n","          }\n","        },\n","        validate: {\n","          \u5F20\u56FE\u7247: <span class=\"code-string\">'images'</span>,\n","          \u5927\u4E8E: <span class=\"code-string\">'greater than'</span>,\n","          \u56FE\u7247\u94FE\u63A5: <span class=\"code-string\">'image link'</span>,\n","          \u4E0D\u662F\u56FE\u7247: <span class=\"code-string\">'is not image'</span>,\n","          \u8FD4\u56DE\u7ED3\u679C: <span class=\"code-string\">'return results'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u8D85\u65F6: <span class=\"code-string\">'upload image timeout'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u9519\u8BEF: <span class=\"code-string\">'upload image error'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u5931\u8D25: <span class=\"code-string\">'upload image failed'</span>,\n","          \u63D2\u5165\u56FE\u7247\u9519\u8BEF: <span class=\"code-string\">'insert image error'</span>,\n","          \u4E00\u6B21\u6700\u591A\u4E0A\u4F20: <span class=\"code-string\">'once most at upload'</span>,\n","          \u4E0B\u8F7D\u94FE\u63A5\u5931\u8D25: <span class=\"code-string\">'download link failed'</span>,\n","          \u56FE\u7247\u9A8C\u8BC1\u672A\u901A\u8FC7: <span class=\"code-string\">'image validate failed'</span>,\n","          \u670D\u52A1\u5668\u8FD4\u56DE\u72B6\u6001: <span class=\"code-string\">'server return status'</span>,\n","          \u4E0A\u4F20\u56FE\u7247\u8FD4\u56DE\u7ED3\u679C\u9519\u8BEF: <span class=\"code-string\">'upload image return results error'</span>,\n","          \u8BF7\u66FF\u6362\u4E3A\u652F\u6301\u7684\u56FE\u7247\u7C7B\u578B: <span class=\"code-string\">'please replace with a supported image type'</span>,\n","          \u60A8\u63D2\u5165\u7684\u7F51\u7EDC\u56FE\u7247\u65E0\u6CD5\u8BC6\u522B: <span class=\"code-string\">'the network picture you inserted is not recognized'</span>,\n","          \u60A8\u521A\u624D\u63D2\u5165\u7684\u56FE\u7247\u94FE\u63A5\u672A\u901A\u8FC7\u7F16\u8F91\u5668\u6821\u9A8C: <span class=\"code-string\">'the image link you just inserted did not pass the editor verification'</span>\n","        }\n","      }\n","    }\n","  }\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 279 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u5386\u53F2\u8BB0\u5F55 - \u6570\u636E\u7F13\u5B58\u7684\u6A21\u5F0F\n</span>","<span class=\"code-comment\"> * @author fangzhicong\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> util_1 = __webpack_require__(<span class=\"code-number\">7</span>);\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * \u662F\u5426\u4E3A\u517C\u5BB9\u6A21\u5F0F\u3002\u8FD4\u56DE true \u8868\u793A\u5F53\u524D\u4F7F\u7528\u517C\u5BB9\uFF08\u5185\u5BB9\u5907\u4EFD\uFF09\u6A21\u5F0F\uFF0C\u5426\u5219\u4F7F\u7528\u6807\u51C6\uFF08\u5DEE\u5F02\u5907\u4EFD\uFF09\u6A21\u5F0F\n</span>","<span class=\"code-comment\"> */</span>\n","\n","\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">compatibleMode</span>(<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-keyword\">if</span> (util_1.UA.isIE() || util_1.UA.isOldEdge) {\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  }\n","\n","  <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","}\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  compatibleMode: compatibleMode,\n","  historyMaxSize: <span class=\"code-number\">30</span>\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 280 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description \u89C6\u9891\u76F8\u5173\u7684\u914D\u7F6E\n</span>","<span class=\"code-comment\"> * @author hutianhao\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","\n","<span class=\"code-keyword\">var</span> const_1 = __webpack_require__(<span class=\"code-number\">26</span>);\n","\n","exports[<span class=\"code-string\">\"default\"</span>] = {\n","  <span class=\"code-comment\">// \u63D2\u5165\u7F51\u7EDC\u89C6\u9891\u524D\u7684\u56DE\u8C03\u51FD\u6570</span>\n","  onlineVideoCheck: <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">onlineVideoCheck</span>(<span class=\"code-params\">video</span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","  },\n","  <span class=\"code-comment\">// \u63D2\u5165\u7F51\u7EDC\u89C6\u9891\u6210\u529F\u4E4B\u540E\u7684\u56DE\u8C03\u51FD\u6570</span>\n","  onlineVideoCallback: const_1.EMPTY_FN\n","};\n","\n","<span class=\"code-comment\">/***/</span> }),\n","<span class=\"code-comment\">/* 281 */</span>\n","<span class=\"code-comment\">/***/</span> (<span class=\"code-function\"><span class=\"code-keyword\">function</span>(<span class=\"code-params\">module, exports, __webpack_require__</span>) </span>{\n","\n","<span class=\"code-meta\">\"use strict\"</span>;\n","\n","\n","<span class=\"code-keyword\">var</span> _interopRequireDefault = __webpack_require__(<span class=\"code-number\">0</span>);\n","\n","<span class=\"code-keyword\">var</span> _trim = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">19</span>));\n","\n","<span class=\"code-keyword\">var</span> _defineProperty = _interopRequireDefault(__webpack_require__(<span class=\"code-number\">1</span>));\n","\n","<span class=\"code-keyword\">var</span> __importDefault = <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> &amp;&amp; (<span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>).__importDefault || <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">mod</span>) </span>{\n","  <span class=\"code-keyword\">return</span> mod &amp;&amp; mod.__esModule ? mod : {\n","    <span class=\"code-string\">\"default\"</span>: mod\n","  };\n","};\n","\n","(<span class=\"code-number\">0</span>, _defineProperty[<span class=\"code-string\">\"default\"</span>])(exports, <span class=\"code-string\">\"__esModule\"</span>, {\n","  value: <span class=\"code-literal\">true</span>\n","});\n","<span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\"> * @description selection range API\n</span>","<span class=\"code-comment\"> * @author wangfupeng\n</span>","<span class=\"code-comment\"> */</span>\n","\n","<span class=\"code-keyword\">var</span> dom_core_1 = __importDefault(__webpack_require__(<span class=\"code-number\">2</span>));\n","\n","<span class=\"code-keyword\">var</span> util_1 = __webpack_require__(<span class=\"code-number\">7</span>);\n","\n","<span class=\"code-keyword\">var</span> index_1 = __importDefault(__webpack_require__(<span class=\"code-number\">282</span>));\n","\n","<span class=\"code-keyword\">var</span> SelectionAndRange =\n","<span class=\"code-comment\">/** @class */</span>\n","<span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","  <span class=\"code-function\"><span class=\"code-keyword\">function</span> <span class=\"code-title\">SelectionAndRange</span>(<span class=\"code-params\">editor</span>) </span>{\n","    <span class=\"code-keyword\">this</span>._currentRange = <span class=\"code-literal\">null</span>;\n","    <span class=\"code-keyword\">this</span>.editor = editor;\n","  }\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5F53\u524D range\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.getRange = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">return</span> <span class=\"code-keyword\">this</span>._currentRange;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u4FDD\u5B58\u9009\u533A\u8303\u56F4\n</span>","<span class=\"code-comment\">   * @param _range \u9009\u533A\u8303\u56F4\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.saveRange = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">_range</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (_range) {\n","      <span class=\"code-comment\">// \u4FDD\u5B58\u5DF2\u6709\u9009\u533A</span>\n","      <span class=\"code-keyword\">this</span>._currentRange = _range;\n","      <span class=\"code-keyword\">return</span>;\n","    } <span class=\"code-comment\">// \u83B7\u53D6\u5F53\u524D\u7684\u9009\u533A</span>\n","\n","\n","    <span class=\"code-keyword\">var</span> selection = <span class=\"code-built_in\">window</span>.getSelection();\n","\n","    <span class=\"code-keyword\">if</span> (selection.rangeCount === <span class=\"code-number\">0</span>) {\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> range = selection.getRangeAt(<span class=\"code-number\">0</span>); <span class=\"code-comment\">// \u83B7\u53D6\u9009\u533A\u8303\u56F4\u7684 DOM \u5143\u7D20</span>\n","\n","    <span class=\"code-keyword\">var</span> $containerElem = <span class=\"code-keyword\">this</span>.getSelectionContainerElem(range);\n","\n","    <span class=\"code-keyword\">if</span> (!$containerElem) {\n","      <span class=\"code-comment\">// \u5F53 \u9009\u533A\u8303\u56F4\u5185\u6CA1\u6709 DOM\u5143\u7D20 \u5219\u629B\u51FA</span>\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">if</span> ($containerElem.attr(<span class=\"code-string\">'contenteditable'</span>) === <span class=\"code-string\">'false'</span> || $containerElem.parentUntil(<span class=\"code-string\">'[contenteditable=false]'</span>)) {\n","      <span class=\"code-comment\">// \u8FD9\u91CC\u5927\u4F53\u610F\u4E49\u4E0A\u5C31\u662F\u4E2A\u4FDD\u9669</span>\n","      <span class=\"code-comment\">// \u786E\u4FDD \u7F16\u8F91\u533A\u57DF \u7684 contenteditable\u5C5E\u6027 \u7684\u503C\u4E3A true</span>\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> editor = <span class=\"code-keyword\">this</span>.editor;\n","    <span class=\"code-keyword\">var</span> $textElem = editor.$textElem;\n","\n","    <span class=\"code-keyword\">if</span> ($textElem.isContain($containerElem)) {\n","      <span class=\"code-keyword\">if</span> ($textElem.elems[<span class=\"code-number\">0</span>] === $containerElem.elems[<span class=\"code-number\">0</span>]) {\n","        <span class=\"code-keyword\">var</span> _context;\n","\n","        <span class=\"code-keyword\">if</span> ((<span class=\"code-number\">0</span>, _trim[<span class=\"code-string\">\"default\"</span>])(_context = $textElem.html()).call(_context) === <span class=\"code-string\">'&lt;p&gt;&lt;br&gt;&lt;/p&gt;'</span>) {\n","          <span class=\"code-keyword\">var</span> $children = $textElem.children();\n","          <span class=\"code-keyword\">var</span> $last = $children === <span class=\"code-literal\">null</span> || $children === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : $children.last();\n","          editor.selection.createRangeByElem($last, <span class=\"code-literal\">true</span>, <span class=\"code-literal\">true</span>);\n","          editor.selection.restoreSelection();\n","        }\n","      } <span class=\"code-comment\">// \u662F\u7F16\u8F91\u5185\u5BB9\u4E4B\u5185\u7684</span>\n","\n","\n","      <span class=\"code-keyword\">this</span>._currentRange = range;\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6298\u53E0\u9009\u533A\u8303\u56F4\n</span>","<span class=\"code-comment\">   * @param toStart true \u5F00\u59CB\u4F4D\u7F6E\uFF0Cfalse \u7ED3\u675F\u4F4D\u7F6E\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.collapseRange = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">toStart</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (toStart === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span>) {\n","      toStart = <span class=\"code-literal\">false</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> range = <span class=\"code-keyword\">this</span>._currentRange;\n","\n","    <span class=\"code-keyword\">if</span> (range) {\n","      range.collapse(toStart);\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u9009\u533A\u8303\u56F4\u5185\u7684\u6587\u5B57\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.getSelectionText = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> range = <span class=\"code-keyword\">this</span>._currentRange;\n","\n","    <span class=\"code-keyword\">if</span> (range) {\n","      <span class=\"code-keyword\">return</span> range.toString();\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-keyword\">return</span> <span class=\"code-string\">''</span>;\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u9009\u533A\u8303\u56F4\u7684 DOM \u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param range \u9009\u533A\u8303\u56F4\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.getSelectionContainerElem = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">range</span>) </span>{\n","    <span class=\"code-keyword\">var</span> r;\n","    r = range || <span class=\"code-keyword\">this</span>._currentRange;\n","    <span class=\"code-keyword\">var</span> elem;\n","\n","    <span class=\"code-keyword\">if</span> (r) {\n","      elem = r.commonAncestorContainer;\n","      <span class=\"code-keyword\">return</span> dom_core_1[<span class=\"code-string\">\"default\"</span>](elem.nodeType === <span class=\"code-number\">1</span> ? elem : elem.parentNode);\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u9009\u533A\u8303\u56F4\u5F00\u59CB\u7684 DOM \u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param range \u9009\u533A\u8303\u56F4\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.getSelectionStartElem = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">range</span>) </span>{\n","    <span class=\"code-keyword\">var</span> r;\n","    r = range || <span class=\"code-keyword\">this</span>._currentRange;\n","    <span class=\"code-keyword\">var</span> elem;\n","\n","    <span class=\"code-keyword\">if</span> (r) {\n","      elem = r.startContainer;\n","      <span class=\"code-keyword\">return</span> dom_core_1[<span class=\"code-string\">\"default\"</span>](elem.nodeType === <span class=\"code-number\">1</span> ? elem : elem.parentNode);\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u9009\u533A\u8303\u56F4\u7ED3\u675F\u7684 DOM \u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param range \u9009\u533A\u8303\u56F4\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.getSelectionEndElem = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">range</span>) </span>{\n","    <span class=\"code-keyword\">var</span> r;\n","    r = range || <span class=\"code-keyword\">this</span>._currentRange;\n","    <span class=\"code-keyword\">var</span> elem;\n","\n","    <span class=\"code-keyword\">if</span> (r) {\n","      elem = r.endContainer;\n","      <span class=\"code-keyword\">return</span> dom_core_1[<span class=\"code-string\">\"default\"</span>](elem.nodeType === <span class=\"code-number\">1</span> ? elem : elem.parentNode);\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u9009\u533A\u662F\u5426\u4E3A\u7A7A\uFF08\u6CA1\u6709\u9009\u62E9\u6587\u5B57\uFF09\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.isSelectionEmpty = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> range = <span class=\"code-keyword\">this</span>._currentRange;\n","\n","    <span class=\"code-keyword\">if</span> (range &amp;&amp; range.startContainer) {\n","      <span class=\"code-keyword\">if</span> (range.startContainer === range.endContainer) {\n","        <span class=\"code-keyword\">if</span> (range.startOffset === range.endOffset) {\n","          <span class=\"code-keyword\">return</span> <span class=\"code-literal\">true</span>;\n","        }\n","      }\n","    }\n","\n","    <span class=\"code-keyword\">return</span> <span class=\"code-literal\">false</span>;\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6062\u590D\u9009\u533A\u8303\u56F4\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.restoreSelection = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> selection = <span class=\"code-built_in\">window</span>.getSelection();\n","    <span class=\"code-keyword\">var</span> r = <span class=\"code-keyword\">this</span>._currentRange;\n","\n","    <span class=\"code-keyword\">if</span> (selection &amp;&amp; r) {\n","      selection.removeAllRanges();\n","      selection.addRange(r);\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u521B\u5EFA\u4E00\u4E2A\u7A7A\u767D\uFF08\u5373 &amp;#8203 \u5B57\u7B26\uFF09\u9009\u533A\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.createEmptyRange = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"code-keyword\">var</span> editor = <span class=\"code-keyword\">this</span>.editor;\n","    <span class=\"code-keyword\">var</span> range = <span class=\"code-keyword\">this</span>.getRange();\n","    <span class=\"code-keyword\">var</span> $elem;\n","\n","    <span class=\"code-keyword\">if</span> (!range) {\n","      <span class=\"code-comment\">// \u5F53\u524D\u65E0 range</span>\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (!<span class=\"code-keyword\">this</span>.isSelectionEmpty()) {\n","      <span class=\"code-comment\">// \u5F53\u524D\u9009\u533A\u5FC5\u987B\u6CA1\u6709\u5185\u5BB9\u624D\u53EF\u4EE5\uFF0C\u6709\u5185\u5BB9\u5C31\u76F4\u63A5 return</span>\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">try</span> {\n","      <span class=\"code-comment\">// \u76EE\u524D\u53EA\u652F\u6301 webkit \u5185\u6838</span>\n","      <span class=\"code-keyword\">if</span> (util_1.UA.isWebkit()) {\n","        <span class=\"code-comment\">// \u63D2\u5165 &amp;#8203</span>\n","        editor.cmd[<span class=\"code-string\">\"do\"</span>](<span class=\"code-string\">'insertHTML'</span>, <span class=\"code-string\">'&amp;#8203;'</span>); <span class=\"code-comment\">// \u4FEE\u6539 offset \u4F4D\u7F6E</span>\n","\n","        range.setEnd(range.endContainer, range.endOffset + <span class=\"code-number\">1</span>); <span class=\"code-comment\">// \u5B58\u50A8</span>\n","\n","        <span class=\"code-keyword\">this</span>.saveRange(range);\n","      } <span class=\"code-keyword\">else</span> {\n","        $elem = dom_core_1[<span class=\"code-string\">\"default\"</span>](<span class=\"code-string\">'&lt;strong&gt;&amp;#8203;&lt;/strong&gt;'</span>);\n","        editor.cmd[<span class=\"code-string\">\"do\"</span>](<span class=\"code-string\">'insertElem'</span>, $elem);\n","        <span class=\"code-keyword\">this</span>.createRangeByElem($elem, <span class=\"code-literal\">true</span>);\n","      }\n","    } <span class=\"code-keyword\">catch</span> (ex) {<span class=\"code-comment\">// \u90E8\u5206\u60C5\u51B5\u4E0B\u4F1A\u62A5\u9519\uFF0C\u517C\u5BB9\u4E00\u4E0B</span>\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u6839\u636E DOM \u5143\u7D20\u8BBE\u7F6E\u9009\u533A\n</span>","<span class=\"code-comment\">   * @param $elem DOM \u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param toStart true \u5F00\u59CB\u4F4D\u7F6E\uFF0Cfalse \u7ED3\u675F\u4F4D\u7F6E\n</span>","<span class=\"code-comment\">   * @param isContent \u662F\u5426\u9009\u4E2D $elem \u7684\u5185\u5BB9\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.createRangeByElem = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">$elem, toStart, isContent</span>) </span>{\n","    <span class=\"code-keyword\">if</span> (!$elem.length) {\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">var</span> elem = $elem.elems[<span class=\"code-number\">0</span>];\n","    <span class=\"code-keyword\">var</span> range = <span class=\"code-built_in\">document</span>.createRange();\n","\n","    <span class=\"code-keyword\">if</span> (isContent) {\n","      range.selectNodeContents(elem);\n","    } <span class=\"code-keyword\">else</span> {\n","      <span class=\"code-comment\">// \u5982\u679C\u7528\u6237\u6CA1\u6709\u4F20\u5165 isContent \u53C2\u6570\uFF0C\u90A3\u5C31\u9ED8\u8BA4\u4E3A false</span>\n","      range.selectNode(elem);\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (toStart != <span class=\"code-literal\">null</span>) {\n","      <span class=\"code-comment\">// \u4F20\u5165\u4E86 toStart \u53C2\u6570\uFF0C\u6298\u53E0\u9009\u533A\u3002\u5982\u679C\u6CA1\u4F20\u5165 toStart \u53C2\u6570\uFF0C\u5219\u5FFD\u7565\u8FD9\u4E00\u6B65</span>\n","      range.collapse(toStart);\n","    } <span class=\"code-comment\">// \u5B58\u50A8 range</span>\n","\n","\n","    <span class=\"code-keyword\">this</span>.saveRange(range);\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6 \u5F53\u524D \u9009\u53D6\u8303\u56F4\u7684 \u9876\u7EA7(\u6BB5\u843D) \u5143\u7D20\n</span>","<span class=\"code-comment\">   * @param $editor\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.getSelectionRangeTopNodes = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">editor</span>) </span>{\n","    <span class=\"code-keyword\">var</span> item = <span class=\"code-keyword\">new</span> index_1[<span class=\"code-string\">\"default\"</span>](editor);\n","    item.init();\n","    <span class=\"code-keyword\">return</span> item.getSelectionNodes();\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u79FB\u52A8\u5149\u6807\u4F4D\u7F6E,\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5728\u5C3E\u90E8\n</span>","<span class=\"code-comment\">   * \u6709\u4E00\u4E2A\u7279\u6B8A\u60C5\u51B5\u662Ffirefox\u4E0B\u7684\u6587\u672C\u8282\u70B9\u4F1A\u81EA\u52A8\u8865\u5145\u4E00\u4E2Abr\u5143\u7D20\uFF0C\u4F1A\u5BFC\u81F4\u81EA\u52A8\u6362\u884C\n</span>","<span class=\"code-comment\">   * \u6240\u4EE5\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5728firefox\u4E0B\u7684\u6587\u672C\u8282\u70B9\u4F1A\u81EA\u52A8\u79FB\u52A8\u5230br\u524D\u9762\n</span>","<span class=\"code-comment\">   * @param {Node} node \u5143\u7D20\u8282\u70B9\n</span>","<span class=\"code-comment\">   * @param {number} position \u5149\u6807\u7684\u4F4D\u7F6E\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.moveCursor = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\">node, position</span>) </span>{\n","    <span class=\"code-keyword\">var</span> _a;\n","\n","    <span class=\"code-keyword\">var</span> range = <span class=\"code-keyword\">this</span>.getRange(); <span class=\"code-comment\">//\u5BF9\u6587\u672C\u8282\u70B9\u7279\u6B8A\u5904\u7406</span>\n","\n","    <span class=\"code-keyword\">var</span> len = node.nodeType === <span class=\"code-number\">3</span> ? (_a = node.nodeValue) === <span class=\"code-literal\">null</span> || _a === <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> : _a.length : node.childNodes.length;\n","\n","    <span class=\"code-keyword\">if</span> ((util_1.UA.isFirefox || util_1.UA.isIE()) &amp;&amp; len !== <span class=\"code-number\">0</span>) {\n","      <span class=\"code-comment\">// firefox\u4E0B\u5728\u8282\u70B9\u4E3A\u6587\u672C\u8282\u70B9\u548C\u8282\u70B9\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E3A\u6587\u672C\u8282\u70B9\u7684\u60C5\u51B5\u4E0B</span>\n","      <span class=\"code-keyword\">if</span> (node.nodeType === <span class=\"code-number\">3</span> || node.childNodes[len - <span class=\"code-number\">1</span>].nodeName === <span class=\"code-string\">'BR'</span>) {\n","        len = len - <span class=\"code-number\">1</span>;\n","      }\n","    }\n","\n","    <span class=\"code-keyword\">var</span> pos = position !== <span class=\"code-literal\">null</span> &amp;&amp; position !== <span class=\"code-keyword\">void</span> <span class=\"code-number\">0</span> ? position : len;\n","\n","    <span class=\"code-keyword\">if</span> (!range) {\n","      <span class=\"code-keyword\">return</span>;\n","    }\n","\n","    <span class=\"code-keyword\">if</span> (node) {\n","      range.setStart(node, pos);\n","      range.setEnd(node, pos);\n","      <span class=\"code-keyword\">this</span>.restoreSelection();\n","    }\n","  };\n","  <span class=\"code-comment\">/**\n</span>","<span class=\"code-comment\">   * \u83B7\u53D6\u5149\u6807\u5728\u5F53\u524D\u9009\u533A\u7684\u4F4D\u7F6E\n</span>","<span class=\"code-comment\">   */</span>\n","\n","\n","  SelectionAndRange.prototype.getCursorPos = <span class=\"code-function\"><span class=\"code-keyword\">function</span> (<span class=\"code-params\"></span>) </span>{\n","    <span class=\"co